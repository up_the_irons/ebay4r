require 'xsd/qname'

module EBay


# {urn:ebay:apis:eBLBaseComponents}AbstractRequestType
# abstract
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   disputeExplanation - EBay::DisputeExplanationCodeType
#   disputeReason - EBay::DisputeReasonCodeType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   orderLineItemID - SOAP::SOAPString
class AddDisputeRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :disputeExplanation
  attr_accessor :disputeReason
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, disputeExplanation = nil, disputeReason = nil, itemID = nil, transactionID = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @disputeExplanation = disputeExplanation
    @disputeReason = disputeReason
    @itemID = itemID
    @transactionID = transactionID
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   disputeID - (any)
#   messageText - SOAP::SOAPString
#   disputeActivity - EBay::DisputeActivityCodeType
#   shippingCarrierUsed - SOAP::SOAPString
#   shipmentTrackNumber - SOAP::SOAPString
#   shippingTime - SOAP::SOAPDateTime
class AddDisputeResponseRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :disputeID
  attr_accessor :messageText
  attr_accessor :disputeActivity
  attr_accessor :shippingCarrierUsed
  attr_accessor :shipmentTrackNumber
  attr_accessor :shippingTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, disputeID = nil, messageText = nil, disputeActivity = nil, shippingCarrierUsed = nil, shipmentTrackNumber = nil, shippingTime = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @disputeID = disputeID
    @messageText = messageText
    @disputeActivity = disputeActivity
    @shippingCarrierUsed = shippingCarrierUsed
    @shipmentTrackNumber = shipmentTrackNumber
    @shippingTime = shippingTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddFixedPriceItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   item - EBay::ItemType
class AddFixedPriceItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   item - EBay::ItemType
class AddItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemFromSellingManagerTemplateRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   saleTemplateID - SOAP::SOAPLong
#   scheduleTime - SOAP::SOAPDateTime
#   item - EBay::ItemType
class AddItemFromSellingManagerTemplateRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :saleTemplateID
  attr_accessor :scheduleTime
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, saleTemplateID = nil, scheduleTime = nil, item = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @saleTemplateID = saleTemplateID
    @scheduleTime = scheduleTime
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   addItemRequestContainer - EBay::AddItemRequestContainerType
class AddItemsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :addItemRequestContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, addItemRequestContainer = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @addItemRequestContainer = addItemRequestContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageAAQToPartnerRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   memberMessage - EBay::MemberMessageType
class AddMemberMessageAAQToPartnerRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :memberMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, memberMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @memberMessage = memberMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageRTQRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   memberMessage - EBay::MemberMessageType
class AddMemberMessageRTQRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :memberMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, memberMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @memberMessage = memberMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   addMemberMessagesAAQToBidderRequestContainer - EBay::AddMemberMessagesAAQToBidderRequestContainerType
class AddMemberMessagesAAQToBidderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :addMemberMessagesAAQToBidderRequestContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, addMemberMessagesAAQToBidderRequestContainer = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @addMemberMessagesAAQToBidderRequestContainer = addMemberMessagesAAQToBidderRequestContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddOrderRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   order - EBay::OrderType
class AddOrderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :order

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, order = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @order = order
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSecondChanceItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   recipientBidderUserID - (any)
#   buyItNowPrice - EBay::AmountType
#   duration - EBay::SecondChanceOfferDurationCodeType
#   itemID - (any)
#   sellerMessage - SOAP::SOAPString
class AddSecondChanceItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :recipientBidderUserID
  attr_accessor :buyItNowPrice
  attr_accessor :duration
  attr_accessor :itemID
  attr_accessor :sellerMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, recipientBidderUserID = nil, buyItNowPrice = nil, duration = nil, itemID = nil, sellerMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @recipientBidderUserID = recipientBidderUserID
    @buyItNowPrice = buyItNowPrice
    @duration = duration
    @itemID = itemID
    @sellerMessage = sellerMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSellingManagerInventoryFolderRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   folderName - SOAP::SOAPString
#   parentFolderID - SOAP::SOAPLong
#   comment - SOAP::SOAPString
class AddSellingManagerInventoryFolderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :folderName
  attr_accessor :parentFolderID
  attr_accessor :comment

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, folderName = nil, parentFolderID = nil, comment = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @folderName = folderName
    @parentFolderID = parentFolderID
    @comment = comment
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSellingManagerProductRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   sellingManagerProductDetails - EBay::SellingManagerProductDetailsType
#   folderID - SOAP::SOAPLong
#   sellingManagerProductSpecifics - EBay::SellingManagerProductSpecificsType
class AddSellingManagerProductRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :sellingManagerProductDetails
  attr_accessor :folderID
  attr_accessor :sellingManagerProductSpecifics

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, sellingManagerProductDetails = nil, folderID = nil, sellingManagerProductSpecifics = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @sellingManagerProductDetails = sellingManagerProductDetails
    @folderID = folderID
    @sellingManagerProductSpecifics = sellingManagerProductSpecifics
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSellingManagerTemplateRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   item - EBay::ItemType
#   saleTemplateName - SOAP::SOAPString
#   productID - SOAP::SOAPLong
class AddSellingManagerTemplateRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :saleTemplateName
  attr_accessor :productID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, saleTemplateName = nil, productID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @saleTemplateName = saleTemplateName
    @productID = productID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToItemDescriptionRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   description - SOAP::SOAPString
class AddToItemDescriptionRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :description

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, description = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @description = description
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToWatchListRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   variationKey - EBay::VariationKeyType
class AddToWatchListRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :variationKey

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = [], variationKey = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @variationKey = variationKey
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddTransactionConfirmationItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   recipientUserID - (any)
#   verifyEligibilityOnly - SOAP::SOAPString
#   recipientPostalCode - SOAP::SOAPString
#   recipientRelationType - EBay::RecipientRelationCodeType
#   negotiatedPrice - EBay::AmountType
#   listingDuration - EBay::SecondChanceOfferDurationCodeType
#   itemID - (any)
#   comments - SOAP::SOAPString
class AddTransactionConfirmationItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :recipientUserID
  attr_accessor :verifyEligibilityOnly
  attr_accessor :recipientPostalCode
  attr_accessor :recipientRelationType
  attr_accessor :negotiatedPrice
  attr_accessor :listingDuration
  attr_accessor :itemID
  attr_accessor :comments

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, recipientUserID = nil, verifyEligibilityOnly = nil, recipientPostalCode = nil, recipientRelationType = nil, negotiatedPrice = nil, listingDuration = nil, itemID = nil, comments = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @recipientUserID = recipientUserID
    @verifyEligibilityOnly = verifyEligibilityOnly
    @recipientPostalCode = recipientPostalCode
    @recipientRelationType = recipientRelationType
    @negotiatedPrice = negotiatedPrice
    @listingDuration = listingDuration
    @itemID = itemID
    @comments = comments
  end
end

# {urn:ebay:apis:eBLBaseComponents}CompleteSaleRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   feedbackInfo - EBay::FeedbackInfoType
#   shipped - SOAP::SOAPBoolean
#   paid - SOAP::SOAPBoolean
#   listingType - EBay::ListingTypeCodeType
#   shipment - EBay::ShipmentType
#   orderID - SOAP::SOAPString
#   orderLineItemID - SOAP::SOAPString
class CompleteSaleRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :feedbackInfo
  attr_accessor :shipped
  attr_accessor :paid
  attr_accessor :listingType
  attr_accessor :shipment
  attr_accessor :orderID
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, feedbackInfo = nil, shipped = nil, paid = nil, listingType = nil, shipment = nil, orderID = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @feedbackInfo = feedbackInfo
    @shipped = shipped
    @paid = paid
    @listingType = listingType
    @shipment = shipment
    @orderID = orderID
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ConfirmIdentityRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   sessionID - SOAP::SOAPString
class ConfirmIdentityRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :sessionID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, sessionID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @sessionID = sessionID
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteMyMessagesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   alertIDs - EBay::MyMessagesAlertIDArrayType
#   messageIDs - EBay::MyMessagesMessageIDArrayType
class DeleteMyMessagesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :alertIDs
  attr_accessor :messageIDs

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, alertIDs = nil, messageIDs = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @alertIDs = alertIDs
    @messageIDs = messageIDs
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteSellingManagerInventoryFolderRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   folderID - SOAP::SOAPLong
class DeleteSellingManagerInventoryFolderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :folderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, folderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @folderID = folderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteSellingManagerItemAutomationRuleRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   deleteAutomatedRelistingRule - SOAP::SOAPBoolean
#   deleteAutomatedSecondChanceOfferRule - SOAP::SOAPBoolean
class DeleteSellingManagerItemAutomationRuleRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :deleteAutomatedRelistingRule
  attr_accessor :deleteAutomatedSecondChanceOfferRule

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, deleteAutomatedRelistingRule = nil, deleteAutomatedSecondChanceOfferRule = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @deleteAutomatedRelistingRule = deleteAutomatedRelistingRule
    @deleteAutomatedSecondChanceOfferRule = deleteAutomatedSecondChanceOfferRule
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteSellingManagerProductRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   productID - SOAP::SOAPLong
class DeleteSellingManagerProductRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :productID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, productID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @productID = productID
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteSellingManagerTemplateRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   saleTemplateID - SOAP::SOAPLong
class DeleteSellingManagerTemplateRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :saleTemplateID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, saleTemplateID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @saleTemplateID = saleTemplateID
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteSellingManagerTemplateAutomationRuleRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   saleTemplateID - SOAP::SOAPLong
#   deleteAutomatedListingRule - SOAP::SOAPBoolean
#   deleteAutomatedRelistingRule - SOAP::SOAPBoolean
#   deleteAutomatedSecondChanceOfferRule - SOAP::SOAPBoolean
class DeleteSellingManagerTemplateAutomationRuleRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :saleTemplateID
  attr_accessor :deleteAutomatedListingRule
  attr_accessor :deleteAutomatedRelistingRule
  attr_accessor :deleteAutomatedSecondChanceOfferRule

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, saleTemplateID = nil, deleteAutomatedListingRule = nil, deleteAutomatedRelistingRule = nil, deleteAutomatedSecondChanceOfferRule = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @saleTemplateID = saleTemplateID
    @deleteAutomatedListingRule = deleteAutomatedListingRule
    @deleteAutomatedRelistingRule = deleteAutomatedRelistingRule
    @deleteAutomatedSecondChanceOfferRule = deleteAutomatedSecondChanceOfferRule
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisableUnpaidItemAssistanceRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   disputeID - (any)
#   orderLineItemID - SOAP::SOAPString
class DisableUnpaidItemAssistanceRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :disputeID
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, disputeID = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @disputeID = disputeID
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndFixedPriceItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   endingReason - EBay::EndReasonCodeType
#   sKU - (any)
class EndFixedPriceItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :endingReason
  attr_accessor :sKU

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, endingReason = nil, sKU = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @endingReason = endingReason
    @sKU = sKU
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   endingReason - EBay::EndReasonCodeType
#   sellerInventoryID - SOAP::SOAPString
class EndItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :endingReason
  attr_accessor :sellerInventoryID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, endingReason = nil, sellerInventoryID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @endingReason = endingReason
    @sellerInventoryID = sellerInventoryID
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   endItemRequestContainer - EBay::EndItemRequestContainerType
class EndItemsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :endItemRequestContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, endItemRequestContainer = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @endItemRequestContainer = endItemRequestContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExtendSiteHostedPicturesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   pictureURL - SOAP::SOAPAnyURI
#   extensionInDays - SOAP::SOAPInt
class ExtendSiteHostedPicturesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :pictureURL
  attr_accessor :extensionInDays

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, pictureURL = [], extensionInDays = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @pictureURL = pictureURL
    @extensionInDays = extensionInDays
  end
end

# {urn:ebay:apis:eBLBaseComponents}FetchTokenRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   secretID - SOAP::SOAPString
#   sessionID - SOAP::SOAPString
class FetchTokenRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :secretID
  attr_accessor :sessionID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, secretID = nil, sessionID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @secretID = secretID
    @sessionID = sessionID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAccountRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   accountHistorySelection - EBay::AccountHistorySelectionCodeType
#   invoiceDate - SOAP::SOAPDateTime
#   beginDate - SOAP::SOAPDateTime
#   endDate - SOAP::SOAPDateTime
#   pagination - EBay::PaginationType
#   excludeBalance - SOAP::SOAPBoolean
#   excludeSummary - SOAP::SOAPBoolean
#   includeConversionRate - SOAP::SOAPBoolean
#   accountEntrySortType - EBay::AccountEntrySortTypeCodeType
#   currency - EBay::CurrencyCodeType
#   itemID - (any)
class GetAccountRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :accountHistorySelection
  attr_accessor :invoiceDate
  attr_accessor :beginDate
  attr_accessor :endDate
  attr_accessor :pagination
  attr_accessor :excludeBalance
  attr_accessor :excludeSummary
  attr_accessor :includeConversionRate
  attr_accessor :accountEntrySortType
  attr_accessor :currency
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, accountHistorySelection = nil, invoiceDate = nil, beginDate = nil, endDate = nil, pagination = nil, excludeBalance = nil, excludeSummary = nil, includeConversionRate = nil, accountEntrySortType = nil, currency = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @accountHistorySelection = accountHistorySelection
    @invoiceDate = invoiceDate
    @beginDate = beginDate
    @endDate = endDate
    @pagination = pagination
    @excludeBalance = excludeBalance
    @excludeSummary = excludeSummary
    @includeConversionRate = includeConversionRate
    @accountEntrySortType = accountEntrySortType
    @currency = currency
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAdFormatLeadsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   status - EBay::MessageStatusTypeCodeType
#   includeMemberMessages - SOAP::SOAPBoolean
#   startCreationTime - SOAP::SOAPDateTime
#   endCreationTime - SOAP::SOAPDateTime
class GetAdFormatLeadsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :status
  attr_accessor :includeMemberMessages
  attr_accessor :startCreationTime
  attr_accessor :endCreationTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, status = nil, includeMemberMessages = nil, startCreationTime = nil, endCreationTime = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @status = status
    @includeMemberMessages = includeMemberMessages
    @startCreationTime = startCreationTime
    @endCreationTime = endCreationTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   callMode - EBay::GetAllBiddersModeCodeType
#   includeBiddingSummary - SOAP::SOAPBoolean
class GetAllBiddersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :callMode
  attr_accessor :includeBiddingSummary

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, callMode = nil, includeBiddingSummary = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @callMode = callMode
    @includeBiddingSummary = includeBiddingSummary
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetApiAccessRulesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetApiAccessRulesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesCSRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   attributeSystemVersion - SOAP::SOAPString
#   attributeSetID - SOAP::SOAPInt
#   includeCategoryMappingDetails - SOAP::SOAPBoolean
class GetAttributesCSRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeSetID
  attr_accessor :includeCategoryMappingDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, attributeSystemVersion = nil, attributeSetID = [], includeCategoryMappingDetails = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeSetID = attributeSetID
    @includeCategoryMappingDetails = includeCategoryMappingDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesXSLRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   fileName - SOAP::SOAPString
#   fileVersion - SOAP::SOAPString
class GetAttributesXSLRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :fileName
  attr_accessor :fileVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, fileName = nil, fileVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @fileName = fileName
    @fileVersion = fileVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBestOffersRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   bestOfferID - (any)
#   bestOfferStatus - EBay::BestOfferStatusCodeType
#   pagination - EBay::PaginationType
class GetBestOffersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :bestOfferID
  attr_accessor :bestOfferStatus
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, bestOfferID = nil, bestOfferStatus = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @bestOfferID = bestOfferID
    @bestOfferStatus = bestOfferStatus
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBidderListRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   activeItemsOnly - SOAP::SOAPBoolean
#   endTimeFrom - SOAP::SOAPDateTime
#   endTimeTo - SOAP::SOAPDateTime
#   userID - (any)
#   granularityLevel - EBay::GranularityLevelCodeType
class GetBidderListRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :activeItemsOnly
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :userID
  attr_accessor :granularityLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, activeItemsOnly = nil, endTimeFrom = nil, endTimeTo = nil, userID = nil, granularityLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @activeItemsOnly = activeItemsOnly
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @userID = userID
    @granularityLevel = granularityLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoriesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   categorySiteID - SOAP::SOAPString
#   categoryParent - SOAP::SOAPString
#   levelLimit - SOAP::SOAPInt
#   viewAllNodes - SOAP::SOAPBoolean
class GetCategoriesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categorySiteID
  attr_accessor :categoryParent
  attr_accessor :levelLimit
  attr_accessor :viewAllNodes

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categorySiteID = nil, categoryParent = [], levelLimit = nil, viewAllNodes = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categorySiteID = categorySiteID
    @categoryParent = categoryParent
    @levelLimit = levelLimit
    @viewAllNodes = viewAllNodes
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2CSRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   attributeSystemVersion - SOAP::SOAPString
class GetCategory2CSRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :attributeSystemVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = nil, attributeSystemVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @attributeSystemVersion = attributeSystemVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryFeaturesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   levelLimit - SOAP::SOAPInt
#   viewAllNodes - SOAP::SOAPBoolean
#   featureID - EBay::FeatureIDCodeType
#   allFeaturesForCategory - SOAP::SOAPBoolean
class GetCategoryFeaturesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :levelLimit
  attr_accessor :viewAllNodes
  attr_accessor :featureID
  attr_accessor :allFeaturesForCategory

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = nil, levelLimit = nil, viewAllNodes = nil, featureID = [], allFeaturesForCategory = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @levelLimit = levelLimit
    @viewAllNodes = viewAllNodes
    @featureID = featureID
    @allFeaturesForCategory = allFeaturesForCategory
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryMappingsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   categoryVersion - SOAP::SOAPString
class GetCategoryMappingsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryVersion = categoryVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategorySpecificsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   lastUpdateTime - SOAP::SOAPDateTime
#   maxNames - SOAP::SOAPInt
#   maxValuesPerName - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   categorySpecific - EBay::CategoryItemSpecificsType
#   excludeRelationships - SOAP::SOAPBoolean
#   includeConfidence - SOAP::SOAPBoolean
#   categorySpecificsFileInfo - SOAP::SOAPBoolean
class GetCategorySpecificsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :lastUpdateTime
  attr_accessor :maxNames
  attr_accessor :maxValuesPerName
  attr_accessor :name
  attr_accessor :categorySpecific
  attr_accessor :excludeRelationships
  attr_accessor :includeConfidence
  attr_accessor :categorySpecificsFileInfo

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = [], lastUpdateTime = nil, maxNames = nil, maxValuesPerName = nil, name = nil, categorySpecific = [], excludeRelationships = nil, includeConfidence = nil, categorySpecificsFileInfo = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @lastUpdateTime = lastUpdateTime
    @maxNames = maxNames
    @maxValuesPerName = maxValuesPerName
    @name = name
    @categorySpecific = categorySpecific
    @excludeRelationships = excludeRelationships
    @includeConfidence = includeConfidence
    @categorySpecificsFileInfo = categorySpecificsFileInfo
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetChallengeTokenRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetChallengeTokenRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCharitiesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   charityID - SOAP::SOAPString
#   charityName - SOAP::SOAPString
#   query - SOAP::SOAPString
#   charityRegion - SOAP::SOAPInt
#   charityDomain - SOAP::SOAPInt
#   includeDescription - SOAP::SOAPBoolean
#   matchType - EBay::StringMatchCodeType
#   featured - SOAP::SOAPBoolean
#   campaignID - SOAP::SOAPLong
class GetCharitiesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :charityID
  attr_accessor :charityName
  attr_accessor :query
  attr_accessor :charityRegion
  attr_accessor :charityDomain
  attr_accessor :includeDescription
  attr_accessor :matchType
  attr_accessor :featured
  attr_accessor :campaignID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, charityID = nil, charityName = nil, query = nil, charityRegion = nil, charityDomain = nil, includeDescription = nil, matchType = nil, featured = nil, campaignID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @charityID = charityID
    @charityName = charityName
    @query = query
    @charityRegion = charityRegion
    @charityDomain = charityDomain
    @includeDescription = includeDescription
    @matchType = matchType
    @featured = featured
    @campaignID = campaignID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetClientAlertsAuthTokenRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetClientAlertsAuthTokenRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetContextualKeywordsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   uRL - SOAP::SOAPAnyURI
#   encoding - SOAP::SOAPString
#   categoryID - SOAP::SOAPString
class GetContextualKeywordsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :uRL
  attr_accessor :encoding
  attr_accessor :categoryID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, uRL = nil, encoding = nil, categoryID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @uRL = uRL
    @encoding = encoding
    @categoryID = categoryID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCrossPromotionsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   promotionMethod - EBay::PromotionMethodCodeType
#   promotionViewMode - EBay::TradingRoleCodeType
class GetCrossPromotionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :promotionMethod
  attr_accessor :promotionViewMode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, promotionMethod = nil, promotionViewMode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @promotionMethod = promotionMethod
    @promotionViewMode = promotionViewMode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDescriptionTemplatesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   lastModifiedTime - SOAP::SOAPDateTime
#   motorVehicles - SOAP::SOAPBoolean
class GetDescriptionTemplatesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :lastModifiedTime
  attr_accessor :motorVehicles

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = nil, lastModifiedTime = nil, motorVehicles = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @lastModifiedTime = lastModifiedTime
    @motorVehicles = motorVehicles
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDisputeRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   disputeID - (any)
class GetDisputeRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :disputeID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, disputeID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @disputeID = disputeID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFeedbackRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   userID - (any)
#   feedbackID - SOAP::SOAPString
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   commentType - EBay::CommentTypeCodeType
#   feedbackType - EBay::FeedbackTypeCodeType
#   pagination - EBay::PaginationType
#   orderLineItemID - SOAP::SOAPString
class GetFeedbackRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :feedbackID
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :commentType
  attr_accessor :feedbackType
  attr_accessor :pagination
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, userID = nil, feedbackID = nil, itemID = nil, transactionID = nil, commentType = [], feedbackType = nil, pagination = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @userID = userID
    @feedbackID = feedbackID
    @itemID = itemID
    @transactionID = transactionID
    @commentType = commentType
    @feedbackType = feedbackType
    @pagination = pagination
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetHighBiddersRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
class GetHighBiddersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   includeWatchCount - SOAP::SOAPBoolean
#   includeCrossPromotion - SOAP::SOAPBoolean
#   includeItemSpecifics - SOAP::SOAPBoolean
#   includeTaxTable - SOAP::SOAPBoolean
#   sKU - (any)
#   variationSKU - (any)
#   variationSpecifics - EBay::NameValueListArrayType
#   transactionID - SOAP::SOAPString
#   includeItemCompatibilityList - SOAP::SOAPBoolean
class GetItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :includeWatchCount
  attr_accessor :includeCrossPromotion
  attr_accessor :includeItemSpecifics
  attr_accessor :includeTaxTable
  attr_accessor :sKU
  attr_accessor :variationSKU
  attr_accessor :variationSpecifics
  attr_accessor :transactionID
  attr_accessor :includeItemCompatibilityList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, includeWatchCount = nil, includeCrossPromotion = nil, includeItemSpecifics = nil, includeTaxTable = nil, sKU = nil, variationSKU = nil, variationSpecifics = nil, transactionID = nil, includeItemCompatibilityList = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @includeWatchCount = includeWatchCount
    @includeCrossPromotion = includeCrossPromotion
    @includeItemSpecifics = includeItemSpecifics
    @includeTaxTable = includeTaxTable
    @sKU = sKU
    @variationSKU = variationSKU
    @variationSpecifics = variationSpecifics
    @transactionID = transactionID
    @includeItemCompatibilityList = includeItemCompatibilityList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRecommendationsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   getRecommendationsRequestContainer - EBay::GetRecommendationsRequestContainerType
class GetItemRecommendationsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :getRecommendationsRequestContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, getRecommendationsRequestContainer = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @getRecommendationsRequestContainer = getRecommendationsRequestContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemShippingRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   quantitySold - SOAP::SOAPInt
#   destinationPostalCode - SOAP::SOAPString
#   destinationCountryCode - EBay::CountryCodeType
class GetItemShippingRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :quantitySold
  attr_accessor :destinationPostalCode
  attr_accessor :destinationCountryCode

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, quantitySold = nil, destinationPostalCode = nil, destinationCountryCode = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @quantitySold = quantitySold
    @destinationPostalCode = destinationPostalCode
    @destinationCountryCode = destinationCountryCode
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemTransactionsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   modTimeFrom - SOAP::SOAPDateTime
#   modTimeTo - SOAP::SOAPDateTime
#   transactionID - SOAP::SOAPString
#   pagination - EBay::PaginationType
#   includeFinalValueFee - SOAP::SOAPBoolean
#   includeContainingOrder - SOAP::SOAPBoolean
#   platform - EBay::TransactionPlatformCodeType
#   numberOfDays - SOAP::SOAPInt
#   includeVariations - SOAP::SOAPBoolean
#   orderLineItemID - SOAP::SOAPString
class GetItemTransactionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :transactionID
  attr_accessor :pagination
  attr_accessor :includeFinalValueFee
  attr_accessor :includeContainingOrder
  attr_accessor :platform
  attr_accessor :numberOfDays
  attr_accessor :includeVariations
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, modTimeFrom = nil, modTimeTo = nil, transactionID = nil, pagination = nil, includeFinalValueFee = nil, includeContainingOrder = nil, platform = nil, numberOfDays = nil, includeVariations = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @transactionID = transactionID
    @pagination = pagination
    @includeFinalValueFee = includeFinalValueFee
    @includeContainingOrder = includeContainingOrder
    @platform = platform
    @numberOfDays = numberOfDays
    @includeVariations = includeVariations
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemsAwaitingFeedbackRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   sort - EBay::ItemSortTypeCodeType
#   pagination - EBay::PaginationType
class GetItemsAwaitingFeedbackRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :sort
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, sort = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @sort = sort
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMemberMessagesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   mailMessageType - EBay::MessageTypeCodeType
#   messageStatus - EBay::MessageStatusTypeCodeType
#   displayToPublic - SOAP::SOAPBoolean
#   startCreationTime - SOAP::SOAPDateTime
#   endCreationTime - SOAP::SOAPDateTime
#   pagination - EBay::PaginationType
#   memberMessageID - SOAP::SOAPString
#   senderID - (any)
class GetMemberMessagesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :mailMessageType
  attr_accessor :messageStatus
  attr_accessor :displayToPublic
  attr_accessor :startCreationTime
  attr_accessor :endCreationTime
  attr_accessor :pagination
  attr_accessor :memberMessageID
  attr_accessor :senderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, mailMessageType = nil, messageStatus = nil, displayToPublic = nil, startCreationTime = nil, endCreationTime = nil, pagination = nil, memberMessageID = nil, senderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @mailMessageType = mailMessageType
    @messageStatus = messageStatus
    @displayToPublic = displayToPublic
    @startCreationTime = startCreationTime
    @endCreationTime = endCreationTime
    @pagination = pagination
    @memberMessageID = memberMessageID
    @senderID = senderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMessagePreferencesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   sellerID - (any)
#   includeASQPreferences - SOAP::SOAPBoolean
class GetMessagePreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :sellerID
  attr_accessor :includeASQPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, sellerID = nil, includeASQPreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @sellerID = sellerID
    @includeASQPreferences = includeASQPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyMessagesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   alertIDs - EBay::MyMessagesAlertIDArrayType
#   messageIDs - EBay::MyMessagesMessageIDArrayType
#   folderID - SOAP::SOAPLong
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   externalMessageIDs - EBay::MyMessagesExternalMessageIDArrayType
#   pagination - EBay::PaginationType
#   includeHighPriorityMessageOnly - SOAP::SOAPBoolean
class GetMyMessagesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :alertIDs
  attr_accessor :messageIDs
  attr_accessor :folderID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :externalMessageIDs
  attr_accessor :pagination
  attr_accessor :includeHighPriorityMessageOnly

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, alertIDs = nil, messageIDs = nil, folderID = nil, startTime = nil, endTime = nil, externalMessageIDs = nil, pagination = nil, includeHighPriorityMessageOnly = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @alertIDs = alertIDs
    @messageIDs = messageIDs
    @folderID = folderID
    @startTime = startTime
    @endTime = endTime
    @externalMessageIDs = externalMessageIDs
    @pagination = pagination
    @includeHighPriorityMessageOnly = includeHighPriorityMessageOnly
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayBuyingRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   watchList - EBay::ItemListCustomizationType
#   bidList - EBay::ItemListCustomizationType
#   bestOfferList - EBay::ItemListCustomizationType
#   wonList - EBay::ItemListCustomizationType
#   lostList - EBay::ItemListCustomizationType
#   favoriteSearches - EBay::MyeBaySelectionType
#   favoriteSellers - EBay::MyeBaySelectionType
#   secondChanceOffer - EBay::MyeBaySelectionType
#   bidAssistantList - EBay::BidAssistantListType
#   deletedFromWonList - EBay::ItemListCustomizationType
#   deletedFromLostList - EBay::ItemListCustomizationType
#   buyingSummary - EBay::ItemListCustomizationType
#   userDefinedLists - EBay::MyeBaySelectionType
#   hideVariations - SOAP::SOAPBoolean
class GetMyeBayBuyingRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :watchList
  attr_accessor :bidList
  attr_accessor :bestOfferList
  attr_accessor :wonList
  attr_accessor :lostList
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffer
  attr_accessor :bidAssistantList
  attr_accessor :deletedFromWonList
  attr_accessor :deletedFromLostList
  attr_accessor :buyingSummary
  attr_accessor :userDefinedLists
  attr_accessor :hideVariations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, watchList = nil, bidList = nil, bestOfferList = nil, wonList = nil, lostList = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffer = nil, bidAssistantList = nil, deletedFromWonList = nil, deletedFromLostList = nil, buyingSummary = nil, userDefinedLists = nil, hideVariations = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @watchList = watchList
    @bidList = bidList
    @bestOfferList = bestOfferList
    @wonList = wonList
    @lostList = lostList
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffer = secondChanceOffer
    @bidAssistantList = bidAssistantList
    @deletedFromWonList = deletedFromWonList
    @deletedFromLostList = deletedFromLostList
    @buyingSummary = buyingSummary
    @userDefinedLists = userDefinedLists
    @hideVariations = hideVariations
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayRemindersRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   buyingReminders - EBay::ReminderCustomizationType
#   sellingReminders - EBay::ReminderCustomizationType
class GetMyeBayRemindersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :buyingReminders
  attr_accessor :sellingReminders

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, buyingReminders = nil, sellingReminders = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @buyingReminders = buyingReminders
    @sellingReminders = sellingReminders
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBaySellingRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   scheduledList - EBay::ItemListCustomizationType
#   activeList - EBay::ItemListCustomizationType
#   soldList - EBay::ItemListCustomizationType
#   unsoldList - EBay::ItemListCustomizationType
#   bidList - EBay::ItemListCustomizationType
#   deletedFromSoldList - EBay::ItemListCustomizationType
#   deletedFromUnsoldList - EBay::ItemListCustomizationType
#   sellingSummary - EBay::ItemListCustomizationType
#   hideVariations - SOAP::SOAPBoolean
class GetMyeBaySellingRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :scheduledList
  attr_accessor :activeList
  attr_accessor :soldList
  attr_accessor :unsoldList
  attr_accessor :bidList
  attr_accessor :deletedFromSoldList
  attr_accessor :deletedFromUnsoldList
  attr_accessor :sellingSummary
  attr_accessor :hideVariations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, scheduledList = nil, activeList = nil, soldList = nil, unsoldList = nil, bidList = nil, deletedFromSoldList = nil, deletedFromUnsoldList = nil, sellingSummary = nil, hideVariations = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @scheduledList = scheduledList
    @activeList = activeList
    @soldList = soldList
    @unsoldList = unsoldList
    @bidList = bidList
    @deletedFromSoldList = deletedFromSoldList
    @deletedFromUnsoldList = deletedFromUnsoldList
    @sellingSummary = sellingSummary
    @hideVariations = hideVariations
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationPreferencesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   preferenceLevel - EBay::NotificationRoleCodeType
class GetNotificationPreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :preferenceLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, preferenceLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @preferenceLevel = preferenceLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationsUsageRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   itemID - (any)
class GetNotificationsUsageRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, startTime = nil, endTime = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @startTime = startTime
    @endTime = endTime
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrderTransactionsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemTransactionIDArray - EBay::ItemTransactionIDArrayType
#   orderIDArray - EBay::OrderIDArrayType
#   platform - EBay::TransactionPlatformCodeType
#   includeFinalValueFees - SOAP::SOAPBoolean
class GetOrderTransactionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemTransactionIDArray
  attr_accessor :orderIDArray
  attr_accessor :platform
  attr_accessor :includeFinalValueFees

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemTransactionIDArray = nil, orderIDArray = nil, platform = nil, includeFinalValueFees = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemTransactionIDArray = itemTransactionIDArray
    @orderIDArray = orderIDArray
    @platform = platform
    @includeFinalValueFees = includeFinalValueFees
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrdersRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   orderIDArray - EBay::OrderIDArrayType
#   createTimeFrom - SOAP::SOAPDateTime
#   createTimeTo - SOAP::SOAPDateTime
#   orderRole - EBay::TradingRoleCodeType
#   orderStatus - EBay::OrderStatusCodeType
#   listingType - EBay::ListingTypeCodeType
#   pagination - EBay::PaginationType
#   modTimeFrom - SOAP::SOAPDateTime
#   modTimeTo - SOAP::SOAPDateTime
#   numberOfDays - SOAP::SOAPInt
#   includeFinalValueFee - SOAP::SOAPBoolean
#   sortingOrder - EBay::SortOrderCodeType
class GetOrdersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :orderIDArray
  attr_accessor :createTimeFrom
  attr_accessor :createTimeTo
  attr_accessor :orderRole
  attr_accessor :orderStatus
  attr_accessor :listingType
  attr_accessor :pagination
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :numberOfDays
  attr_accessor :includeFinalValueFee
  attr_accessor :sortingOrder

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, orderIDArray = nil, createTimeFrom = nil, createTimeTo = nil, orderRole = nil, orderStatus = nil, listingType = nil, pagination = nil, modTimeFrom = nil, modTimeTo = nil, numberOfDays = nil, includeFinalValueFee = nil, sortingOrder = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @orderIDArray = orderIDArray
    @createTimeFrom = createTimeFrom
    @createTimeTo = createTimeTo
    @orderRole = orderRole
    @orderStatus = orderStatus
    @listingType = listingType
    @pagination = pagination
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @numberOfDays = numberOfDays
    @includeFinalValueFee = includeFinalValueFee
    @sortingOrder = sortingOrder
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerDetailsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   folderID - SOAP::SOAPInt
#   pictureURL - SOAP::SOAPString
#   pictureManagerDetailLevel - EBay::PictureManagerDetailLevelCodeType
class GetPictureManagerDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :folderID
  attr_accessor :pictureURL
  attr_accessor :pictureManagerDetailLevel

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, folderID = nil, pictureURL = nil, pictureManagerDetailLevel = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @folderID = folderID
    @pictureURL = pictureURL
    @pictureManagerDetailLevel = pictureManagerDetailLevel
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerOptionsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetPictureManagerOptionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFamilyMembersRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   productSearch - EBay::ProductSearchType
class GetProductFamilyMembersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :productSearch

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, productSearch = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @productSearch = productSearch
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   attributeSystemVersion - SOAP::SOAPString
#   productFinderID - SOAP::SOAPInt
class GetProductFinderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productFinderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, attributeSystemVersion = nil, productFinderID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productFinderID = productFinderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderXSLRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   fileName - SOAP::SOAPString
#   fileVersion - SOAP::SOAPString
class GetProductFinderXSLRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :fileName
  attr_accessor :fileVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, fileName = nil, fileVersion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @fileName = fileName
    @fileVersion = fileVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchPageRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   attributeSystemVersion - SOAP::SOAPString
#   attributeSetID - SOAP::SOAPInt
class GetProductSearchPageRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeSetID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, attributeSystemVersion = nil, attributeSetID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeSetID = attributeSetID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchResultsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   productSearch - EBay::ProductSearchType
class GetProductSearchResultsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :productSearch

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, productSearch = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @productSearch = productSearch
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSellingPagesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   useCase - EBay::ProductUseCaseCodeType
#   product - EBay::ProductType
class GetProductSellingPagesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :useCase
  attr_accessor :product

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, useCase = nil, product = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @useCase = useCase
    @product = product
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionRulesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   storeCategoryID - SOAP::SOAPLong
#   promotionMethod - EBay::PromotionMethodCodeType
class GetPromotionRulesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :storeCategoryID
  attr_accessor :promotionMethod

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, storeCategoryID = nil, promotionMethod = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @storeCategoryID = storeCategoryID
    @promotionMethod = promotionMethod
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionalSaleDetailsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   promotionalSaleID - SOAP::SOAPLong
#   promotionalSaleStatus - EBay::PromotionalSaleStatusCodeType
class GetPromotionalSaleDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :promotionalSaleID
  attr_accessor :promotionalSaleStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, promotionalSaleID = nil, promotionalSaleStatus = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @promotionalSaleID = promotionalSaleID
    @promotionalSaleStatus = promotionalSaleStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerDashboardRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetSellerDashboardRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerEventsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   userID - (any)
#   startTimeFrom - SOAP::SOAPDateTime
#   startTimeTo - SOAP::SOAPDateTime
#   endTimeFrom - SOAP::SOAPDateTime
#   endTimeTo - SOAP::SOAPDateTime
#   modTimeFrom - SOAP::SOAPDateTime
#   modTimeTo - SOAP::SOAPDateTime
#   newItemFilter - SOAP::SOAPBoolean
#   includeWatchCount - SOAP::SOAPBoolean
#   includeVariationSpecifics - SOAP::SOAPBoolean
#   hideVariations - SOAP::SOAPBoolean
class GetSellerEventsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :startTimeFrom
  attr_accessor :startTimeTo
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :newItemFilter
  attr_accessor :includeWatchCount
  attr_accessor :includeVariationSpecifics
  attr_accessor :hideVariations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, userID = nil, startTimeFrom = nil, startTimeTo = nil, endTimeFrom = nil, endTimeTo = nil, modTimeFrom = nil, modTimeTo = nil, newItemFilter = nil, includeWatchCount = nil, includeVariationSpecifics = nil, hideVariations = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @userID = userID
    @startTimeFrom = startTimeFrom
    @startTimeTo = startTimeTo
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @newItemFilter = newItemFilter
    @includeWatchCount = includeWatchCount
    @includeVariationSpecifics = includeVariationSpecifics
    @hideVariations = hideVariations
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerListRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   userID - (any)
#   motorsDealerUsers - EBay::UserIDArrayType
#   endTimeFrom - SOAP::SOAPDateTime
#   endTimeTo - SOAP::SOAPDateTime
#   sort - SOAP::SOAPInt
#   startTimeFrom - SOAP::SOAPDateTime
#   startTimeTo - SOAP::SOAPDateTime
#   pagination - EBay::PaginationType
#   granularityLevel - EBay::GranularityLevelCodeType
#   sKUArray - EBay::SKUArrayType
#   includeWatchCount - SOAP::SOAPBoolean
#   adminEndedItemsOnly - SOAP::SOAPBoolean
#   categoryID - SOAP::SOAPInt
#   includeVariations - SOAP::SOAPBoolean
class GetSellerListRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :motorsDealerUsers
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :sort
  attr_accessor :startTimeFrom
  attr_accessor :startTimeTo
  attr_accessor :pagination
  attr_accessor :granularityLevel
  attr_accessor :sKUArray
  attr_accessor :includeWatchCount
  attr_accessor :adminEndedItemsOnly
  attr_accessor :categoryID
  attr_accessor :includeVariations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, userID = nil, motorsDealerUsers = nil, endTimeFrom = nil, endTimeTo = nil, sort = nil, startTimeFrom = nil, startTimeTo = nil, pagination = nil, granularityLevel = nil, sKUArray = nil, includeWatchCount = nil, adminEndedItemsOnly = nil, categoryID = nil, includeVariations = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @userID = userID
    @motorsDealerUsers = motorsDealerUsers
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @sort = sort
    @startTimeFrom = startTimeFrom
    @startTimeTo = startTimeTo
    @pagination = pagination
    @granularityLevel = granularityLevel
    @sKUArray = sKUArray
    @includeWatchCount = includeWatchCount
    @adminEndedItemsOnly = adminEndedItemsOnly
    @categoryID = categoryID
    @includeVariations = includeVariations
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerPaymentsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   paymentStatus - EBay::RCSPaymentStatusCodeType
#   paymentTimeFrom - SOAP::SOAPDateTime
#   paymentTimeTo - SOAP::SOAPDateTime
#   pagination - EBay::PaginationType
class GetSellerPaymentsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :paymentStatus
  attr_accessor :paymentTimeFrom
  attr_accessor :paymentTimeTo
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, paymentStatus = nil, paymentTimeFrom = nil, paymentTimeTo = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @paymentStatus = paymentStatus
    @paymentTimeFrom = paymentTimeFrom
    @paymentTimeTo = paymentTimeTo
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerTransactionsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   modTimeFrom - SOAP::SOAPDateTime
#   modTimeTo - SOAP::SOAPDateTime
#   pagination - EBay::PaginationType
#   includeFinalValueFee - SOAP::SOAPBoolean
#   includeContainingOrder - SOAP::SOAPBoolean
#   sKUArray - EBay::SKUArrayType
#   platform - EBay::TransactionPlatformCodeType
#   numberOfDays - SOAP::SOAPInt
#   inventoryTrackingMethod - EBay::InventoryTrackingMethodCodeType
#   includeCodiceFiscale - SOAP::SOAPBoolean
class GetSellerTransactionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :pagination
  attr_accessor :includeFinalValueFee
  attr_accessor :includeContainingOrder
  attr_accessor :sKUArray
  attr_accessor :platform
  attr_accessor :numberOfDays
  attr_accessor :inventoryTrackingMethod
  attr_accessor :includeCodiceFiscale

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, modTimeFrom = nil, modTimeTo = nil, pagination = nil, includeFinalValueFee = nil, includeContainingOrder = nil, sKUArray = nil, platform = nil, numberOfDays = nil, inventoryTrackingMethod = nil, includeCodiceFiscale = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @pagination = pagination
    @includeFinalValueFee = includeFinalValueFee
    @includeContainingOrder = includeContainingOrder
    @sKUArray = sKUArray
    @platform = platform
    @numberOfDays = numberOfDays
    @inventoryTrackingMethod = inventoryTrackingMethod
    @includeCodiceFiscale = includeCodiceFiscale
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerAlertsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetSellingManagerAlertsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerEmailLogRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPLong
#   orderID - (any)
#   emailDateRange - EBay::TimeRangeType
#   orderLineItemID - SOAP::SOAPString
class GetSellingManagerEmailLogRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :emailDateRange
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, orderID = nil, emailDateRange = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @emailDateRange = emailDateRange
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerInventoryRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   sort - EBay::SellingManagerProductSortCodeType
#   folderID - SOAP::SOAPLong
#   pagination - EBay::PaginationType
#   sortOrder - EBay::SortOrderCodeType
#   search - EBay::SellingManagerSearchType
#   storeCategoryID - SOAP::SOAPLong
#   filter - EBay::SellingManagerInventoryPropertyTypeCodeType
class GetSellingManagerInventoryRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :sort
  attr_accessor :folderID
  attr_accessor :pagination
  attr_accessor :sortOrder
  attr_accessor :search
  attr_accessor :storeCategoryID
  attr_accessor :filter

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, sort = nil, folderID = nil, pagination = nil, sortOrder = nil, search = nil, storeCategoryID = nil, filter = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @sort = sort
    @folderID = folderID
    @pagination = pagination
    @sortOrder = sortOrder
    @search = search
    @storeCategoryID = storeCategoryID
    @filter = filter
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerInventoryFolderRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   folderID - SOAP::SOAPLong
#   maxDepth - SOAP::SOAPInt
#   fullRecursion - SOAP::SOAPBoolean
class GetSellingManagerInventoryFolderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :folderID
  attr_accessor :maxDepth
  attr_accessor :fullRecursion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, folderID = nil, maxDepth = nil, fullRecursion = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @folderID = folderID
    @maxDepth = maxDepth
    @fullRecursion = fullRecursion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerItemAutomationRuleRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
class GetSellingManagerItemAutomationRuleRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerSaleRecordRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   orderID - (any)
#   orderLineItemID - SOAP::SOAPString
class GetSellingManagerSaleRecordRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, orderID = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerSoldListingsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   search - EBay::SellingManagerSearchType
#   storeCategoryID - SOAP::SOAPLong
#   filter - EBay::SellingManagerSoldListingsPropertyTypeCodeType
#   archived - SOAP::SOAPBoolean
#   sort - EBay::SellingManagerSoldListingsSortTypeCodeType
#   sortOrder - EBay::SortOrderCodeType
#   pagination - EBay::PaginationType
#   saleDateRange - EBay::TimeRangeType
class GetSellingManagerSoldListingsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :search
  attr_accessor :storeCategoryID
  attr_accessor :filter
  attr_accessor :archived
  attr_accessor :sort
  attr_accessor :sortOrder
  attr_accessor :pagination
  attr_accessor :saleDateRange

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, search = nil, storeCategoryID = nil, filter = [], archived = nil, sort = nil, sortOrder = nil, pagination = nil, saleDateRange = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @search = search
    @storeCategoryID = storeCategoryID
    @filter = filter
    @archived = archived
    @sort = sort
    @sortOrder = sortOrder
    @pagination = pagination
    @saleDateRange = saleDateRange
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerTemplateAutomationRuleRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   saleTemplateID - SOAP::SOAPLong
class GetSellingManagerTemplateAutomationRuleRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :saleTemplateID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, saleTemplateID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @saleTemplateID = saleTemplateID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerTemplatesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   saleTemplateID - SOAP::SOAPLong
class GetSellingManagerTemplatesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :saleTemplateID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, saleTemplateID = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @saleTemplateID = saleTemplateID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSessionIDRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   ruName - SOAP::SOAPString
class GetSessionIDRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :ruName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, ruName = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @ruName = ruName
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetShippingDiscountProfilesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetShippingDiscountProfilesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   categoryStructureOnly - SOAP::SOAPBoolean
#   rootCategoryID - SOAP::SOAPLong
#   levelLimit - SOAP::SOAPInt
#   userID - (any)
class GetStoreRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryStructureOnly
  attr_accessor :rootCategoryID
  attr_accessor :levelLimit
  attr_accessor :userID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryStructureOnly = nil, rootCategoryID = nil, levelLimit = nil, userID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryStructureOnly = categoryStructureOnly
    @rootCategoryID = rootCategoryID
    @levelLimit = levelLimit
    @userID = userID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCategoryUpdateStatusRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   taskID - SOAP::SOAPLong
class GetStoreCategoryUpdateStatusRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :taskID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, taskID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @taskID = taskID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCustomPageRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   pageID - SOAP::SOAPLong
class GetStoreCustomPageRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :pageID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, pageID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @pageID = pageID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreOptionsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetStoreOptionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStorePreferencesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetStorePreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSuggestedCategoriesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   query - SOAP::SOAPString
class GetSuggestedCategoriesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :query

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, query = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @query = query
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTaxTableRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetTaxTableRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTokenStatusRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GetTokenStatusRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   userID - SOAP::SOAPString
#   includeExpressRequirements - SOAP::SOAPBoolean
#   includeFeatureEligibility - SOAP::SOAPBoolean
class GetUserRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :userID
  attr_accessor :includeExpressRequirements
  attr_accessor :includeFeatureEligibility

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, userID = nil, includeExpressRequirements = nil, includeFeatureEligibility = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @userID = userID
    @includeExpressRequirements = includeExpressRequirements
    @includeFeatureEligibility = includeFeatureEligibility
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserContactDetailsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - SOAP::SOAPString
#   contactID - SOAP::SOAPString
#   requesterID - SOAP::SOAPString
class GetUserContactDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :contactID
  attr_accessor :requesterID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, contactID = nil, requesterID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @contactID = contactID
    @requesterID = requesterID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserDisputesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   disputeFilterType - EBay::DisputeFilterTypeCodeType
#   disputeSortType - EBay::DisputeSortTypeCodeType
#   modTimeFrom - SOAP::SOAPDateTime
#   modTimeTo - SOAP::SOAPDateTime
#   pagination - EBay::PaginationType
class GetUserDisputesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :disputeFilterType
  attr_accessor :disputeSortType
  attr_accessor :modTimeFrom
  attr_accessor :modTimeTo
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, disputeFilterType = nil, disputeSortType = nil, modTimeFrom = nil, modTimeTo = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @disputeFilterType = disputeFilterType
    @disputeSortType = disputeSortType
    @modTimeFrom = modTimeFrom
    @modTimeTo = modTimeTo
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserPreferencesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   showBidderNoticePreferences - SOAP::SOAPBoolean
#   showCombinedPaymentPreferences - SOAP::SOAPBoolean
#   showCrossPromotionPreferences - SOAP::SOAPBoolean
#   showSellerPaymentPreferences - SOAP::SOAPBoolean
#   showEndOfAuctionEmailPreferences - SOAP::SOAPBoolean
#   showSellerFavoriteItemPreferences - SOAP::SOAPBoolean
#   showProStoresPreferences - SOAP::SOAPBoolean
#   showEmailShipmentTrackingNumberPreference - SOAP::SOAPBoolean
#   showRequiredShipPhoneNumberPreference - SOAP::SOAPBoolean
#   showSellerExcludeShipToLocationPreference - SOAP::SOAPBoolean
#   showUnpaidItemAssistancePreference - SOAP::SOAPBoolean
#   showPurchaseReminderEmailPreferences - SOAP::SOAPBoolean
#   showUnpaidItemAssistanceExclusionList - SOAP::SOAPBoolean
#   showSellerProfilePreferences - SOAP::SOAPBoolean
#   showSellerReturnPreferences - SOAP::SOAPBoolean
#   showGlobalShippingProgramPreference - SOAP::SOAPBoolean
#   showDispatchCutoffTimePreferences - SOAP::SOAPBoolean
#   showGlobalShippingProgramListingPreference - SOAP::SOAPBoolean
#   showOverrideGSPServiceWithIntlServicePreference - SOAP::SOAPBoolean
#   showPickupDropoffPreferences - SOAP::SOAPBoolean
#   showOutOfStockControlPreference - SOAP::SOAPBoolean
#   showeBayPLUSPreference - SOAP::SOAPBoolean
class GetUserPreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :showBidderNoticePreferences
  attr_accessor :showCombinedPaymentPreferences
  attr_accessor :showCrossPromotionPreferences
  attr_accessor :showSellerPaymentPreferences
  attr_accessor :showEndOfAuctionEmailPreferences
  attr_accessor :showSellerFavoriteItemPreferences
  attr_accessor :showProStoresPreferences
  attr_accessor :showEmailShipmentTrackingNumberPreference
  attr_accessor :showRequiredShipPhoneNumberPreference
  attr_accessor :showSellerExcludeShipToLocationPreference
  attr_accessor :showUnpaidItemAssistancePreference
  attr_accessor :showPurchaseReminderEmailPreferences
  attr_accessor :showUnpaidItemAssistanceExclusionList
  attr_accessor :showSellerProfilePreferences
  attr_accessor :showSellerReturnPreferences
  attr_accessor :showGlobalShippingProgramPreference
  attr_accessor :showDispatchCutoffTimePreferences
  attr_accessor :showGlobalShippingProgramListingPreference
  attr_accessor :showOverrideGSPServiceWithIntlServicePreference
  attr_accessor :showPickupDropoffPreferences
  attr_accessor :showOutOfStockControlPreference
  attr_accessor :showeBayPLUSPreference

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, showBidderNoticePreferences = nil, showCombinedPaymentPreferences = nil, showCrossPromotionPreferences = nil, showSellerPaymentPreferences = nil, showEndOfAuctionEmailPreferences = nil, showSellerFavoriteItemPreferences = nil, showProStoresPreferences = nil, showEmailShipmentTrackingNumberPreference = nil, showRequiredShipPhoneNumberPreference = nil, showSellerExcludeShipToLocationPreference = nil, showUnpaidItemAssistancePreference = nil, showPurchaseReminderEmailPreferences = nil, showUnpaidItemAssistanceExclusionList = nil, showSellerProfilePreferences = nil, showSellerReturnPreferences = nil, showGlobalShippingProgramPreference = nil, showDispatchCutoffTimePreferences = nil, showGlobalShippingProgramListingPreference = nil, showOverrideGSPServiceWithIntlServicePreference = nil, showPickupDropoffPreferences = nil, showOutOfStockControlPreference = nil, showeBayPLUSPreference = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @showBidderNoticePreferences = showBidderNoticePreferences
    @showCombinedPaymentPreferences = showCombinedPaymentPreferences
    @showCrossPromotionPreferences = showCrossPromotionPreferences
    @showSellerPaymentPreferences = showSellerPaymentPreferences
    @showEndOfAuctionEmailPreferences = showEndOfAuctionEmailPreferences
    @showSellerFavoriteItemPreferences = showSellerFavoriteItemPreferences
    @showProStoresPreferences = showProStoresPreferences
    @showEmailShipmentTrackingNumberPreference = showEmailShipmentTrackingNumberPreference
    @showRequiredShipPhoneNumberPreference = showRequiredShipPhoneNumberPreference
    @showSellerExcludeShipToLocationPreference = showSellerExcludeShipToLocationPreference
    @showUnpaidItemAssistancePreference = showUnpaidItemAssistancePreference
    @showPurchaseReminderEmailPreferences = showPurchaseReminderEmailPreferences
    @showUnpaidItemAssistanceExclusionList = showUnpaidItemAssistanceExclusionList
    @showSellerProfilePreferences = showSellerProfilePreferences
    @showSellerReturnPreferences = showSellerReturnPreferences
    @showGlobalShippingProgramPreference = showGlobalShippingProgramPreference
    @showDispatchCutoffTimePreferences = showDispatchCutoffTimePreferences
    @showGlobalShippingProgramListingPreference = showGlobalShippingProgramListingPreference
    @showOverrideGSPServiceWithIntlServicePreference = showOverrideGSPServiceWithIntlServicePreference
    @showPickupDropoffPreferences = showPickupDropoffPreferences
    @showOutOfStockControlPreference = showOutOfStockControlPreference
    @showeBayPLUSPreference = showeBayPLUSPreference
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetVeROReasonCodeDetailsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   reasonCodeID - SOAP::SOAPLong
#   returnAllSites - SOAP::SOAPBoolean
class GetVeROReasonCodeDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :reasonCodeID
  attr_accessor :returnAllSites

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, reasonCodeID = nil, returnAllSites = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @reasonCodeID = reasonCodeID
    @returnAllSites = returnAllSites
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetVeROReportStatusRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   veROReportPacketID - SOAP::SOAPLong
#   itemID - (any)
#   includeReportedItemDetails - SOAP::SOAPBoolean
#   timeFrom - SOAP::SOAPDateTime
#   timeTo - SOAP::SOAPDateTime
#   pagination - EBay::PaginationType
class GetVeROReportStatusRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :veROReportPacketID
  attr_accessor :itemID
  attr_accessor :includeReportedItemDetails
  attr_accessor :timeFrom
  attr_accessor :timeTo
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, veROReportPacketID = nil, itemID = nil, includeReportedItemDetails = nil, timeFrom = nil, timeTo = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @veROReportPacketID = veROReportPacketID
    @itemID = itemID
    @includeReportedItemDetails = includeReportedItemDetails
    @timeFrom = timeFrom
    @timeTo = timeTo
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowPostRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   postID - (any)
class GetWantItNowPostRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :postID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, postID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @postID = postID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowSearchResultsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   categoryID - SOAP::SOAPString
#   query - SOAP::SOAPString
#   searchInDescription - SOAP::SOAPBoolean
#   searchWorldwide - SOAP::SOAPBoolean
#   pagination - EBay::PaginationType
class GetWantItNowSearchResultsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :query
  attr_accessor :searchInDescription
  attr_accessor :searchWorldwide
  attr_accessor :pagination

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, categoryID = nil, query = nil, searchInDescription = nil, searchWorldwide = nil, pagination = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @categoryID = categoryID
    @query = query
    @searchInDescription = searchInDescription
    @searchWorldwide = searchWorldwide
    @pagination = pagination
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayDetailsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   detailName - EBay::DetailNameCodeType
class GeteBayDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :detailName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, detailName = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @detailName = detailName
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayOfficialTimeRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
class GeteBayOfficialTimeRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}IssueRefundRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   refundReason - EBay::RefundReasonCodeType
#   refundType - EBay::RefundTypeCodeType
#   refundAmount - EBay::AmountType
#   refundMessage - SOAP::SOAPString
#   orderLineItemID - SOAP::SOAPString
class IssueRefundRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :refundReason
  attr_accessor :refundType
  attr_accessor :refundAmount
  attr_accessor :refundMessage
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, refundReason = nil, refundType = nil, refundAmount = nil, refundMessage = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @refundReason = refundReason
    @refundType = refundType
    @refundAmount = refundAmount
    @refundMessage = refundMessage
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}LeaveFeedbackRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   commentText - SOAP::SOAPString
#   commentType - EBay::CommentTypeCodeType
#   transactionID - SOAP::SOAPString
#   targetUser - (any)
#   sellerItemRatingDetailArray - EBay::ItemRatingDetailArrayType
#   orderLineItemID - SOAP::SOAPString
class LeaveFeedbackRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :commentText
  attr_accessor :commentType
  attr_accessor :transactionID
  attr_accessor :targetUser
  attr_accessor :sellerItemRatingDetailArray
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, commentText = nil, commentType = nil, transactionID = nil, targetUser = nil, sellerItemRatingDetailArray = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @commentText = commentText
    @commentType = commentType
    @transactionID = transactionID
    @targetUser = targetUser
    @sellerItemRatingDetailArray = sellerItemRatingDetailArray
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}MoveSellingManagerInventoryFolderRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   folderID - SOAP::SOAPLong
#   newParentFolderID - SOAP::SOAPLong
class MoveSellingManagerInventoryFolderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :folderID
  attr_accessor :newParentFolderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, folderID = nil, newParentFolderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @folderID = folderID
    @newParentFolderID = newParentFolderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}PlaceOfferRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   offer - EBay::OfferType
#   itemID - (any)
#   blockOnWarning - SOAP::SOAPBoolean
#   affiliateTrackingDetails - EBay::AffiliateTrackingDetailsType
#   variationSpecifics - EBay::NameValueListArrayType
class PlaceOfferRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :offer
  attr_accessor :itemID
  attr_accessor :blockOnWarning
  attr_accessor :affiliateTrackingDetails
  attr_accessor :variationSpecifics

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, offer = nil, itemID = nil, blockOnWarning = nil, affiliateTrackingDetails = nil, variationSpecifics = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @offer = offer
    @itemID = itemID
    @blockOnWarning = blockOnWarning
    @affiliateTrackingDetails = affiliateTrackingDetails
    @variationSpecifics = variationSpecifics
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelistFixedPriceItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   item - EBay::ItemType
#   deletedField - SOAP::SOAPString
class RelistFixedPriceItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :deletedField

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, deletedField = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @deletedField = deletedField
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelistItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   item - EBay::ItemType
#   deletedField - SOAP::SOAPString
class RelistItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :deletedField

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, deletedField = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @deletedField = deletedField
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemoveFromWatchListRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   removeAllItems - SOAP::SOAPBoolean
#   variationKey - EBay::VariationKeyType
class RemoveFromWatchListRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :removeAllItems
  attr_accessor :variationKey

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = [], removeAllItems = nil, variationKey = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @removeAllItems = removeAllItems
    @variationKey = variationKey
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToBestOfferRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   bestOfferID - (any)
#   action - EBay::BestOfferActionCodeType
#   sellerResponse - SOAP::SOAPString
#   counterOfferPrice - EBay::AmountType
#   counterOfferQuantity - SOAP::SOAPInt
class RespondToBestOfferRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :bestOfferID
  attr_accessor :action
  attr_accessor :sellerResponse
  attr_accessor :counterOfferPrice
  attr_accessor :counterOfferQuantity

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, bestOfferID = [], action = nil, sellerResponse = nil, counterOfferPrice = nil, counterOfferQuantity = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @bestOfferID = bestOfferID
    @action = action
    @sellerResponse = sellerResponse
    @counterOfferPrice = counterOfferPrice
    @counterOfferQuantity = counterOfferQuantity
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToFeedbackRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   feedbackID - SOAP::SOAPString
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   targetUserID - (any)
#   responseType - EBay::FeedbackResponseCodeType
#   responseText - SOAP::SOAPString
#   orderLineItemID - SOAP::SOAPString
class RespondToFeedbackRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :feedbackID
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :targetUserID
  attr_accessor :responseType
  attr_accessor :responseText
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, feedbackID = nil, itemID = nil, transactionID = nil, targetUserID = nil, responseType = nil, responseText = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @feedbackID = feedbackID
    @itemID = itemID
    @transactionID = transactionID
    @targetUserID = targetUserID
    @responseType = responseType
    @responseText = responseText
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToWantItNowPostRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   postID - (any)
class RespondToWantItNowPostRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :postID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, postID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @postID = postID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseCheckoutStatusRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   orderID - SOAP::SOAPString
#   amountPaid - EBay::AmountType
#   paymentMethodUsed - EBay::BuyerPaymentMethodCodeType
#   checkoutStatus - EBay::CompleteStatusCodeType
#   shippingService - SOAP::SOAPToken
#   shippingIncludedInTax - SOAP::SOAPBoolean
#   checkoutMethod - EBay::CheckoutMethodCodeType
#   insuranceType - EBay::InsuranceSelectedCodeType
#   paymentStatus - EBay::RCSPaymentStatusCodeType
#   adjustmentAmount - EBay::AmountType
#   shippingAddress - EBay::AddressType
#   buyerID - SOAP::SOAPString
#   shippingInsuranceCost - EBay::AmountType
#   salesTax - EBay::AmountType
#   shippingCost - EBay::AmountType
#   encryptedID - SOAP::SOAPString
#   externalTransaction - EBay::ExternalTransactionType
#   multipleSellerPaymentID - SOAP::SOAPString
#   cODCost - EBay::AmountType
#   orderLineItemID - SOAP::SOAPString
class ReviseCheckoutStatusRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :amountPaid
  attr_accessor :paymentMethodUsed
  attr_accessor :checkoutStatus
  attr_accessor :shippingService
  attr_accessor :shippingIncludedInTax
  attr_accessor :checkoutMethod
  attr_accessor :insuranceType
  attr_accessor :paymentStatus
  attr_accessor :adjustmentAmount
  attr_accessor :shippingAddress
  attr_accessor :buyerID
  attr_accessor :shippingInsuranceCost
  attr_accessor :salesTax
  attr_accessor :shippingCost
  attr_accessor :encryptedID
  attr_accessor :externalTransaction
  attr_accessor :multipleSellerPaymentID
  attr_accessor :cODCost
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, orderID = nil, amountPaid = nil, paymentMethodUsed = nil, checkoutStatus = nil, shippingService = nil, shippingIncludedInTax = nil, checkoutMethod = nil, insuranceType = nil, paymentStatus = nil, adjustmentAmount = nil, shippingAddress = nil, buyerID = nil, shippingInsuranceCost = nil, salesTax = nil, shippingCost = nil, encryptedID = nil, externalTransaction = nil, multipleSellerPaymentID = nil, cODCost = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @amountPaid = amountPaid
    @paymentMethodUsed = paymentMethodUsed
    @checkoutStatus = checkoutStatus
    @shippingService = shippingService
    @shippingIncludedInTax = shippingIncludedInTax
    @checkoutMethod = checkoutMethod
    @insuranceType = insuranceType
    @paymentStatus = paymentStatus
    @adjustmentAmount = adjustmentAmount
    @shippingAddress = shippingAddress
    @buyerID = buyerID
    @shippingInsuranceCost = shippingInsuranceCost
    @salesTax = salesTax
    @shippingCost = shippingCost
    @encryptedID = encryptedID
    @externalTransaction = externalTransaction
    @multipleSellerPaymentID = multipleSellerPaymentID
    @cODCost = cODCost
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseFixedPriceItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   item - EBay::ItemType
#   deletedField - SOAP::SOAPString
class ReviseFixedPriceItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :deletedField

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, deletedField = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @deletedField = deletedField
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseInventoryStatusRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   inventoryStatus - EBay::InventoryStatusType
class ReviseInventoryStatusRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :inventoryStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, inventoryStatus = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @inventoryStatus = inventoryStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   item - EBay::ItemType
#   deletedField - SOAP::SOAPString
#   verifyOnly - SOAP::SOAPBoolean
class ReviseItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :deletedField
  attr_accessor :verifyOnly

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, deletedField = [], verifyOnly = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @deletedField = deletedField
    @verifyOnly = verifyOnly
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   messageIDs - EBay::MyMessagesMessageIDArrayType
#   alertIDs - EBay::MyMessagesAlertIDArrayType
#   read - SOAP::SOAPBoolean
#   flagged - SOAP::SOAPBoolean
#   folderID - SOAP::SOAPLong
class ReviseMyMessagesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :messageIDs
  attr_accessor :alertIDs
  attr_accessor :read
  attr_accessor :flagged
  attr_accessor :folderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, messageIDs = nil, alertIDs = nil, read = nil, flagged = nil, folderID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @messageIDs = messageIDs
    @alertIDs = alertIDs
    @read = read
    @flagged = flagged
    @folderID = folderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesFoldersRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   operation - EBay::MyMessagesFolderOperationCodeType
#   folderID - SOAP::SOAPLong
#   folderName - SOAP::SOAPString
class ReviseMyMessagesFoldersRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :operation
  attr_accessor :folderID
  attr_accessor :folderName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, operation = nil, folderID = [], folderName = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @operation = operation
    @folderID = folderID
    @folderName = folderName
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseSellingManagerInventoryFolderRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   folder - EBay::SellingManagerFolderDetailsType
class ReviseSellingManagerInventoryFolderRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :folder

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, folder = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @folder = folder
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseSellingManagerProductRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   sellingManagerProductDetails - EBay::SellingManagerProductDetailsType
#   sellingManagerFolderDetails - EBay::SellingManagerFolderDetailsType
#   deletedField - SOAP::SOAPString
#   sellingManagerProductSpecifics - EBay::SellingManagerProductSpecificsType
class ReviseSellingManagerProductRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :sellingManagerProductDetails
  attr_accessor :sellingManagerFolderDetails
  attr_accessor :deletedField
  attr_accessor :sellingManagerProductSpecifics

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, sellingManagerProductDetails = nil, sellingManagerFolderDetails = nil, deletedField = [], sellingManagerProductSpecifics = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @sellingManagerProductDetails = sellingManagerProductDetails
    @sellingManagerFolderDetails = sellingManagerFolderDetails
    @deletedField = deletedField
    @sellingManagerProductSpecifics = sellingManagerProductSpecifics
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseSellingManagerSaleRecordRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   orderID - (any)
#   sellingManagerSoldOrder - EBay::SellingManagerSoldOrderType
#   orderLineItemID - SOAP::SOAPString
class ReviseSellingManagerSaleRecordRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :sellingManagerSoldOrder
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, orderID = nil, sellingManagerSoldOrder = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @sellingManagerSoldOrder = sellingManagerSoldOrder
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseSellingManagerTemplateRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   saleTemplateID - SOAP::SOAPLong
#   productID - SOAP::SOAPLong
#   saleTemplateName - SOAP::SOAPString
#   item - EBay::ItemType
#   deletedField - SOAP::SOAPString
#   verifyOnly - SOAP::SOAPBoolean
class ReviseSellingManagerTemplateRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :saleTemplateID
  attr_accessor :productID
  attr_accessor :saleTemplateName
  attr_accessor :item
  attr_accessor :deletedField
  attr_accessor :verifyOnly

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, saleTemplateID = nil, productID = nil, saleTemplateName = nil, item = nil, deletedField = [], verifyOnly = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @saleTemplateID = saleTemplateID
    @productID = productID
    @saleTemplateName = saleTemplateName
    @item = item
    @deletedField = deletedField
    @verifyOnly = verifyOnly
  end
end

# {urn:ebay:apis:eBLBaseComponents}RevokeTokenRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   unsubscribeNotification - SOAP::SOAPBoolean
class RevokeTokenRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :unsubscribeNotification

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, unsubscribeNotification = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @unsubscribeNotification = unsubscribeNotification
  end
end

# {urn:ebay:apis:eBLBaseComponents}SaveItemToSellingManagerTemplateRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   productID - SOAP::SOAPLong
#   templateName - SOAP::SOAPString
class SaveItemToSellingManagerTemplateRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :productID
  attr_accessor :templateName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, productID = nil, templateName = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @productID = productID
    @templateName = templateName
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerReverseDisputeRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   disputeID - (any)
#   disputeResolutionReason - EBay::DisputeResolutionReasonCodeType
class SellerReverseDisputeRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :disputeID
  attr_accessor :disputeResolutionReason

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, disputeID = nil, disputeResolutionReason = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @disputeID = disputeID
    @disputeResolutionReason = disputeResolutionReason
  end
end

# {urn:ebay:apis:eBLBaseComponents}SendInvoiceRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   orderID - (any)
#   internationalShippingServiceOptions - EBay::InternationalShippingServiceOptionsType
#   shippingServiceOptions - EBay::ShippingServiceOptionsType
#   salesTax - EBay::SalesTaxType
#   insuranceOption - EBay::InsuranceOptionCodeType
#   insuranceFee - EBay::AmountType
#   paymentMethods - EBay::BuyerPaymentMethodCodeType
#   payPalEmailAddress - SOAP::SOAPString
#   checkoutInstructions - SOAP::SOAPString
#   emailCopyToSeller - SOAP::SOAPBoolean
#   cODCost - EBay::AmountType
#   sKU - (any)
#   orderLineItemID - SOAP::SOAPString
#   adjustmentAmount - EBay::AmountType
class SendInvoiceRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :internationalShippingServiceOptions
  attr_accessor :shippingServiceOptions
  attr_accessor :salesTax
  attr_accessor :insuranceOption
  attr_accessor :insuranceFee
  attr_accessor :paymentMethods
  attr_accessor :payPalEmailAddress
  attr_accessor :checkoutInstructions
  attr_accessor :emailCopyToSeller
  attr_accessor :cODCost
  attr_accessor :sKU
  attr_accessor :orderLineItemID
  attr_accessor :adjustmentAmount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, transactionID = nil, orderID = nil, internationalShippingServiceOptions = [], shippingServiceOptions = [], salesTax = nil, insuranceOption = nil, insuranceFee = nil, paymentMethods = [], payPalEmailAddress = nil, checkoutInstructions = nil, emailCopyToSeller = nil, cODCost = nil, sKU = nil, orderLineItemID = nil, adjustmentAmount = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @internationalShippingServiceOptions = internationalShippingServiceOptions
    @shippingServiceOptions = shippingServiceOptions
    @salesTax = salesTax
    @insuranceOption = insuranceOption
    @insuranceFee = insuranceFee
    @paymentMethods = paymentMethods
    @payPalEmailAddress = payPalEmailAddress
    @checkoutInstructions = checkoutInstructions
    @emailCopyToSeller = emailCopyToSeller
    @cODCost = cODCost
    @sKU = sKU
    @orderLineItemID = orderLineItemID
    @adjustmentAmount = adjustmentAmount
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetMessagePreferencesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   aSQPreferences - EBay::ASQPreferencesType
class SetMessagePreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :aSQPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, aSQPreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @aSQPreferences = aSQPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetNotificationPreferencesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   applicationDeliveryPreferences - EBay::ApplicationDeliveryPreferencesType
#   userDeliveryPreferenceArray - EBay::NotificationEnableArrayType
#   userData - EBay::NotificationUserDataType
#   eventProperty - EBay::NotificationEventPropertyType
#   deliveryURLName - SOAP::SOAPString
class SetNotificationPreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :applicationDeliveryPreferences
  attr_accessor :userDeliveryPreferenceArray
  attr_accessor :userData
  attr_accessor :eventProperty
  attr_accessor :deliveryURLName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, applicationDeliveryPreferences = nil, userDeliveryPreferenceArray = nil, userData = nil, eventProperty = [], deliveryURLName = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @applicationDeliveryPreferences = applicationDeliveryPreferences
    @userDeliveryPreferenceArray = userDeliveryPreferenceArray
    @userData = userData
    @eventProperty = eventProperty
    @deliveryURLName = deliveryURLName
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPictureManagerDetailsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   pictureManagerDetails - EBay::PictureManagerDetailsType
#   action - EBay::PictureManagerActionCodeType
class SetPictureManagerDetailsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :pictureManagerDetails
  attr_accessor :action

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, pictureManagerDetails = nil, action = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @pictureManagerDetails = pictureManagerDetails
    @action = action
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionalSaleRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   action - EBay::ModifyActionCodeType
#   promotionalSaleDetails - EBay::PromotionalSaleType
class SetPromotionalSaleRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :action
  attr_accessor :promotionalSaleDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, action = nil, promotionalSaleDetails = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @action = action
    @promotionalSaleDetails = promotionalSaleDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionalSaleListingsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   promotionalSaleID - SOAP::SOAPLong
#   action - EBay::ModifyActionCodeType
#   promotionalSaleItemIDArray - EBay::ItemIDArrayType
#   storeCategoryID - SOAP::SOAPLong
#   categoryID - SOAP::SOAPLong
#   allFixedPriceItems - SOAP::SOAPBoolean
#   allStoreInventoryItems - SOAP::SOAPBoolean
#   allAuctionItems - SOAP::SOAPBoolean
class SetPromotionalSaleListingsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :promotionalSaleID
  attr_accessor :action
  attr_accessor :promotionalSaleItemIDArray
  attr_accessor :storeCategoryID
  attr_accessor :categoryID
  attr_accessor :allFixedPriceItems
  attr_accessor :allStoreInventoryItems
  attr_accessor :allAuctionItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, promotionalSaleID = nil, action = nil, promotionalSaleItemIDArray = nil, storeCategoryID = nil, categoryID = nil, allFixedPriceItems = nil, allStoreInventoryItems = nil, allAuctionItems = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @promotionalSaleID = promotionalSaleID
    @action = action
    @promotionalSaleItemIDArray = promotionalSaleItemIDArray
    @storeCategoryID = storeCategoryID
    @categoryID = categoryID
    @allFixedPriceItems = allFixedPriceItems
    @allStoreInventoryItems = allStoreInventoryItems
    @allAuctionItems = allAuctionItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetSellingManagerFeedbackOptionsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   automatedLeaveFeedbackEvent - EBay::AutomatedLeaveFeedbackEventCodeType
#   storedComments - EBay::FeedbackCommentArrayType
class SetSellingManagerFeedbackOptionsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :automatedLeaveFeedbackEvent
  attr_accessor :storedComments

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, automatedLeaveFeedbackEvent = nil, storedComments = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @automatedLeaveFeedbackEvent = automatedLeaveFeedbackEvent
    @storedComments = storedComments
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetSellingManagerItemAutomationRuleRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   automatedRelistingRule - EBay::SellingManagerAutoRelistType
#   automatedSecondChanceOfferRule - EBay::SellingManagerAutoSecondChanceOfferType
class SetSellingManagerItemAutomationRuleRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :automatedRelistingRule
  attr_accessor :automatedSecondChanceOfferRule

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, automatedRelistingRule = nil, automatedSecondChanceOfferRule = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @automatedRelistingRule = automatedRelistingRule
    @automatedSecondChanceOfferRule = automatedSecondChanceOfferRule
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetSellingManagerTemplateAutomationRuleRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   saleTemplateID - SOAP::SOAPLong
#   automatedListingRule - EBay::SellingManagerAutoListType
#   automatedRelistingRule - EBay::SellingManagerAutoRelistType
#   automatedSecondChanceOfferRule - EBay::SellingManagerAutoSecondChanceOfferType
class SetSellingManagerTemplateAutomationRuleRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :saleTemplateID
  attr_accessor :automatedListingRule
  attr_accessor :automatedRelistingRule
  attr_accessor :automatedSecondChanceOfferRule

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, saleTemplateID = nil, automatedListingRule = nil, automatedRelistingRule = nil, automatedSecondChanceOfferRule = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @saleTemplateID = saleTemplateID
    @automatedListingRule = automatedListingRule
    @automatedRelistingRule = automatedRelistingRule
    @automatedSecondChanceOfferRule = automatedSecondChanceOfferRule
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetShippingDiscountProfilesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   currencyID - EBay::CurrencyCodeType
#   combinedDuration - EBay::CombinedPaymentPeriodCodeType
#   modifyActionCode - EBay::ModifyActionCodeType
#   flatShippingDiscount - EBay::FlatShippingDiscountType
#   calculatedShippingDiscount - EBay::CalculatedShippingDiscountType
#   calculatedHandlingDiscount - EBay::CalculatedHandlingDiscountType
#   promotionalShippingDiscountDetails - EBay::PromotionalShippingDiscountDetailsType
#   shippingInsurance - EBay::ShippingInsuranceType
#   internationalShippingInsurance - EBay::ShippingInsuranceType
class SetShippingDiscountProfilesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :currencyID
  attr_accessor :combinedDuration
  attr_accessor :modifyActionCode
  attr_accessor :flatShippingDiscount
  attr_accessor :calculatedShippingDiscount
  attr_accessor :calculatedHandlingDiscount
  attr_accessor :promotionalShippingDiscountDetails
  attr_accessor :shippingInsurance
  attr_accessor :internationalShippingInsurance

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, currencyID = nil, combinedDuration = nil, modifyActionCode = nil, flatShippingDiscount = nil, calculatedShippingDiscount = nil, calculatedHandlingDiscount = nil, promotionalShippingDiscountDetails = nil, shippingInsurance = nil, internationalShippingInsurance = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @currencyID = currencyID
    @combinedDuration = combinedDuration
    @modifyActionCode = modifyActionCode
    @flatShippingDiscount = flatShippingDiscount
    @calculatedShippingDiscount = calculatedShippingDiscount
    @calculatedHandlingDiscount = calculatedHandlingDiscount
    @promotionalShippingDiscountDetails = promotionalShippingDiscountDetails
    @shippingInsurance = shippingInsurance
    @internationalShippingInsurance = internationalShippingInsurance
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   store - EBay::StoreType
class SetStoreRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :store

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, store = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @store = store
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCategoriesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   action - EBay::StoreCategoryUpdateActionCodeType
#   itemDestinationCategoryID - SOAP::SOAPLong
#   destinationParentCategoryID - SOAP::SOAPLong
#   storeCategories - EBay::StoreCustomCategoryArrayType
class SetStoreCategoriesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :action
  attr_accessor :itemDestinationCategoryID
  attr_accessor :destinationParentCategoryID
  attr_accessor :storeCategories

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, action = nil, itemDestinationCategoryID = nil, destinationParentCategoryID = nil, storeCategories = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @action = action
    @itemDestinationCategoryID = itemDestinationCategoryID
    @destinationParentCategoryID = destinationParentCategoryID
    @storeCategories = storeCategories
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCustomPageRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   customPage - EBay::StoreCustomPageType
class SetStoreCustomPageRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :customPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, customPage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @customPage = customPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStorePreferencesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   storePreferences - EBay::StorePreferencesType
class SetStorePreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :storePreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, storePreferences = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @storePreferences = storePreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetTaxTableRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   taxTable - EBay::TaxTableType
class SetTaxTableRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :taxTable

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, taxTable = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @taxTable = taxTable
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   itemID - (any)
#   action - EBay::SetUserNotesActionCodeType
#   noteText - SOAP::SOAPString
#   transactionID - SOAP::SOAPString
#   variationSpecifics - EBay::NameValueListArrayType
#   sKU - (any)
#   orderLineItemID - SOAP::SOAPString
class SetUserNotesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :action
  attr_accessor :noteText
  attr_accessor :transactionID
  attr_accessor :variationSpecifics
  attr_accessor :sKU
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, itemID = nil, action = nil, noteText = nil, transactionID = nil, variationSpecifics = nil, sKU = nil, orderLineItemID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @itemID = itemID
    @action = action
    @noteText = noteText
    @transactionID = transactionID
    @variationSpecifics = variationSpecifics
    @sKU = sKU
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserPreferencesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   bidderNoticePreferences - EBay::BidderNoticePreferencesType
#   combinedPaymentPreferences - EBay::CombinedPaymentPreferencesType
#   crossPromotionPreferences - EBay::CrossPromotionPreferencesType
#   sellerPaymentPreferences - EBay::SellerPaymentPreferencesType
#   sellerFavoriteItemPreferences - EBay::SellerFavoriteItemPreferencesType
#   endOfAuctionEmailPreferences - EBay::EndOfAuctionEmailPreferencesType
#   emailShipmentTrackingNumberPreference - SOAP::SOAPBoolean
#   requiredShipPhoneNumberPreference - SOAP::SOAPBoolean
#   unpaidItemAssistancePreferences - EBay::UnpaidItemAssistancePreferencesType
#   purchaseReminderEmailPreferences - EBay::PurchaseReminderEmailPreferencesType
#   sellerThirdPartyCheckoutDisabled - SOAP::SOAPBoolean
#   dispatchCutoffTimePreference - EBay::DispatchCutoffTimePreferencesType
#   globalShippingProgramListingPreference - SOAP::SOAPBoolean
#   overrideGSPserviceWithIntlService - SOAP::SOAPBoolean
#   outOfStockControlPreference - SOAP::SOAPBoolean
class SetUserPreferencesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :bidderNoticePreferences
  attr_accessor :combinedPaymentPreferences
  attr_accessor :crossPromotionPreferences
  attr_accessor :sellerPaymentPreferences
  attr_accessor :sellerFavoriteItemPreferences
  attr_accessor :endOfAuctionEmailPreferences
  attr_accessor :emailShipmentTrackingNumberPreference
  attr_accessor :requiredShipPhoneNumberPreference
  attr_accessor :unpaidItemAssistancePreferences
  attr_accessor :purchaseReminderEmailPreferences
  attr_accessor :sellerThirdPartyCheckoutDisabled
  attr_accessor :dispatchCutoffTimePreference
  attr_accessor :globalShippingProgramListingPreference
  attr_accessor :overrideGSPserviceWithIntlService
  attr_accessor :outOfStockControlPreference

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, bidderNoticePreferences = nil, combinedPaymentPreferences = nil, crossPromotionPreferences = nil, sellerPaymentPreferences = nil, sellerFavoriteItemPreferences = nil, endOfAuctionEmailPreferences = nil, emailShipmentTrackingNumberPreference = nil, requiredShipPhoneNumberPreference = nil, unpaidItemAssistancePreferences = nil, purchaseReminderEmailPreferences = nil, sellerThirdPartyCheckoutDisabled = nil, dispatchCutoffTimePreference = nil, globalShippingProgramListingPreference = nil, overrideGSPserviceWithIntlService = nil, outOfStockControlPreference = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @bidderNoticePreferences = bidderNoticePreferences
    @combinedPaymentPreferences = combinedPaymentPreferences
    @crossPromotionPreferences = crossPromotionPreferences
    @sellerPaymentPreferences = sellerPaymentPreferences
    @sellerFavoriteItemPreferences = sellerFavoriteItemPreferences
    @endOfAuctionEmailPreferences = endOfAuctionEmailPreferences
    @emailShipmentTrackingNumberPreference = emailShipmentTrackingNumberPreference
    @requiredShipPhoneNumberPreference = requiredShipPhoneNumberPreference
    @unpaidItemAssistancePreferences = unpaidItemAssistancePreferences
    @purchaseReminderEmailPreferences = purchaseReminderEmailPreferences
    @sellerThirdPartyCheckoutDisabled = sellerThirdPartyCheckoutDisabled
    @dispatchCutoffTimePreference = dispatchCutoffTimePreference
    @globalShippingProgramListingPreference = globalShippingProgramListingPreference
    @overrideGSPserviceWithIntlService = overrideGSPserviceWithIntlService
    @outOfStockControlPreference = outOfStockControlPreference
  end
end

# {urn:ebay:apis:eBLBaseComponents}UploadSiteHostedPicturesRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   pictureName - SOAP::SOAPString
#   pictureSystemVersion - SOAP::SOAPInt
#   pictureSet - EBay::PictureSetCodeType
#   pictureData - EBay::Base64BinaryType
#   pictureUploadPolicy - EBay::PictureUploadPolicyCodeType
#   externalPictureURL - SOAP::SOAPAnyURI
#   pictureWatermark - EBay::PictureWatermarkCodeType
#   extensionInDays - SOAP::SOAPInt
class UploadSiteHostedPicturesRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :pictureName
  attr_accessor :pictureSystemVersion
  attr_accessor :pictureSet
  attr_accessor :pictureData
  attr_accessor :pictureUploadPolicy
  attr_accessor :externalPictureURL
  attr_accessor :pictureWatermark
  attr_accessor :extensionInDays

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, pictureName = nil, pictureSystemVersion = nil, pictureSet = nil, pictureData = nil, pictureUploadPolicy = nil, externalPictureURL = [], pictureWatermark = [], extensionInDays = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @pictureName = pictureName
    @pictureSystemVersion = pictureSystemVersion
    @pictureSet = pictureSet
    @pictureData = pictureData
    @pictureUploadPolicy = pictureUploadPolicy
    @externalPictureURL = externalPictureURL
    @pictureWatermark = pictureWatermark
    @extensionInDays = extensionInDays
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateChallengeInputRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   challengeToken - SOAP::SOAPString
#   userInput - SOAP::SOAPString
#   keepTokenValid - SOAP::SOAPBoolean
class ValidateChallengeInputRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :challengeToken
  attr_accessor :userInput
  attr_accessor :keepTokenValid

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, challengeToken = nil, userInput = nil, keepTokenValid = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @challengeToken = challengeToken
    @userInput = userInput
    @keepTokenValid = keepTokenValid
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateTestUserRegistrationRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   feedbackScore - SOAP::SOAPInt
#   registrationDate - SOAP::SOAPDateTime
#   subscribeSA - SOAP::SOAPBoolean
#   subscribeSAPro - SOAP::SOAPBoolean
#   subscribeSM - SOAP::SOAPBoolean
#   subscribeSMPro - SOAP::SOAPBoolean
class ValidateTestUserRegistrationRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :feedbackScore
  attr_accessor :registrationDate
  attr_accessor :subscribeSA
  attr_accessor :subscribeSAPro
  attr_accessor :subscribeSM
  attr_accessor :subscribeSMPro

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, feedbackScore = nil, registrationDate = nil, subscribeSA = nil, subscribeSAPro = nil, subscribeSM = nil, subscribeSMPro = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @feedbackScore = feedbackScore
    @registrationDate = registrationDate
    @subscribeSA = subscribeSA
    @subscribeSAPro = subscribeSAPro
    @subscribeSM = subscribeSM
    @subscribeSMPro = subscribeSMPro
  end
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportItemsRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   rightsOwnerID - (any)
#   reportItems - EBay::VeROReportItemsType
class VeROReportItemsRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :rightsOwnerID
  attr_accessor :reportItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, rightsOwnerID = nil, reportItems = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @rightsOwnerID = rightsOwnerID
    @reportItems = reportItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddFixedPriceItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   item - EBay::ItemType
class VerifyAddFixedPriceItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   item - EBay::ItemType
#   includeExpressRequirements - SOAP::SOAPBoolean
#   externalProductID - EBay::ExternalProductIDType
class VerifyAddItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :includeExpressRequirements
  attr_accessor :externalProductID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, includeExpressRequirements = nil, externalProductID = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @includeExpressRequirements = includeExpressRequirements
    @externalProductID = externalProductID
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddSecondChanceItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   recipientBidderUserID - (any)
#   buyItNowPrice - EBay::AmountType
#   duration - EBay::SecondChanceOfferDurationCodeType
#   itemID - (any)
#   sellerMessage - SOAP::SOAPString
class VerifyAddSecondChanceItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :recipientBidderUserID
  attr_accessor :buyItNowPrice
  attr_accessor :duration
  attr_accessor :itemID
  attr_accessor :sellerMessage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, recipientBidderUserID = nil, buyItNowPrice = nil, duration = nil, itemID = nil, sellerMessage = nil)
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @recipientBidderUserID = recipientBidderUserID
    @buyItNowPrice = buyItNowPrice
    @duration = duration
    @itemID = itemID
    @sellerMessage = sellerMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyRelistItemRequestType
#   detailLevel - EBay::DetailLevelCodeType
#   errorLanguage - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   version - SOAP::SOAPString
#   endUserIP - SOAP::SOAPString
#   errorHandling - EBay::ErrorHandlingCodeType
#   invocationID - (any)
#   outputSelector - SOAP::SOAPString
#   warningLevel - EBay::WarningLevelCodeType
#   botBlock - EBay::BotBlockRequestType
#   item - EBay::ItemType
#   deletedField - SOAP::SOAPString
class VerifyRelistItemRequestType < AbstractRequestType
  attr_accessor :detailLevel
  attr_accessor :errorLanguage
  attr_accessor :messageID
  attr_accessor :version
  attr_accessor :endUserIP
  attr_accessor :errorHandling
  attr_accessor :invocationID
  attr_accessor :outputSelector
  attr_accessor :warningLevel
  attr_accessor :botBlock
  attr_reader :__xmlele_any
  attr_accessor :item
  attr_accessor :deletedField

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(detailLevel = [], errorLanguage = nil, messageID = nil, version = nil, endUserIP = nil, errorHandling = nil, invocationID = nil, outputSelector = [], warningLevel = nil, botBlock = nil, item = nil, deletedField = [])
    @detailLevel = detailLevel
    @errorLanguage = errorLanguage
    @messageID = messageID
    @version = version
    @endUserIP = endUserIP
    @errorHandling = errorHandling
    @invocationID = invocationID
    @outputSelector = outputSelector
    @warningLevel = warningLevel
    @botBlock = botBlock
    @__xmlele_any = nil
    @item = item
    @deletedField = deletedField
  end
end

# {urn:ebay:apis:eBLBaseComponents}AbstractResponseType
# abstract
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   disputeID - (any)
class AddDisputeResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :disputeID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, disputeID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @disputeID = disputeID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddDisputeResponseResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class AddDisputeResponseResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddFixedPriceItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   sKU - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   fees - EBay::FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
#   discountReason - EBay::DiscountReasonCodeType
#   productSuggestions - EBay::ProductSuggestionsType
#   listingRecommendations - EBay::ListingRecommendationsType
class AddFixedPriceItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :sKU
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :discountReason
  attr_accessor :productSuggestions
  attr_accessor :listingRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, sKU = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil, discountReason = [], productSuggestions = nil, listingRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @sKU = sKU
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
    @discountReason = discountReason
    @productSuggestions = productSuggestions
    @listingRecommendations = listingRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   fees - EBay::FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
#   discountReason - EBay::DiscountReasonCodeType
#   productSuggestions - EBay::ProductSuggestionsType
#   listingRecommendations - EBay::ListingRecommendationsType
class AddItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :discountReason
  attr_accessor :productSuggestions
  attr_accessor :listingRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil, discountReason = [], productSuggestions = nil, listingRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
    @discountReason = discountReason
    @productSuggestions = productSuggestions
    @listingRecommendations = listingRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemFromSellingManagerTemplateResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   fees - EBay::FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
class AddItemFromSellingManagerTemplateResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   addItemResponseContainer - EBay::AddItemResponseContainerType
class AddItemsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :addItemResponseContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, addItemResponseContainer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @addItemResponseContainer = addItemResponseContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageAAQToPartnerResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class AddMemberMessageAAQToPartnerResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessageRTQResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class AddMemberMessageRTQResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   addMemberMessagesAAQToBidderResponseContainer - EBay::AddMemberMessagesAAQToBidderResponseContainerType
class AddMemberMessagesAAQToBidderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :addMemberMessagesAAQToBidderResponseContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, addMemberMessagesAAQToBidderResponseContainer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @addMemberMessagesAAQToBidderResponseContainer = addMemberMessagesAAQToBidderResponseContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddOrderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   orderID - (any)
#   createdTime - SOAP::SOAPDateTime
class AddOrderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :orderID
  attr_accessor :createdTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, orderID = nil, createdTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @orderID = orderID
    @createdTime = createdTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSecondChanceItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
class AddSecondChanceItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSellingManagerInventoryFolderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   folderID - SOAP::SOAPLong
class AddSellingManagerInventoryFolderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :folderID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, folderID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @folderID = folderID
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSellingManagerProductResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   sellingManagerProductDetails - EBay::SellingManagerProductDetailsType
class AddSellingManagerProductResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :sellingManagerProductDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, sellingManagerProductDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @sellingManagerProductDetails = sellingManagerProductDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddSellingManagerTemplateResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   categoryID - SOAP::SOAPLong
#   category2ID - SOAP::SOAPLong
#   saleTemplateID - SOAP::SOAPLong
#   saleTemplateGroupID - SOAP::SOAPLong
#   saleTemplateName - SOAP::SOAPString
#   sellingManagerProductDetails - EBay::SellingManagerProductDetailsType
#   fees - EBay::FeesType
class AddSellingManagerTemplateResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :saleTemplateID
  attr_accessor :saleTemplateGroupID
  attr_accessor :saleTemplateName
  attr_accessor :sellingManagerProductDetails
  attr_accessor :fees

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, categoryID = nil, category2ID = nil, saleTemplateID = nil, saleTemplateGroupID = nil, saleTemplateName = nil, sellingManagerProductDetails = nil, fees = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @categoryID = categoryID
    @category2ID = category2ID
    @saleTemplateID = saleTemplateID
    @saleTemplateGroupID = saleTemplateGroupID
    @saleTemplateName = saleTemplateName
    @sellingManagerProductDetails = sellingManagerProductDetails
    @fees = fees
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToItemDescriptionResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class AddToItemDescriptionResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddToWatchListResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   watchListCount - SOAP::SOAPInt
#   watchListMaximum - SOAP::SOAPInt
class AddToWatchListResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :watchListCount
  attr_accessor :watchListMaximum

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, watchListCount = nil, watchListMaximum = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @watchListCount = watchListCount
    @watchListMaximum = watchListMaximum
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddTransactionConfirmationItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
class AddTransactionConfirmationItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}CompleteSaleResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class CompleteSaleResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ConfirmIdentityResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   userID - SOAP::SOAPString
class ConfirmIdentityResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :userID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, userID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @userID = userID
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteMyMessagesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class DeleteMyMessagesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteSellingManagerInventoryFolderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class DeleteSellingManagerInventoryFolderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteSellingManagerItemAutomationRuleResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   automatedListingRule - EBay::SellingManagerAutoListType
#   automatedRelistingRule - EBay::SellingManagerAutoRelistType
#   automatedSecondChanceOfferRule - EBay::SellingManagerAutoSecondChanceOfferType
#   fees - EBay::FeesType
class DeleteSellingManagerItemAutomationRuleResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :automatedListingRule
  attr_accessor :automatedRelistingRule
  attr_accessor :automatedSecondChanceOfferRule
  attr_accessor :fees

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, automatedListingRule = nil, automatedRelistingRule = nil, automatedSecondChanceOfferRule = nil, fees = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @automatedListingRule = automatedListingRule
    @automatedRelistingRule = automatedRelistingRule
    @automatedSecondChanceOfferRule = automatedSecondChanceOfferRule
    @fees = fees
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteSellingManagerProductResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   deletedSellingManagerProductDetails - EBay::SellingManagerProductDetailsType
class DeleteSellingManagerProductResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :deletedSellingManagerProductDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, deletedSellingManagerProductDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @deletedSellingManagerProductDetails = deletedSellingManagerProductDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteSellingManagerTemplateResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   deletedSaleTemplateID - SOAP::SOAPString
#   deletedSaleTemplateName - SOAP::SOAPString
class DeleteSellingManagerTemplateResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :deletedSaleTemplateID
  attr_accessor :deletedSaleTemplateName

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, deletedSaleTemplateID = nil, deletedSaleTemplateName = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @deletedSaleTemplateID = deletedSaleTemplateID
    @deletedSaleTemplateName = deletedSaleTemplateName
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeleteSellingManagerTemplateAutomationRuleResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   automatedListingRule - EBay::SellingManagerAutoListType
#   automatedRelistingRule - EBay::SellingManagerAutoRelistType
#   automatedSecondChanceOfferRule - EBay::SellingManagerAutoSecondChanceOfferType
#   fees - EBay::FeesType
class DeleteSellingManagerTemplateAutomationRuleResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :automatedListingRule
  attr_accessor :automatedRelistingRule
  attr_accessor :automatedSecondChanceOfferRule
  attr_accessor :fees

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, automatedListingRule = nil, automatedRelistingRule = nil, automatedSecondChanceOfferRule = nil, fees = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @automatedListingRule = automatedListingRule
    @automatedRelistingRule = automatedRelistingRule
    @automatedSecondChanceOfferRule = automatedSecondChanceOfferRule
    @fees = fees
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisableUnpaidItemAssistanceResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class DisableUnpaidItemAssistanceResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndFixedPriceItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   endTime - SOAP::SOAPDateTime
#   sKU - (any)
class EndFixedPriceItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :endTime
  attr_accessor :sKU

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, endTime = nil, sKU = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @endTime = endTime
    @sKU = sKU
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   endTime - SOAP::SOAPDateTime
class EndItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   endItemResponseContainer - EBay::EndItemResponseContainerType
class EndItemsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :endItemResponseContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, endItemResponseContainer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @endItemResponseContainer = endItemResponseContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExtendSiteHostedPicturesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   pictureURL - SOAP::SOAPAnyURI
class ExtendSiteHostedPicturesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :pictureURL

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, pictureURL = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @pictureURL = pictureURL
  end
end

# {urn:ebay:apis:eBLBaseComponents}FetchTokenResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   eBayAuthToken - SOAP::SOAPString
#   hardExpirationTime - SOAP::SOAPDateTime
#   rESTToken - SOAP::SOAPString
class FetchTokenResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :eBayAuthToken
  attr_accessor :hardExpirationTime
  attr_accessor :rESTToken

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, eBayAuthToken = nil, hardExpirationTime = nil, rESTToken = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @eBayAuthToken = eBayAuthToken
    @hardExpirationTime = hardExpirationTime
    @rESTToken = rESTToken
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAccountResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   accountID - SOAP::SOAPString
#   accountSummary - EBay::AccountSummaryType
#   currency - EBay::CurrencyCodeType
#   accountEntries - EBay::AccountEntriesType
#   paginationResult - EBay::PaginationResultType
#   hasMoreEntries - SOAP::SOAPBoolean
#   entriesPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
class GetAccountResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :accountID
  attr_accessor :accountSummary
  attr_accessor :currency
  attr_accessor :accountEntries
  attr_accessor :paginationResult
  attr_accessor :hasMoreEntries
  attr_accessor :entriesPerPage
  attr_accessor :pageNumber

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, accountID = nil, accountSummary = nil, currency = nil, accountEntries = nil, paginationResult = nil, hasMoreEntries = nil, entriesPerPage = nil, pageNumber = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @accountID = accountID
    @accountSummary = accountSummary
    @currency = currency
    @accountEntries = accountEntries
    @paginationResult = paginationResult
    @hasMoreEntries = hasMoreEntries
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAdFormatLeadsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   adFormatLead - EBay::AdFormatLeadType
#   adFormatLeadCount - SOAP::SOAPInt
class GetAdFormatLeadsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :adFormatLead
  attr_accessor :adFormatLeadCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, adFormatLead = [], adFormatLeadCount = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @adFormatLead = adFormatLead
    @adFormatLeadCount = adFormatLeadCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bidArray - EBay::OfferArrayType
#   highBidder - (any)
#   highestBid - EBay::AmountType
#   listingStatus - EBay::ListingStatusCodeType
class GetAllBiddersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bidArray
  attr_accessor :highBidder
  attr_accessor :highestBid
  attr_accessor :listingStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bidArray = nil, highBidder = nil, highestBid = nil, listingStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bidArray = bidArray
    @highBidder = highBidder
    @highestBid = highestBid
    @listingStatus = listingStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetApiAccessRulesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   apiAccessRule - EBay::ApiAccessRuleType
class GetApiAccessRulesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :apiAccessRule

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, apiAccessRule = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @apiAccessRule = apiAccessRule
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesCSResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   attributeSystemVersion - SOAP::SOAPString
#   attributeData - SOAP::SOAPString
class GetAttributesCSResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :attributeData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, attributeSystemVersion = nil, attributeData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @attributeData = attributeData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetAttributesXSLResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   xSLFile - EBay::XSLFileType
class GetAttributesXSLResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :xSLFile

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, xSLFile = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @xSLFile = xSLFile
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBestOffersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bestOfferArray - EBay::BestOfferArrayType
#   item - EBay::ItemType
#   itemBestOffersArray - EBay::ItemBestOffersArrayType
#   pageNumber - SOAP::SOAPInt
#   paginationResult - EBay::PaginationResultType
class GetBestOffersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bestOfferArray
  attr_accessor :item
  attr_accessor :itemBestOffersArray
  attr_accessor :pageNumber
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bestOfferArray = nil, item = nil, itemBestOffersArray = nil, pageNumber = nil, paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bestOfferArray = bestOfferArray
    @item = item
    @itemBestOffersArray = itemBestOffersArray
    @pageNumber = pageNumber
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetBidderListResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bidder - EBay::UserType
#   bidItemArray - EBay::ItemArrayType
class GetBidderListResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bidder
  attr_accessor :bidItemArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bidder = nil, bidItemArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bidder = bidder
    @bidItemArray = bidItemArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoriesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   categoryArray - EBay::CategoryArrayType
#   categoryCount - SOAP::SOAPInt
#   updateTime - SOAP::SOAPDateTime
#   categoryVersion - SOAP::SOAPString
#   reservePriceAllowed - SOAP::SOAPBoolean
#   minimumReservePrice - SOAP::SOAPDouble
#   reduceReserveAllowed - SOAP::SOAPBoolean
class GetCategoriesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :categoryArray
  attr_accessor :categoryCount
  attr_accessor :updateTime
  attr_accessor :categoryVersion
  attr_accessor :reservePriceAllowed
  attr_accessor :minimumReservePrice
  attr_accessor :reduceReserveAllowed

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, categoryArray = nil, categoryCount = nil, updateTime = nil, categoryVersion = nil, reservePriceAllowed = nil, minimumReservePrice = nil, reduceReserveAllowed = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @categoryArray = categoryArray
    @categoryCount = categoryCount
    @updateTime = updateTime
    @categoryVersion = categoryVersion
    @reservePriceAllowed = reservePriceAllowed
    @minimumReservePrice = minimumReservePrice
    @reduceReserveAllowed = reduceReserveAllowed
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategory2CSResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   mappedCategoryArray - EBay::CategoryArrayType
#   unmappedCategoryArray - EBay::CategoryArrayType
#   attributeSystemVersion - SOAP::SOAPString
#   siteWideCharacteristicSets - EBay::SiteWideCharacteristicsType
class GetCategory2CSResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :mappedCategoryArray
  attr_accessor :unmappedCategoryArray
  attr_accessor :attributeSystemVersion
  attr_accessor :siteWideCharacteristicSets

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, mappedCategoryArray = nil, unmappedCategoryArray = nil, attributeSystemVersion = nil, siteWideCharacteristicSets = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @mappedCategoryArray = mappedCategoryArray
    @unmappedCategoryArray = unmappedCategoryArray
    @attributeSystemVersion = attributeSystemVersion
    @siteWideCharacteristicSets = siteWideCharacteristicSets
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryFeaturesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   categoryVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
#   category - EBay::CategoryFeatureType
#   siteDefaults - EBay::SiteDefaultsType
#   featureDefinitions - EBay::FeatureDefinitionsType
class GetCategoryFeaturesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :categoryVersion
  attr_accessor :updateTime
  attr_accessor :category
  attr_accessor :siteDefaults
  attr_accessor :featureDefinitions

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, categoryVersion = nil, updateTime = nil, category = [], siteDefaults = nil, featureDefinitions = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @categoryVersion = categoryVersion
    @updateTime = updateTime
    @category = category
    @siteDefaults = siteDefaults
    @featureDefinitions = featureDefinitions
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategoryMappingsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   categoryMapping - EBay::CategoryMappingType
#   categoryVersion - SOAP::SOAPString
class GetCategoryMappingsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :categoryMapping
  attr_accessor :categoryVersion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, categoryMapping = [], categoryVersion = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @categoryMapping = categoryMapping
    @categoryVersion = categoryVersion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCategorySpecificsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   recommendations - EBay::RecommendationsType
#   taskReferenceID - SOAP::SOAPString
#   fileReferenceID - SOAP::SOAPString
class GetCategorySpecificsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :recommendations
  attr_accessor :taskReferenceID
  attr_accessor :fileReferenceID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, recommendations = [], taskReferenceID = nil, fileReferenceID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @recommendations = recommendations
    @taskReferenceID = taskReferenceID
    @fileReferenceID = fileReferenceID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetChallengeTokenResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   challengeToken - SOAP::SOAPString
#   imageChallengeURL - SOAP::SOAPString
#   audioChallengeURL - SOAP::SOAPString
class GetChallengeTokenResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :challengeToken
  attr_accessor :imageChallengeURL
  attr_accessor :audioChallengeURL

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, challengeToken = nil, imageChallengeURL = nil, audioChallengeURL = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @challengeToken = challengeToken
    @imageChallengeURL = imageChallengeURL
    @audioChallengeURL = audioChallengeURL
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCharitiesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   charity - EBay::CharityInfoType
class GetCharitiesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :charity

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, charity = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @charity = charity
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetClientAlertsAuthTokenResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   clientAlertsAuthToken - SOAP::SOAPString
#   hardExpirationTime - SOAP::SOAPDateTime
class GetClientAlertsAuthTokenResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :clientAlertsAuthToken
  attr_accessor :hardExpirationTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, clientAlertsAuthToken = nil, hardExpirationTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @clientAlertsAuthToken = clientAlertsAuthToken
    @hardExpirationTime = hardExpirationTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetContextualKeywordsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   contextSearchAsset - EBay::ContextSearchAssetType
class GetContextualKeywordsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :contextSearchAsset

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, contextSearchAsset = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @contextSearchAsset = contextSearchAsset
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetCrossPromotionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   crossPromotion - EBay::CrossPromotionsType
class GetCrossPromotionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :crossPromotion

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, crossPromotion = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @crossPromotion = crossPromotion
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDescriptionTemplatesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   descriptionTemplate - EBay::DescriptionTemplateType
#   layoutTotal - SOAP::SOAPInt
#   obsoleteLayoutID - SOAP::SOAPInt
#   obsoleteThemeID - SOAP::SOAPInt
#   themeGroup - EBay::ThemeGroupType
#   themeTotal - SOAP::SOAPInt
class GetDescriptionTemplatesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :descriptionTemplate
  attr_accessor :layoutTotal
  attr_accessor :obsoleteLayoutID
  attr_accessor :obsoleteThemeID
  attr_accessor :themeGroup
  attr_accessor :themeTotal

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, descriptionTemplate = [], layoutTotal = nil, obsoleteLayoutID = [], obsoleteThemeID = [], themeGroup = [], themeTotal = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @descriptionTemplate = descriptionTemplate
    @layoutTotal = layoutTotal
    @obsoleteLayoutID = obsoleteLayoutID
    @obsoleteThemeID = obsoleteThemeID
    @themeGroup = themeGroup
    @themeTotal = themeTotal
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetDisputeResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   dispute - EBay::DisputeType
class GetDisputeResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :dispute

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, dispute = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @dispute = dispute
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetFeedbackResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   feedbackDetailArray - EBay::FeedbackDetailArrayType
#   feedbackDetailItemTotal - SOAP::SOAPInt
#   feedbackSummary - EBay::FeedbackSummaryType
#   feedbackScore - SOAP::SOAPInt
#   paginationResult - EBay::PaginationResultType
#   entriesPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
class GetFeedbackResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :feedbackDetailArray
  attr_accessor :feedbackDetailItemTotal
  attr_accessor :feedbackSummary
  attr_accessor :feedbackScore
  attr_accessor :paginationResult
  attr_accessor :entriesPerPage
  attr_accessor :pageNumber

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, feedbackDetailArray = nil, feedbackDetailItemTotal = nil, feedbackSummary = nil, feedbackScore = nil, paginationResult = nil, entriesPerPage = nil, pageNumber = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @feedbackDetailArray = feedbackDetailArray
    @feedbackDetailItemTotal = feedbackDetailItemTotal
    @feedbackSummary = feedbackSummary
    @feedbackScore = feedbackScore
    @paginationResult = paginationResult
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetHighBiddersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bidArray - EBay::OfferArrayType
#   listingStatus - EBay::ListingStatusCodeType
class GetHighBiddersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bidArray
  attr_accessor :listingStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bidArray = nil, listingStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bidArray = bidArray
    @listingStatus = listingStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   item - EBay::ItemType
class GetItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :item

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, item = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @item = item
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemRecommendationsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   getRecommendationsResponseContainer - EBay::GetRecommendationsResponseContainerType
class GetItemRecommendationsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :getRecommendationsResponseContainer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, getRecommendationsResponseContainer = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @getRecommendationsResponseContainer = getRecommendationsResponseContainer
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemShippingResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   shippingDetails - EBay::ShippingDetailsType
#   pickUpInStoreDetails - EBay::PickupInStoreDetailsType
class GetItemShippingResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :shippingDetails
  attr_accessor :pickUpInStoreDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, shippingDetails = nil, pickUpInStoreDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @shippingDetails = shippingDetails
    @pickUpInStoreDetails = pickUpInStoreDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemTransactionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - EBay::PaginationResultType
#   hasMoreTransactions - SOAP::SOAPBoolean
#   transactionsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   returnedTransactionCountActual - SOAP::SOAPInt
#   item - EBay::ItemType
#   transactionArray - EBay::TransactionArrayType
#   payPalPreferred - SOAP::SOAPBoolean
class GetItemTransactionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreTransactions
  attr_accessor :transactionsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedTransactionCountActual
  attr_accessor :item
  attr_accessor :transactionArray
  attr_accessor :payPalPreferred

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMoreTransactions = nil, transactionsPerPage = nil, pageNumber = nil, returnedTransactionCountActual = nil, item = nil, transactionArray = nil, payPalPreferred = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreTransactions = hasMoreTransactions
    @transactionsPerPage = transactionsPerPage
    @pageNumber = pageNumber
    @returnedTransactionCountActual = returnedTransactionCountActual
    @item = item
    @transactionArray = transactionArray
    @payPalPreferred = payPalPreferred
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetItemsAwaitingFeedbackResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemsAwaitingFeedback - EBay::PaginatedTransactionArrayType
class GetItemsAwaitingFeedbackResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemsAwaitingFeedback

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemsAwaitingFeedback = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemsAwaitingFeedback = itemsAwaitingFeedback
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMemberMessagesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   memberMessage - EBay::MemberMessageExchangeArrayType
#   paginationResult - EBay::PaginationResultType
#   hasMoreItems - SOAP::SOAPBoolean
class GetMemberMessagesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :memberMessage
  attr_accessor :paginationResult
  attr_accessor :hasMoreItems

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, memberMessage = nil, paginationResult = nil, hasMoreItems = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @memberMessage = memberMessage
    @paginationResult = paginationResult
    @hasMoreItems = hasMoreItems
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMessagePreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   aSQPreferences - EBay::ASQPreferencesType
class GetMessagePreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :aSQPreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, aSQPreferences = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @aSQPreferences = aSQPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyMessagesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   summary - EBay::MyMessagesSummaryType
#   alerts - EBay::MyMessagesAlertArrayType
#   messages - EBay::MyMessagesMessageArrayType
class GetMyMessagesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :summary
  attr_accessor :alerts
  attr_accessor :messages

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, summary = nil, alerts = nil, messages = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @summary = summary
    @alerts = alerts
    @messages = messages
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayBuyingResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   buyingSummary - EBay::BuyingSummaryType
#   watchList - EBay::PaginatedItemArrayType
#   bidList - EBay::PaginatedItemArrayType
#   bestOfferList - EBay::PaginatedItemArrayType
#   wonList - EBay::PaginatedOrderTransactionArrayType
#   lostList - EBay::PaginatedItemArrayType
#   favoriteSearches - EBay::MyeBayFavoriteSearchListType
#   favoriteSellers - EBay::MyeBayFavoriteSellerListType
#   secondChanceOffer - EBay::ItemType
#   bidAssistantList - EBay::BidGroupArrayType
#   deletedFromWonList - EBay::PaginatedOrderTransactionArrayType
#   deletedFromLostList - EBay::PaginatedItemArrayType
#   userDefinedList - EBay::UserDefinedListType
class GetMyeBayBuyingResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :buyingSummary
  attr_accessor :watchList
  attr_accessor :bidList
  attr_accessor :bestOfferList
  attr_accessor :wonList
  attr_accessor :lostList
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_accessor :secondChanceOffer
  attr_accessor :bidAssistantList
  attr_accessor :deletedFromWonList
  attr_accessor :deletedFromLostList
  attr_accessor :userDefinedList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, buyingSummary = nil, watchList = nil, bidList = nil, bestOfferList = nil, wonList = nil, lostList = nil, favoriteSearches = nil, favoriteSellers = nil, secondChanceOffer = [], bidAssistantList = nil, deletedFromWonList = nil, deletedFromLostList = nil, userDefinedList = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @buyingSummary = buyingSummary
    @watchList = watchList
    @bidList = bidList
    @bestOfferList = bestOfferList
    @wonList = wonList
    @lostList = lostList
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @secondChanceOffer = secondChanceOffer
    @bidAssistantList = bidAssistantList
    @deletedFromWonList = deletedFromWonList
    @deletedFromLostList = deletedFromLostList
    @userDefinedList = userDefinedList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBayRemindersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   buyingReminders - EBay::RemindersType
#   sellingReminders - EBay::RemindersType
class GetMyeBayRemindersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :buyingReminders
  attr_accessor :sellingReminders

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, buyingReminders = nil, sellingReminders = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @buyingReminders = buyingReminders
    @sellingReminders = sellingReminders
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetMyeBaySellingResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   sellingSummary - EBay::SellingSummaryType
#   scheduledList - EBay::PaginatedItemArrayType
#   activeList - EBay::PaginatedItemArrayType
#   soldList - EBay::PaginatedOrderTransactionArrayType
#   unsoldList - EBay::PaginatedItemArrayType
#   summary - EBay::MyeBaySellingSummaryType
#   bidList - EBay::PaginatedItemArrayType
#   deletedFromSoldList - EBay::PaginatedOrderTransactionArrayType
#   deletedFromUnsoldList - EBay::PaginatedItemArrayType
class GetMyeBaySellingResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :sellingSummary
  attr_accessor :scheduledList
  attr_accessor :activeList
  attr_accessor :soldList
  attr_accessor :unsoldList
  attr_accessor :summary
  attr_accessor :bidList
  attr_accessor :deletedFromSoldList
  attr_accessor :deletedFromUnsoldList

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, sellingSummary = nil, scheduledList = nil, activeList = nil, soldList = nil, unsoldList = nil, summary = nil, bidList = nil, deletedFromSoldList = nil, deletedFromUnsoldList = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @sellingSummary = sellingSummary
    @scheduledList = scheduledList
    @activeList = activeList
    @soldList = soldList
    @unsoldList = unsoldList
    @summary = summary
    @bidList = bidList
    @deletedFromSoldList = deletedFromSoldList
    @deletedFromUnsoldList = deletedFromUnsoldList
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationPreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   applicationDeliveryPreferences - EBay::ApplicationDeliveryPreferencesType
#   deliveryURLName - SOAP::SOAPString
#   userDeliveryPreferenceArray - EBay::NotificationEnableArrayType
#   userData - EBay::NotificationUserDataType
#   eventProperty - EBay::NotificationEventPropertyType
class GetNotificationPreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :applicationDeliveryPreferences
  attr_accessor :deliveryURLName
  attr_accessor :userDeliveryPreferenceArray
  attr_accessor :userData
  attr_accessor :eventProperty

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, applicationDeliveryPreferences = nil, deliveryURLName = nil, userDeliveryPreferenceArray = nil, userData = nil, eventProperty = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @applicationDeliveryPreferences = applicationDeliveryPreferences
    @deliveryURLName = deliveryURLName
    @userDeliveryPreferenceArray = userDeliveryPreferenceArray
    @userData = userData
    @eventProperty = eventProperty
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetNotificationsUsageResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   notificationDetailsArray - EBay::NotificationDetailsArrayType
#   markUpMarkDownHistory - EBay::MarkUpMarkDownHistoryType
#   notificationStatistics - EBay::NotificationStatisticsType
class GetNotificationsUsageResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :notificationDetailsArray
  attr_accessor :markUpMarkDownHistory
  attr_accessor :notificationStatistics

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, startTime = nil, endTime = nil, notificationDetailsArray = nil, markUpMarkDownHistory = nil, notificationStatistics = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @startTime = startTime
    @endTime = endTime
    @notificationDetailsArray = notificationDetailsArray
    @markUpMarkDownHistory = markUpMarkDownHistory
    @notificationStatistics = notificationStatistics
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrderTransactionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   orderArray - EBay::OrderArrayType
class GetOrderTransactionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :orderArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, orderArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @orderArray = orderArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetOrdersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - EBay::PaginationResultType
#   hasMoreOrders - SOAP::SOAPBoolean
#   orderArray - EBay::OrderArrayType
#   ordersPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   returnedOrderCountActual - SOAP::SOAPInt
class GetOrdersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreOrders
  attr_accessor :orderArray
  attr_accessor :ordersPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedOrderCountActual

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMoreOrders = nil, orderArray = nil, ordersPerPage = nil, pageNumber = nil, returnedOrderCountActual = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreOrders = hasMoreOrders
    @orderArray = orderArray
    @ordersPerPage = ordersPerPage
    @pageNumber = pageNumber
    @returnedOrderCountActual = returnedOrderCountActual
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   pictureManagerDetails - EBay::PictureManagerDetailsType
class GetPictureManagerDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :pictureManagerDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, pictureManagerDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @pictureManagerDetails = pictureManagerDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPictureManagerOptionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   subscription - EBay::PictureManagerSubscriptionType
#   pictureType - EBay::PictureManagerPictureDisplayType
class GetPictureManagerOptionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :subscription
  attr_accessor :pictureType

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, subscription = [], pictureType = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @subscription = subscription
    @pictureType = pictureType
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFamilyMembersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   dataElementSets - EBay::DataElementSetType
#   productSearchResult - EBay::ProductSearchResultType
class GetProductFamilyMembersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :dataElementSets
  attr_accessor :productSearchResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, dataElementSets = [], productSearchResult = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @dataElementSets = dataElementSets
    @productSearchResult = productSearchResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   attributeSystemVersion - SOAP::SOAPString
#   productFinderData - SOAP::SOAPString
class GetProductFinderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productFinderData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, attributeSystemVersion = nil, productFinderData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productFinderData = productFinderData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductFinderXSLResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   xSLFile - EBay::XSLFileType
class GetProductFinderXSLResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :xSLFile

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, xSLFile = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @xSLFile = xSLFile
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchPageResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   attributeSystemVersion - SOAP::SOAPString
#   productSearchPage - EBay::ProductSearchPageType
class GetProductSearchPageResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :attributeSystemVersion
  attr_accessor :productSearchPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, attributeSystemVersion = nil, productSearchPage = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @attributeSystemVersion = attributeSystemVersion
    @productSearchPage = productSearchPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSearchResultsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   dataElementSets - EBay::DataElementSetType
#   productSearchResult - EBay::ProductSearchResultType
class GetProductSearchResultsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :dataElementSets
  attr_accessor :productSearchResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, dataElementSets = [], productSearchResult = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @dataElementSets = dataElementSets
    @productSearchResult = productSearchResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetProductSellingPagesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   productSellingPagesData - SOAP::SOAPString
class GetProductSellingPagesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :productSellingPagesData

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, productSellingPagesData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @productSellingPagesData = productSellingPagesData
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionRulesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   promotionRuleArray - EBay::PromotionRuleArrayType
class GetPromotionRulesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :promotionRuleArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, promotionRuleArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @promotionRuleArray = promotionRuleArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetPromotionalSaleDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   promotionalSaleDetails - EBay::PromotionalSaleArrayType
class GetPromotionalSaleDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :promotionalSaleDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, promotionalSaleDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @promotionalSaleDetails = promotionalSaleDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerDashboardResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   searchStanding - EBay::SearchStandingDashboardType
#   sellerFeeDiscount - EBay::SellerFeeDiscountDashboardType
#   powerSellerStatus - EBay::PowerSellerDashboardType
#   policyCompliance - EBay::PolicyComplianceDashboardType
#   buyerSatisfaction - EBay::BuyerSatisfactionDashboardType
#   sellerAccount - EBay::SellerAccountDashboardType
#   performance - EBay::PerformanceDashboardType
class GetSellerDashboardResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :searchStanding
  attr_accessor :sellerFeeDiscount
  attr_accessor :powerSellerStatus
  attr_accessor :policyCompliance
  attr_accessor :buyerSatisfaction
  attr_accessor :sellerAccount
  attr_accessor :performance

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, searchStanding = nil, sellerFeeDiscount = nil, powerSellerStatus = nil, policyCompliance = nil, buyerSatisfaction = nil, sellerAccount = nil, performance = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @searchStanding = searchStanding
    @sellerFeeDiscount = sellerFeeDiscount
    @powerSellerStatus = powerSellerStatus
    @policyCompliance = policyCompliance
    @buyerSatisfaction = buyerSatisfaction
    @sellerAccount = sellerAccount
    @performance = performance
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerEventsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   timeTo - SOAP::SOAPDateTime
#   itemArray - EBay::ItemArrayType
class GetSellerEventsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :timeTo
  attr_accessor :itemArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, timeTo = nil, itemArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @timeTo = timeTo
    @itemArray = itemArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerListResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - EBay::PaginationResultType
#   hasMoreItems - SOAP::SOAPBoolean
#   itemArray - EBay::ItemArrayType
#   itemsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   returnedItemCountActual - SOAP::SOAPInt
#   seller - EBay::UserType
class GetSellerListResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreItems
  attr_accessor :itemArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedItemCountActual
  attr_accessor :seller

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMoreItems = nil, itemArray = nil, itemsPerPage = nil, pageNumber = nil, returnedItemCountActual = nil, seller = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreItems = hasMoreItems
    @itemArray = itemArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @returnedItemCountActual = returnedItemCountActual
    @seller = seller
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerPaymentsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - EBay::PaginationResultType
#   hasMorePayments - SOAP::SOAPBoolean
#   sellerPayment - EBay::SellerPaymentType
#   paymentsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   returnedPaymentCountActual - SOAP::SOAPInt
class GetSellerPaymentsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMorePayments
  attr_accessor :sellerPayment
  attr_accessor :paymentsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedPaymentCountActual

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMorePayments = nil, sellerPayment = [], paymentsPerPage = nil, pageNumber = nil, returnedPaymentCountActual = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMorePayments = hasMorePayments
    @sellerPayment = sellerPayment
    @paymentsPerPage = paymentsPerPage
    @pageNumber = pageNumber
    @returnedPaymentCountActual = returnedPaymentCountActual
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellerTransactionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - EBay::PaginationResultType
#   hasMoreTransactions - SOAP::SOAPBoolean
#   transactionsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   returnedTransactionCountActual - SOAP::SOAPInt
#   seller - EBay::UserType
#   transactionArray - EBay::TransactionArrayType
#   payPalPreferred - SOAP::SOAPBoolean
class GetSellerTransactionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreTransactions
  attr_accessor :transactionsPerPage
  attr_accessor :pageNumber
  attr_accessor :returnedTransactionCountActual
  attr_accessor :seller
  attr_accessor :transactionArray
  attr_accessor :payPalPreferred

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMoreTransactions = nil, transactionsPerPage = nil, pageNumber = nil, returnedTransactionCountActual = nil, seller = nil, transactionArray = nil, payPalPreferred = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreTransactions = hasMoreTransactions
    @transactionsPerPage = transactionsPerPage
    @pageNumber = pageNumber
    @returnedTransactionCountActual = returnedTransactionCountActual
    @seller = seller
    @transactionArray = transactionArray
    @payPalPreferred = payPalPreferred
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerAlertsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   alert - EBay::SellingManagerAlertType
class GetSellingManagerAlertsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :alert

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, alert = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @alert = alert
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerEmailLogResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   emailLog - EBay::SellingManagerEmailLogType
class GetSellingManagerEmailLogResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :emailLog

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, emailLog = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @emailLog = emailLog
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerInventoryResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   inventoryCountLastCalculatedDate - SOAP::SOAPDateTime
#   sellingManagerProduct - EBay::SellingManagerProductType
#   paginationResult - EBay::PaginationResultType
class GetSellingManagerInventoryResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :inventoryCountLastCalculatedDate
  attr_accessor :sellingManagerProduct
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, inventoryCountLastCalculatedDate = nil, sellingManagerProduct = [], paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @inventoryCountLastCalculatedDate = inventoryCountLastCalculatedDate
    @sellingManagerProduct = sellingManagerProduct
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerInventoryFolderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   folder - EBay::SellingManagerFolderDetailsType
class GetSellingManagerInventoryFolderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :folder

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, folder = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @folder = folder
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerItemAutomationRuleResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   automatedListingRule - EBay::SellingManagerAutoListType
#   automatedRelistingRule - EBay::SellingManagerAutoRelistType
#   automatedSecondChanceOfferRule - EBay::SellingManagerAutoSecondChanceOfferType
#   fees - EBay::FeesType
class GetSellingManagerItemAutomationRuleResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :automatedListingRule
  attr_accessor :automatedRelistingRule
  attr_accessor :automatedSecondChanceOfferRule
  attr_accessor :fees

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, automatedListingRule = nil, automatedRelistingRule = nil, automatedSecondChanceOfferRule = nil, fees = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @automatedListingRule = automatedListingRule
    @automatedRelistingRule = automatedRelistingRule
    @automatedSecondChanceOfferRule = automatedSecondChanceOfferRule
    @fees = fees
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerSaleRecordResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   sellingManagerSoldOrder - EBay::SellingManagerSoldOrderType
class GetSellingManagerSaleRecordResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :sellingManagerSoldOrder

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, sellingManagerSoldOrder = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @sellingManagerSoldOrder = sellingManagerSoldOrder
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerSoldListingsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   saleRecord - EBay::SellingManagerSoldOrderType
#   paginationResult - EBay::PaginationResultType
class GetSellingManagerSoldListingsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :saleRecord
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, saleRecord = [], paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @saleRecord = saleRecord
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerTemplateAutomationRuleResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   automatedListingRule - EBay::SellingManagerAutoListType
#   automatedRelistingRule - EBay::SellingManagerAutoRelistType
#   automatedSecondChanceOfferRule - EBay::SellingManagerAutoSecondChanceOfferType
#   fees - EBay::FeesType
class GetSellingManagerTemplateAutomationRuleResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :automatedListingRule
  attr_accessor :automatedRelistingRule
  attr_accessor :automatedSecondChanceOfferRule
  attr_accessor :fees

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, automatedListingRule = nil, automatedRelistingRule = nil, automatedSecondChanceOfferRule = nil, fees = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @automatedListingRule = automatedListingRule
    @automatedRelistingRule = automatedRelistingRule
    @automatedSecondChanceOfferRule = automatedSecondChanceOfferRule
    @fees = fees
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSellingManagerTemplatesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   sellingManagerTemplateDetailsArray - EBay::SellingManagerTemplateDetailsArrayType
class GetSellingManagerTemplatesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :sellingManagerTemplateDetailsArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, sellingManagerTemplateDetailsArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @sellingManagerTemplateDetailsArray = sellingManagerTemplateDetailsArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSessionIDResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   sessionID - SOAP::SOAPString
class GetSessionIDResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :sessionID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, sessionID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @sessionID = sessionID
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetShippingDiscountProfilesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   currencyID - EBay::CurrencyCodeType
#   flatShippingDiscount - EBay::FlatShippingDiscountType
#   calculatedShippingDiscount - EBay::CalculatedShippingDiscountType
#   promotionalShippingDiscount - SOAP::SOAPBoolean
#   calculatedHandlingDiscount - EBay::CalculatedHandlingDiscountType
#   promotionalShippingDiscountDetails - EBay::PromotionalShippingDiscountDetailsType
#   shippingInsurance - EBay::ShippingInsuranceType
#   internationalShippingInsurance - EBay::ShippingInsuranceType
#   combinedDuration - EBay::CombinedPaymentPeriodCodeType
class GetShippingDiscountProfilesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :currencyID
  attr_accessor :flatShippingDiscount
  attr_accessor :calculatedShippingDiscount
  attr_accessor :promotionalShippingDiscount
  attr_accessor :calculatedHandlingDiscount
  attr_accessor :promotionalShippingDiscountDetails
  attr_accessor :shippingInsurance
  attr_accessor :internationalShippingInsurance
  attr_accessor :combinedDuration

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, currencyID = nil, flatShippingDiscount = nil, calculatedShippingDiscount = nil, promotionalShippingDiscount = nil, calculatedHandlingDiscount = nil, promotionalShippingDiscountDetails = nil, shippingInsurance = nil, internationalShippingInsurance = nil, combinedDuration = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @currencyID = currencyID
    @flatShippingDiscount = flatShippingDiscount
    @calculatedShippingDiscount = calculatedShippingDiscount
    @promotionalShippingDiscount = promotionalShippingDiscount
    @calculatedHandlingDiscount = calculatedHandlingDiscount
    @promotionalShippingDiscountDetails = promotionalShippingDiscountDetails
    @shippingInsurance = shippingInsurance
    @internationalShippingInsurance = internationalShippingInsurance
    @combinedDuration = combinedDuration
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   store - EBay::StoreType
class GetStoreResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :store

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, store = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @store = store
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCategoryUpdateStatusResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   status - EBay::TaskStatusCodeType
class GetStoreCategoryUpdateStatusResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :status

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, status = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @status = status
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreCustomPageResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   customPageArray - EBay::StoreCustomPageArrayType
class GetStoreCustomPageResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :customPageArray

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, customPageArray = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @customPageArray = customPageArray
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStoreOptionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   basicThemeArray - EBay::StoreThemeArrayType
#   advancedThemeArray - EBay::StoreThemeArrayType
#   logoArray - EBay::StoreLogoArrayType
#   subscriptionArray - EBay::StoreSubscriptionArrayType
#   maxCategories - SOAP::SOAPInt
#   maxCategoryLevels - SOAP::SOAPInt
class GetStoreOptionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :basicThemeArray
  attr_accessor :advancedThemeArray
  attr_accessor :logoArray
  attr_accessor :subscriptionArray
  attr_accessor :maxCategories
  attr_accessor :maxCategoryLevels

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, basicThemeArray = nil, advancedThemeArray = nil, logoArray = nil, subscriptionArray = nil, maxCategories = nil, maxCategoryLevels = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @basicThemeArray = basicThemeArray
    @advancedThemeArray = advancedThemeArray
    @logoArray = logoArray
    @subscriptionArray = subscriptionArray
    @maxCategories = maxCategories
    @maxCategoryLevels = maxCategoryLevels
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetStorePreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   storePreferences - EBay::StorePreferencesType
class GetStorePreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :storePreferences

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, storePreferences = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @storePreferences = storePreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetSuggestedCategoriesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   suggestedCategoryArray - EBay::SuggestedCategoryArrayType
#   categoryCount - SOAP::SOAPInt
class GetSuggestedCategoriesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :suggestedCategoryArray
  attr_accessor :categoryCount

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, suggestedCategoryArray = nil, categoryCount = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @suggestedCategoryArray = suggestedCategoryArray
    @categoryCount = categoryCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTaxTableResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   lastUpdateTime - SOAP::SOAPDateTime
#   taxTable - EBay::TaxTableType
class GetTaxTableResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :lastUpdateTime
  attr_accessor :taxTable

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, lastUpdateTime = nil, taxTable = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @lastUpdateTime = lastUpdateTime
    @taxTable = taxTable
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetTokenStatusResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   tokenStatus - EBay::TokenStatusType
class GetTokenStatusResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :tokenStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, tokenStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @tokenStatus = tokenStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   user - EBay::UserType
class GetUserResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :user

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, user = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @user = user
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserContactDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   userID - SOAP::SOAPString
#   contactAddress - EBay::AddressType
#   registrationDate - SOAP::SOAPDateTime
class GetUserContactDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :userID
  attr_accessor :contactAddress
  attr_accessor :registrationDate

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, userID = nil, contactAddress = nil, registrationDate = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @userID = userID
    @contactAddress = contactAddress
    @registrationDate = registrationDate
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserDisputesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   startingDisputeID - (any)
#   endingDisputeID - (any)
#   disputeArray - EBay::DisputeArrayType
#   itemsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   disputeFilterCount - EBay::DisputeFilterCountType
#   paginationResult - EBay::PaginationResultType
class GetUserDisputesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :startingDisputeID
  attr_accessor :endingDisputeID
  attr_accessor :disputeArray
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :disputeFilterCount
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, startingDisputeID = nil, endingDisputeID = nil, disputeArray = nil, itemsPerPage = nil, pageNumber = nil, disputeFilterCount = [], paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @startingDisputeID = startingDisputeID
    @endingDisputeID = endingDisputeID
    @disputeArray = disputeArray
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @disputeFilterCount = disputeFilterCount
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetUserPreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   bidderNoticePreferences - EBay::BidderNoticePreferencesType
#   combinedPaymentPreferences - EBay::CombinedPaymentPreferencesType
#   crossPromotionPreferences - EBay::CrossPromotionPreferencesType
#   sellerPaymentPreferences - EBay::SellerPaymentPreferencesType
#   sellerFavoriteItemPreferences - EBay::SellerFavoriteItemPreferencesType
#   endOfAuctionEmailPreferences - EBay::EndOfAuctionEmailPreferencesType
#   emailShipmentTrackingNumberPreference - SOAP::SOAPBoolean
#   requiredShipPhoneNumberPreference - SOAP::SOAPBoolean
#   proStoresPreference - EBay::ProStoresCheckoutPreferenceType
#   unpaidItemAssistancePreferences - EBay::UnpaidItemAssistancePreferencesType
#   sellerExcludeShipToLocationPreferences - EBay::SellerExcludeShipToLocationPreferencesType
#   purchaseReminderEmailPreferences - EBay::PurchaseReminderEmailPreferencesType
#   sellerThirdPartyCheckoutDisabled - SOAP::SOAPBoolean
#   sellerProfilePreferences - EBay::SellerProfilePreferencesType
#   sellerReturnPreferences - EBay::SellerReturnPreferencesType
#   offerGlobalShippingProgramPreference - SOAP::SOAPBoolean
#   dispatchCutoffTimePreference - EBay::DispatchCutoffTimePreferencesType
#   globalShippingProgramListingPreference - SOAP::SOAPBoolean
#   overrideGSPServiceWithIntlServicePreference - SOAP::SOAPBoolean
#   pickupDropoffSellerPreference - SOAP::SOAPBoolean
#   outOfStockControlPreference - SOAP::SOAPBoolean
#   eBayPLUSPreference - EBay::EBayPLUSPreferenceType
class GetUserPreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :bidderNoticePreferences
  attr_accessor :combinedPaymentPreferences
  attr_accessor :crossPromotionPreferences
  attr_accessor :sellerPaymentPreferences
  attr_accessor :sellerFavoriteItemPreferences
  attr_accessor :endOfAuctionEmailPreferences
  attr_accessor :emailShipmentTrackingNumberPreference
  attr_accessor :requiredShipPhoneNumberPreference
  attr_accessor :proStoresPreference
  attr_accessor :unpaidItemAssistancePreferences
  attr_accessor :sellerExcludeShipToLocationPreferences
  attr_accessor :purchaseReminderEmailPreferences
  attr_accessor :sellerThirdPartyCheckoutDisabled
  attr_accessor :sellerProfilePreferences
  attr_accessor :sellerReturnPreferences
  attr_accessor :offerGlobalShippingProgramPreference
  attr_accessor :dispatchCutoffTimePreference
  attr_accessor :globalShippingProgramListingPreference
  attr_accessor :overrideGSPServiceWithIntlServicePreference
  attr_accessor :pickupDropoffSellerPreference
  attr_accessor :outOfStockControlPreference
  attr_accessor :eBayPLUSPreference

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, bidderNoticePreferences = nil, combinedPaymentPreferences = nil, crossPromotionPreferences = nil, sellerPaymentPreferences = nil, sellerFavoriteItemPreferences = nil, endOfAuctionEmailPreferences = nil, emailShipmentTrackingNumberPreference = nil, requiredShipPhoneNumberPreference = nil, proStoresPreference = nil, unpaidItemAssistancePreferences = nil, sellerExcludeShipToLocationPreferences = nil, purchaseReminderEmailPreferences = nil, sellerThirdPartyCheckoutDisabled = nil, sellerProfilePreferences = nil, sellerReturnPreferences = nil, offerGlobalShippingProgramPreference = nil, dispatchCutoffTimePreference = nil, globalShippingProgramListingPreference = nil, overrideGSPServiceWithIntlServicePreference = nil, pickupDropoffSellerPreference = nil, outOfStockControlPreference = nil, eBayPLUSPreference = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @bidderNoticePreferences = bidderNoticePreferences
    @combinedPaymentPreferences = combinedPaymentPreferences
    @crossPromotionPreferences = crossPromotionPreferences
    @sellerPaymentPreferences = sellerPaymentPreferences
    @sellerFavoriteItemPreferences = sellerFavoriteItemPreferences
    @endOfAuctionEmailPreferences = endOfAuctionEmailPreferences
    @emailShipmentTrackingNumberPreference = emailShipmentTrackingNumberPreference
    @requiredShipPhoneNumberPreference = requiredShipPhoneNumberPreference
    @proStoresPreference = proStoresPreference
    @unpaidItemAssistancePreferences = unpaidItemAssistancePreferences
    @sellerExcludeShipToLocationPreferences = sellerExcludeShipToLocationPreferences
    @purchaseReminderEmailPreferences = purchaseReminderEmailPreferences
    @sellerThirdPartyCheckoutDisabled = sellerThirdPartyCheckoutDisabled
    @sellerProfilePreferences = sellerProfilePreferences
    @sellerReturnPreferences = sellerReturnPreferences
    @offerGlobalShippingProgramPreference = offerGlobalShippingProgramPreference
    @dispatchCutoffTimePreference = dispatchCutoffTimePreference
    @globalShippingProgramListingPreference = globalShippingProgramListingPreference
    @overrideGSPServiceWithIntlServicePreference = overrideGSPServiceWithIntlServicePreference
    @pickupDropoffSellerPreference = pickupDropoffSellerPreference
    @outOfStockControlPreference = outOfStockControlPreference
    @eBayPLUSPreference = eBayPLUSPreference
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetVeROReasonCodeDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   veROReasonCodeDetails - EBay::VeROReasonCodeDetailsType
class GetVeROReasonCodeDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :veROReasonCodeDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, veROReasonCodeDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @veROReasonCodeDetails = veROReasonCodeDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetVeROReportStatusResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   paginationResult - EBay::PaginationResultType
#   hasMoreItems - SOAP::SOAPBoolean
#   itemsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   veROReportPacketID - SOAP::SOAPLong
#   veROReportPacketStatus - EBay::VeROReportPacketStatusCodeType
#   reportedItemDetails - EBay::VeROReportedItemDetailsType
class GetVeROReportStatusResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :paginationResult
  attr_accessor :hasMoreItems
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :veROReportPacketID
  attr_accessor :veROReportPacketStatus
  attr_accessor :reportedItemDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, paginationResult = nil, hasMoreItems = nil, itemsPerPage = nil, pageNumber = nil, veROReportPacketID = nil, veROReportPacketStatus = nil, reportedItemDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @paginationResult = paginationResult
    @hasMoreItems = hasMoreItems
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @veROReportPacketID = veROReportPacketID
    @veROReportPacketStatus = veROReportPacketStatus
    @reportedItemDetails = reportedItemDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowPostResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   wantItNowPost - EBay::WantItNowPostType
class GetWantItNowPostResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :wantItNowPost

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, wantItNowPost = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @wantItNowPost = wantItNowPost
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetWantItNowSearchResultsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   wantItNowPostArray - EBay::WantItNowPostArrayType
#   hasMoreItems - SOAP::SOAPBoolean
#   itemsPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
#   paginationResult - EBay::PaginationResultType
class GetWantItNowSearchResultsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :wantItNowPostArray
  attr_accessor :hasMoreItems
  attr_accessor :itemsPerPage
  attr_accessor :pageNumber
  attr_accessor :paginationResult

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, wantItNowPostArray = nil, hasMoreItems = nil, itemsPerPage = nil, pageNumber = nil, paginationResult = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @wantItNowPostArray = wantItNowPostArray
    @hasMoreItems = hasMoreItems
    @itemsPerPage = itemsPerPage
    @pageNumber = pageNumber
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   countryDetails - EBay::CountryDetailsType
#   currencyDetails - EBay::CurrencyDetailsType
#   dispatchTimeMaxDetails - EBay::DispatchTimeMaxDetailsType
#   paymentOptionDetails - EBay::PaymentOptionDetailsType
#   regionDetails - EBay::RegionDetailsType
#   shippingLocationDetails - EBay::ShippingLocationDetailsType
#   shippingServiceDetails - EBay::ShippingServiceDetailsType
#   siteDetails - EBay::SiteDetailsType
#   taxJurisdiction - EBay::TaxJurisdictionType
#   uRLDetails - EBay::URLDetailsType
#   timeZoneDetails - EBay::TimeZoneDetailsType
#   itemSpecificDetails - EBay::ItemSpecificDetailsType
#   unitOfMeasurementDetails - EBay::UnitOfMeasurementDetailsType
#   regionOfOriginDetails - EBay::RegionOfOriginDetailsType
#   shippingPackageDetails - EBay::ShippingPackageDetailsType
#   shippingCarrierDetails - EBay::ShippingCarrierDetailsType
#   returnPolicyDetails - EBay::ReturnPolicyDetailsType
#   listingStartPriceDetails - EBay::ListingStartPriceDetailsType
#   buyerRequirementDetails - EBay::SiteBuyerRequirementDetailsType
#   listingFeatureDetails - EBay::ListingFeatureDetailsType
#   variationDetails - EBay::VariationDetailsType
#   excludeShippingLocationDetails - EBay::ExcludeShippingLocationDetailsType
#   updateTime - SOAP::SOAPDateTime
#   recoupmentPolicyDetails - EBay::RecoupmentPolicyDetailsType
#   shippingCategoryDetails - EBay::ShippingCategoryDetailsType
#   productDetails - EBay::ProductDetailsType
class GeteBayDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :countryDetails
  attr_accessor :currencyDetails
  attr_accessor :dispatchTimeMaxDetails
  attr_accessor :paymentOptionDetails
  attr_accessor :regionDetails
  attr_accessor :shippingLocationDetails
  attr_accessor :shippingServiceDetails
  attr_accessor :siteDetails
  attr_accessor :taxJurisdiction
  attr_accessor :uRLDetails
  attr_accessor :timeZoneDetails
  attr_accessor :itemSpecificDetails
  attr_accessor :unitOfMeasurementDetails
  attr_accessor :regionOfOriginDetails
  attr_accessor :shippingPackageDetails
  attr_accessor :shippingCarrierDetails
  attr_accessor :returnPolicyDetails
  attr_accessor :listingStartPriceDetails
  attr_accessor :buyerRequirementDetails
  attr_accessor :listingFeatureDetails
  attr_accessor :variationDetails
  attr_accessor :excludeShippingLocationDetails
  attr_accessor :updateTime
  attr_accessor :recoupmentPolicyDetails
  attr_accessor :shippingCategoryDetails
  attr_accessor :productDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, countryDetails = [], currencyDetails = [], dispatchTimeMaxDetails = [], paymentOptionDetails = [], regionDetails = [], shippingLocationDetails = [], shippingServiceDetails = [], siteDetails = [], taxJurisdiction = [], uRLDetails = [], timeZoneDetails = [], itemSpecificDetails = [], unitOfMeasurementDetails = [], regionOfOriginDetails = [], shippingPackageDetails = [], shippingCarrierDetails = [], returnPolicyDetails = nil, listingStartPriceDetails = [], buyerRequirementDetails = [], listingFeatureDetails = [], variationDetails = nil, excludeShippingLocationDetails = [], updateTime = nil, recoupmentPolicyDetails = [], shippingCategoryDetails = [], productDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @countryDetails = countryDetails
    @currencyDetails = currencyDetails
    @dispatchTimeMaxDetails = dispatchTimeMaxDetails
    @paymentOptionDetails = paymentOptionDetails
    @regionDetails = regionDetails
    @shippingLocationDetails = shippingLocationDetails
    @shippingServiceDetails = shippingServiceDetails
    @siteDetails = siteDetails
    @taxJurisdiction = taxJurisdiction
    @uRLDetails = uRLDetails
    @timeZoneDetails = timeZoneDetails
    @itemSpecificDetails = itemSpecificDetails
    @unitOfMeasurementDetails = unitOfMeasurementDetails
    @regionOfOriginDetails = regionOfOriginDetails
    @shippingPackageDetails = shippingPackageDetails
    @shippingCarrierDetails = shippingCarrierDetails
    @returnPolicyDetails = returnPolicyDetails
    @listingStartPriceDetails = listingStartPriceDetails
    @buyerRequirementDetails = buyerRequirementDetails
    @listingFeatureDetails = listingFeatureDetails
    @variationDetails = variationDetails
    @excludeShippingLocationDetails = excludeShippingLocationDetails
    @updateTime = updateTime
    @recoupmentPolicyDetails = recoupmentPolicyDetails
    @shippingCategoryDetails = shippingCategoryDetails
    @productDetails = productDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}GeteBayOfficialTimeResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class GeteBayOfficialTimeResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}IssueRefundResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   refundFromSeller - EBay::AmountType
#   totalRefundToBuyer - EBay::AmountType
class IssueRefundResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :refundFromSeller
  attr_accessor :totalRefundToBuyer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, refundFromSeller = nil, totalRefundToBuyer = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @refundFromSeller = refundFromSeller
    @totalRefundToBuyer = totalRefundToBuyer
  end
end

# {urn:ebay:apis:eBLBaseComponents}LeaveFeedbackResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   feedbackID - SOAP::SOAPString
class LeaveFeedbackResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :feedbackID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, feedbackID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @feedbackID = feedbackID
  end
end

# {urn:ebay:apis:eBLBaseComponents}MoveSellingManagerInventoryFolderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class MoveSellingManagerInventoryFolderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PlaceOfferResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   sellingStatus - EBay::SellingStatusType
#   transactionID - SOAP::SOAPString
#   bestOffer - EBay::BestOfferType
#   orderLineItemID - SOAP::SOAPString
class PlaceOfferResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :sellingStatus
  attr_accessor :transactionID
  attr_accessor :bestOffer
  attr_accessor :orderLineItemID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, sellingStatus = nil, transactionID = nil, bestOffer = nil, orderLineItemID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @sellingStatus = sellingStatus
    @transactionID = transactionID
    @bestOffer = bestOffer
    @orderLineItemID = orderLineItemID
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelistFixedPriceItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   sKU - (any)
#   fees - EBay::FeesType
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
#   discountReason - EBay::DiscountReasonCodeType
#   productSuggestions - EBay::ProductSuggestionsType
#   listingRecommendations - EBay::ListingRecommendationsType
class RelistFixedPriceItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :sKU
  attr_accessor :fees
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :discountReason
  attr_accessor :productSuggestions
  attr_accessor :listingRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, sKU = nil, fees = nil, startTime = nil, endTime = nil, categoryID = nil, category2ID = nil, discountReason = [], productSuggestions = nil, listingRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @sKU = sKU
    @fees = fees
    @startTime = startTime
    @endTime = endTime
    @categoryID = categoryID
    @category2ID = category2ID
    @discountReason = discountReason
    @productSuggestions = productSuggestions
    @listingRecommendations = listingRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}RelistItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   fees - EBay::FeesType
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
#   discountReason - EBay::DiscountReasonCodeType
#   productSuggestions - EBay::ProductSuggestionsType
#   listingRecommendations - EBay::ListingRecommendationsType
class RelistItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :discountReason
  attr_accessor :productSuggestions
  attr_accessor :listingRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, fees = nil, startTime = nil, endTime = nil, categoryID = nil, category2ID = nil, discountReason = [], productSuggestions = nil, listingRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @startTime = startTime
    @endTime = endTime
    @categoryID = categoryID
    @category2ID = category2ID
    @discountReason = discountReason
    @productSuggestions = productSuggestions
    @listingRecommendations = listingRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemoveFromWatchListResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   watchListCount - SOAP::SOAPInt
#   watchListMaximum - SOAP::SOAPInt
class RemoveFromWatchListResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :watchListCount
  attr_accessor :watchListMaximum

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, watchListCount = nil, watchListMaximum = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @watchListCount = watchListCount
    @watchListMaximum = watchListMaximum
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToBestOfferResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   respondToBestOffer - EBay::BestOfferArrayType
class RespondToBestOfferResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :respondToBestOffer

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, respondToBestOffer = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @respondToBestOffer = respondToBestOffer
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToFeedbackResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class RespondToFeedbackResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RespondToWantItNowPostResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class RespondToWantItNowPostResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseCheckoutStatusResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class ReviseCheckoutStatusResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseFixedPriceItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   sKU - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   fees - EBay::FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
#   discountReason - EBay::DiscountReasonCodeType
#   productSuggestions - EBay::ProductSuggestionsType
#   listingRecommendations - EBay::ListingRecommendationsType
class ReviseFixedPriceItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :sKU
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :discountReason
  attr_accessor :productSuggestions
  attr_accessor :listingRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, sKU = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil, discountReason = [], productSuggestions = nil, listingRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @sKU = sKU
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
    @discountReason = discountReason
    @productSuggestions = productSuggestions
    @listingRecommendations = listingRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseInventoryStatusResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   inventoryStatus - EBay::InventoryStatusType
#   fees - EBay::InventoryFeesType
class ReviseInventoryStatusResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :inventoryStatus
  attr_accessor :fees

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, inventoryStatus = [], fees = [])
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @inventoryStatus = inventoryStatus
    @fees = fees
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   fees - EBay::FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
#   verifyOnly - SOAP::SOAPBoolean
#   discountReason - EBay::DiscountReasonCodeType
#   productSuggestions - EBay::ProductSuggestionsType
#   listingRecommendations - EBay::ListingRecommendationsType
class ReviseItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :verifyOnly
  attr_accessor :discountReason
  attr_accessor :productSuggestions
  attr_accessor :listingRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil, verifyOnly = nil, discountReason = [], productSuggestions = nil, listingRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
    @verifyOnly = verifyOnly
    @discountReason = discountReason
    @productSuggestions = productSuggestions
    @listingRecommendations = listingRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class ReviseMyMessagesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseMyMessagesFoldersResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class ReviseMyMessagesFoldersResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseSellingManagerInventoryFolderResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   folder - EBay::SellingManagerFolderDetailsType
class ReviseSellingManagerInventoryFolderResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :folder

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, folder = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @folder = folder
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseSellingManagerProductResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   sellingManagerProductDetails - EBay::SellingManagerProductDetailsType
class ReviseSellingManagerProductResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :sellingManagerProductDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, sellingManagerProductDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @sellingManagerProductDetails = sellingManagerProductDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseSellingManagerSaleRecordResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class ReviseSellingManagerSaleRecordResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseSellingManagerTemplateResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   saleTemplateID - SOAP::SOAPLong
#   fees - EBay::FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
#   verifyOnly - SOAP::SOAPBoolean
#   saleTemplateName - SOAP::SOAPString
#   sellingManagerProductDetails - EBay::SellingManagerProductDetailsType
class ReviseSellingManagerTemplateResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :saleTemplateID
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :verifyOnly
  attr_accessor :saleTemplateName
  attr_accessor :sellingManagerProductDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, saleTemplateID = nil, fees = nil, categoryID = nil, category2ID = nil, verifyOnly = nil, saleTemplateName = nil, sellingManagerProductDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @saleTemplateID = saleTemplateID
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
    @verifyOnly = verifyOnly
    @saleTemplateName = saleTemplateName
    @sellingManagerProductDetails = sellingManagerProductDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}RevokeTokenResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class RevokeTokenResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SaveItemToSellingManagerTemplateResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   templateID - SOAP::SOAPLong
class SaveItemToSellingManagerTemplateResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :templateID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, templateID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @templateID = templateID
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerReverseDisputeResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SellerReverseDisputeResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SendInvoiceResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SendInvoiceResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetMessagePreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetMessagePreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetNotificationPreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetNotificationPreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPictureManagerDetailsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetPictureManagerDetailsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionalSaleResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   status - EBay::PromotionalSaleStatusCodeType
#   promotionalSaleID - SOAP::SOAPLong
class SetPromotionalSaleResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :status
  attr_accessor :promotionalSaleID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, status = nil, promotionalSaleID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @status = status
    @promotionalSaleID = promotionalSaleID
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetPromotionalSaleListingsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   status - EBay::PromotionalSaleStatusCodeType
class SetPromotionalSaleListingsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :status

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, status = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @status = status
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetSellingManagerFeedbackOptionsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetSellingManagerFeedbackOptionsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetSellingManagerItemAutomationRuleResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   automatedListingRule - EBay::SellingManagerAutoListType
#   automatedRelistingRule - EBay::SellingManagerAutoRelistType
#   automatedSecondChanceOfferRule - EBay::SellingManagerAutoSecondChanceOfferType
#   fees - EBay::FeesType
class SetSellingManagerItemAutomationRuleResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :automatedListingRule
  attr_accessor :automatedRelistingRule
  attr_accessor :automatedSecondChanceOfferRule
  attr_accessor :fees

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, automatedListingRule = nil, automatedRelistingRule = nil, automatedSecondChanceOfferRule = nil, fees = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @automatedListingRule = automatedListingRule
    @automatedRelistingRule = automatedRelistingRule
    @automatedSecondChanceOfferRule = automatedSecondChanceOfferRule
    @fees = fees
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetSellingManagerTemplateAutomationRuleResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   automatedListingRule - EBay::SellingManagerAutoListType
#   automatedRelistingRule - EBay::SellingManagerAutoRelistType
#   automatedSecondChanceOfferRule - EBay::SellingManagerAutoSecondChanceOfferType
#   fees - EBay::FeesType
class SetSellingManagerTemplateAutomationRuleResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :automatedListingRule
  attr_accessor :automatedRelistingRule
  attr_accessor :automatedSecondChanceOfferRule
  attr_accessor :fees

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, automatedListingRule = nil, automatedRelistingRule = nil, automatedSecondChanceOfferRule = nil, fees = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @automatedListingRule = automatedListingRule
    @automatedRelistingRule = automatedRelistingRule
    @automatedSecondChanceOfferRule = automatedSecondChanceOfferRule
    @fees = fees
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetShippingDiscountProfilesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetShippingDiscountProfilesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetStoreResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCategoriesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   taskID - SOAP::SOAPLong
#   status - EBay::TaskStatusCodeType
#   customCategory - EBay::StoreCustomCategoryArrayType
class SetStoreCategoriesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :taskID
  attr_accessor :status
  attr_accessor :customCategory

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, taskID = nil, status = nil, customCategory = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @taskID = taskID
    @status = status
    @customCategory = customCategory
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStoreCustomPageResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   customPage - EBay::StoreCustomPageType
class SetStoreCustomPageResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :customPage

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, customPage = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @customPage = customPage
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetStorePreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetStorePreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetTaxTableResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetTaxTableResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetUserNotesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SetUserPreferencesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class SetUserPreferencesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UploadSiteHostedPicturesResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   pictureSystemVersion - SOAP::SOAPInt
#   siteHostedPictureDetails - EBay::SiteHostedPictureDetailsType
class UploadSiteHostedPicturesResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :pictureSystemVersion
  attr_accessor :siteHostedPictureDetails

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, pictureSystemVersion = nil, siteHostedPictureDetails = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @pictureSystemVersion = pictureSystemVersion
    @siteHostedPictureDetails = siteHostedPictureDetails
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateChallengeInputResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   validToken - SOAP::SOAPBoolean
class ValidateChallengeInputResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :validToken

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, validToken = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @validToken = validToken
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValidateTestUserRegistrationResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
class ValidateTestUserRegistrationResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportItemsResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   veROReportPacketID - SOAP::SOAPLong
#   veROReportPacketStatus - EBay::VeROReportPacketStatusCodeType
class VeROReportItemsResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :veROReportPacketID
  attr_accessor :veROReportPacketStatus

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, veROReportPacketID = nil, veROReportPacketStatus = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @veROReportPacketID = veROReportPacketID
    @veROReportPacketStatus = veROReportPacketStatus
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddFixedPriceItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   sKU - (any)
#   fees - EBay::FeesType
#   expressListing - SOAP::SOAPBoolean
#   expressItemRequirements - EBay::ExpressItemRequirementsType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
#   discountReason - EBay::DiscountReasonCodeType
#   listingRecommendations - EBay::ListingRecommendationsType
class VerifyAddFixedPriceItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :sKU
  attr_accessor :fees
  attr_accessor :expressListing
  attr_accessor :expressItemRequirements
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :discountReason
  attr_accessor :listingRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, sKU = nil, fees = nil, expressListing = nil, expressItemRequirements = nil, categoryID = nil, category2ID = nil, discountReason = [], listingRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @sKU = sKU
    @fees = fees
    @expressListing = expressListing
    @expressItemRequirements = expressItemRequirements
    @categoryID = categoryID
    @category2ID = category2ID
    @discountReason = discountReason
    @listingRecommendations = listingRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   fees - EBay::FeesType
#   expressListing - SOAP::SOAPBoolean
#   expressItemRequirements - EBay::ExpressItemRequirementsType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
#   discountReason - EBay::DiscountReasonCodeType
#   productSuggestions - EBay::ProductSuggestionsType
#   listingRecommendations - EBay::ListingRecommendationsType
class VerifyAddItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :expressListing
  attr_accessor :expressItemRequirements
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :discountReason
  attr_accessor :productSuggestions
  attr_accessor :listingRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, fees = nil, expressListing = nil, expressItemRequirements = nil, categoryID = nil, category2ID = nil, discountReason = [], productSuggestions = nil, listingRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @expressListing = expressListing
    @expressItemRequirements = expressItemRequirements
    @categoryID = categoryID
    @category2ID = category2ID
    @discountReason = discountReason
    @productSuggestions = productSuggestions
    @listingRecommendations = listingRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyAddSecondChanceItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
class VerifyAddSecondChanceItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :startTime
  attr_accessor :endTime

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, startTime = nil, endTime = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @startTime = startTime
    @endTime = endTime
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifyRelistItemResponseType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   itemID - (any)
#   fees - EBay::FeesType
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   discountReason - EBay::DiscountReasonCodeType
#   productSuggestions - EBay::ProductSuggestionsType
#   listingRecommendations - EBay::ListingRecommendationsType
class VerifyRelistItemResponseType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :itemID
  attr_accessor :fees
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :discountReason
  attr_accessor :productSuggestions
  attr_accessor :listingRecommendations

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, itemID = nil, fees = nil, startTime = nil, endTime = nil, discountReason = [], productSuggestions = nil, listingRecommendations = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @itemID = itemID
    @fees = fees
    @startTime = startTime
    @endTime = endTime
    @discountReason = discountReason
    @productSuggestions = productSuggestions
    @listingRecommendations = listingRecommendations
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemsCanceledEventType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   canceledItemIDArray - EBay::ItemIDArrayType
#   eligibleForRelist - SOAP::SOAPBoolean
#   sellerID - (any)
class ItemsCanceledEventType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :canceledItemIDArray
  attr_accessor :eligibleForRelist
  attr_accessor :sellerID

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, canceledItemIDArray = nil, eligibleForRelist = nil, sellerID = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @canceledItemIDArray = canceledItemIDArray
    @eligibleForRelist = eligibleForRelist
    @sellerID = sellerID
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationMessageType
#   timestamp - SOAP::SOAPDateTime
#   ack - EBay::AckCodeType
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   version - SOAP::SOAPString
#   build - SOAP::SOAPString
#   notificationEventName - SOAP::SOAPString
#   duplicateInvocationDetails - EBay::DuplicateInvocationDetailsType
#   recipientUserID - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   notificationSignature - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   botBlock - EBay::BotBlockResponseType
#   externalUserData - SOAP::SOAPString
#   messageBody - SOAP::SOAPString
#   eIAS - SOAP::SOAPString
class NotificationMessageType < AbstractResponseType
  attr_accessor :timestamp
  attr_accessor :ack
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :version
  attr_accessor :build
  attr_accessor :notificationEventName
  attr_accessor :duplicateInvocationDetails
  attr_accessor :recipientUserID
  attr_accessor :eIASToken
  attr_accessor :notificationSignature
  attr_accessor :hardExpirationWarning
  attr_accessor :botBlock
  attr_accessor :externalUserData
  attr_reader :__xmlele_any
  attr_accessor :messageBody
  attr_accessor :eIAS

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timestamp = nil, ack = nil, correlationID = nil, errors = [], message = nil, version = nil, build = nil, notificationEventName = nil, duplicateInvocationDetails = nil, recipientUserID = nil, eIASToken = nil, notificationSignature = nil, hardExpirationWarning = nil, botBlock = nil, externalUserData = nil, messageBody = nil, eIAS = nil)
    @timestamp = timestamp
    @ack = ack
    @correlationID = correlationID
    @errors = errors
    @message = message
    @version = version
    @build = build
    @notificationEventName = notificationEventName
    @duplicateInvocationDetails = duplicateInvocationDetails
    @recipientUserID = recipientUserID
    @eIASToken = eIASToken
    @notificationSignature = notificationSignature
    @hardExpirationWarning = hardExpirationWarning
    @botBlock = botBlock
    @externalUserData = externalUserData
    @__xmlele_any = nil
    @messageBody = messageBody
    @eIAS = eIAS
  end
end

# {urn:ebay:apis:eBLBaseComponents}BotBlockRequestType
#   botBlockToken - SOAP::SOAPString
#   botBlockUserInput - SOAP::SOAPString
class BotBlockRequestType
  attr_accessor :botBlockToken
  attr_accessor :botBlockUserInput
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(botBlockToken = nil, botBlockUserInput = nil)
    @botBlockToken = botBlockToken
    @botBlockUserInput = botBlockUserInput
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BotBlockResponseType
#   botBlockToken - SOAP::SOAPString
#   botBlockUrl - SOAP::SOAPString
#   botBlockAudioUrl - SOAP::SOAPString
class BotBlockResponseType
  attr_accessor :botBlockToken
  attr_accessor :botBlockUrl
  attr_accessor :botBlockAudioUrl
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(botBlockToken = nil, botBlockUrl = nil, botBlockAudioUrl = nil)
    @botBlockToken = botBlockToken
    @botBlockUrl = botBlockUrl
    @botBlockAudioUrl = botBlockAudioUrl
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CustomSecurityHeaderType
#   eBayAuthToken - SOAP::SOAPString
#   hardExpirationWarning - SOAP::SOAPString
#   credentials - EBay::UserIdPasswordType
#   notificationSignature - SOAP::SOAPString
class CustomSecurityHeaderType
  attr_accessor :eBayAuthToken
  attr_accessor :hardExpirationWarning
  attr_accessor :credentials
  attr_accessor :notificationSignature
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayAuthToken = nil, hardExpirationWarning = nil, credentials = nil, notificationSignature = nil)
    @eBayAuthToken = eBayAuthToken
    @hardExpirationWarning = hardExpirationWarning
    @credentials = credentials
    @notificationSignature = notificationSignature
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeFilterCountType
#   disputeFilterType - EBay::DisputeFilterTypeCodeType
#   totalAvailable - SOAP::SOAPInt
class DisputeFilterCountType
  attr_accessor :disputeFilterType
  attr_accessor :totalAvailable
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeFilterType = nil, totalAvailable = nil)
    @disputeFilterType = disputeFilterType
    @totalAvailable = totalAvailable
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeMessageType
#   messageID - SOAP::SOAPInt
#   messageSource - EBay::DisputeMessageSourceCodeType
#   messageCreationTime - SOAP::SOAPDateTime
#   messageText - SOAP::SOAPString
class DisputeMessageType
  attr_accessor :messageID
  attr_accessor :messageSource
  attr_accessor :messageCreationTime
  attr_accessor :messageText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(messageID = nil, messageSource = nil, messageCreationTime = nil, messageText = nil)
    @messageID = messageID
    @messageSource = messageSource
    @messageCreationTime = messageCreationTime
    @messageText = messageText
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionType
#   disputeResolutionRecordType - EBay::DisputeResolutionRecordTypeCodeType
#   disputeResolutionReason - EBay::DisputeResolutionReasonCodeType
#   resolutionTime - SOAP::SOAPDateTime
class DisputeResolutionType
  attr_accessor :disputeResolutionRecordType
  attr_accessor :disputeResolutionReason
  attr_accessor :resolutionTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeResolutionRecordType = nil, disputeResolutionReason = nil, resolutionTime = nil)
    @disputeResolutionRecordType = disputeResolutionRecordType
    @disputeResolutionReason = disputeResolutionReason
    @resolutionTime = resolutionTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DuplicateInvocationDetailsType
#   duplicateInvocationID - (any)
#   status - EBay::InvocationStatusType
#   invocationTrackingID - SOAP::SOAPString
class DuplicateInvocationDetailsType
  attr_accessor :duplicateInvocationID
  attr_accessor :status
  attr_accessor :invocationTrackingID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(duplicateInvocationID = nil, status = nil, invocationTrackingID = nil)
    @duplicateInvocationID = duplicateInvocationID
    @status = status
    @invocationTrackingID = invocationTrackingID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ErrorParameterType
#   value - SOAP::SOAPString
#   xmlattr_ParamID - SOAP::SOAPString
class ErrorParameterType
  AttrParamID = XSD::QName.new(nil, "ParamID")

  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_ParamID
    __xmlattr[AttrParamID]
  end

  def xmlattr_ParamID=(value)
    __xmlattr[AttrParamID] = value
  end

  def initialize(value = nil)
    @value = value
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ErrorType
#   shortMessage - SOAP::SOAPString
#   longMessage - SOAP::SOAPString
#   errorCode - SOAP::SOAPToken
#   userDisplayHint - SOAP::SOAPBoolean
#   severityCode - EBay::SeverityCodeType
#   errorParameters - EBay::ErrorParameterType
#   errorClassification - EBay::ErrorClassificationCodeType
class ErrorType
  attr_accessor :shortMessage
  attr_accessor :longMessage
  attr_accessor :errorCode
  attr_accessor :userDisplayHint
  attr_accessor :severityCode
  attr_accessor :errorParameters
  attr_accessor :errorClassification
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shortMessage = nil, longMessage = nil, errorCode = nil, userDisplayHint = nil, severityCode = nil, errorParameters = [], errorClassification = nil)
    @shortMessage = shortMessage
    @longMessage = longMessage
    @errorCode = errorCode
    @userDisplayHint = userDisplayHint
    @severityCode = severityCode
    @errorParameters = errorParameters
    @errorClassification = errorClassification
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FaultDetailsType
#   errorCode - SOAP::SOAPString
#   severity - SOAP::SOAPString
#   detailedMessage - SOAP::SOAPString
class FaultDetailsType
  attr_accessor :errorCode
  attr_accessor :severity
  attr_accessor :detailedMessage
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(errorCode = nil, severity = nil, detailedMessage = nil)
    @errorCode = errorCode
    @severity = severity
    @detailedMessage = detailedMessage
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MeasureType
#   xmlattr_unit - SOAP::SOAPToken
#   xmlattr_measurementSystem - SOAP::SOAPToken
class MeasureType < ::String
  AttrMeasurementSystem = XSD::QName.new(nil, "measurementSystem")
  AttrUnit = XSD::QName.new(nil, "unit")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_unit
    __xmlattr[AttrUnit]
  end

  def xmlattr_unit=(value)
    __xmlattr[AttrUnit] = value
  end

  def xmlattr_measurementSystem
    __xmlattr[AttrMeasurementSystem]
  end

  def xmlattr_measurementSystem=(value)
    __xmlattr[AttrMeasurementSystem] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginationType
#   entriesPerPage - SOAP::SOAPInt
#   pageNumber - SOAP::SOAPInt
class PaginationType
  attr_accessor :entriesPerPage
  attr_accessor :pageNumber
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(entriesPerPage = nil, pageNumber = nil)
    @entriesPerPage = entriesPerPage
    @pageNumber = pageNumber
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}QuantityType
#   xmlattr_unit - SOAP::SOAPToken
class QuantityType < ::String
  AttrUnit = XSD::QName.new(nil, "unit")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_unit
    __xmlattr[AttrUnit]
  end

  def xmlattr_unit=(value)
    __xmlattr[AttrUnit] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIdPasswordType
#   appId - SOAP::SOAPString
#   devId - SOAP::SOAPString
#   authCert - SOAP::SOAPString
#   username - SOAP::SOAPString
#   password - SOAP::SOAPString
class UserIdPasswordType
  attr_accessor :appId
  attr_accessor :devId
  attr_accessor :authCert
  attr_accessor :username
  attr_accessor :password
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(appId = nil, devId = nil, authCert = nil, username = nil, password = nil)
    @appId = appId
    @devId = devId
    @authCert = authCert
    @username = username
    @password = password
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}XMLRequesterCredentialsType
#   username - SOAP::SOAPString
#   password - SOAP::SOAPString
#   eBayAuthToken - SOAP::SOAPString
class XMLRequesterCredentialsType
  attr_accessor :username
  attr_accessor :password
  attr_accessor :eBayAuthToken
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(username = nil, password = nil, eBayAuthToken = nil)
    @username = username
    @password = password
    @eBayAuthToken = eBayAuthToken
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ASQPreferencesType
#   resetDefaultSubjects - SOAP::SOAPBoolean
#   subject - SOAP::SOAPString
class ASQPreferencesType
  attr_accessor :resetDefaultSubjects
  attr_accessor :subject
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(resetDefaultSubjects = nil, subject = [])
    @resetDefaultSubjects = resetDefaultSubjects
    @subject = subject
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntriesType
#   accountEntry - EBay::AccountEntryType
class AccountEntriesType
  attr_accessor :accountEntry
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountEntry = [])
    @accountEntry = accountEntry
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntryType
#   accountDetailsEntryType - EBay::AccountDetailEntryCodeType
#   description - SOAP::SOAPString
#   balance - EBay::AmountType
#   date - SOAP::SOAPDateTime
#   grossDetailAmount - EBay::AmountType
#   itemID - (any)
#   memo - SOAP::SOAPString
#   conversionRate - EBay::AmountType
#   netDetailAmount - EBay::AmountType
#   refNumber - SOAP::SOAPString
#   vATPercent - SOAP::SOAPDecimal
#   title - SOAP::SOAPString
#   orderLineItemID - SOAP::SOAPString
#   transactionID - SOAP::SOAPString
#   receivedTopRatedDiscount - SOAP::SOAPBoolean
class AccountEntryType
  attr_accessor :accountDetailsEntryType
  attr_accessor :description
  attr_accessor :balance
  attr_accessor :date
  attr_accessor :grossDetailAmount
  attr_accessor :itemID
  attr_accessor :memo
  attr_accessor :conversionRate
  attr_accessor :netDetailAmount
  attr_accessor :refNumber
  attr_accessor :vATPercent
  attr_accessor :title
  attr_accessor :orderLineItemID
  attr_accessor :transactionID
  attr_accessor :receivedTopRatedDiscount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountDetailsEntryType = nil, description = nil, balance = nil, date = nil, grossDetailAmount = nil, itemID = nil, memo = nil, conversionRate = nil, netDetailAmount = nil, refNumber = nil, vATPercent = nil, title = nil, orderLineItemID = nil, transactionID = nil, receivedTopRatedDiscount = nil)
    @accountDetailsEntryType = accountDetailsEntryType
    @description = description
    @balance = balance
    @date = date
    @grossDetailAmount = grossDetailAmount
    @itemID = itemID
    @memo = memo
    @conversionRate = conversionRate
    @netDetailAmount = netDetailAmount
    @refNumber = refNumber
    @vATPercent = vATPercent
    @title = title
    @orderLineItemID = orderLineItemID
    @transactionID = transactionID
    @receivedTopRatedDiscount = receivedTopRatedDiscount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AccountSummaryType
#   accountState - EBay::AccountStateCodeType
#   invoicePayment - EBay::AmountType
#   invoiceCredit - EBay::AmountType
#   invoiceNewFee - EBay::AmountType
#   additionalAccount - EBay::AdditionalAccountType
#   amountPastDue - EBay::AmountType
#   bankAccountInfo - SOAP::SOAPString
#   bankModifyDate - SOAP::SOAPDateTime
#   billingCycleDate - SOAP::SOAPInt
#   creditCardExpiration - SOAP::SOAPDateTime
#   creditCardInfo - SOAP::SOAPString
#   creditCardModifyDate - SOAP::SOAPDateTime
#   currentBalance - EBay::AmountType
#   email - SOAP::SOAPString
#   invoiceBalance - EBay::AmountType
#   invoiceDate - SOAP::SOAPDateTime
#   lastAmountPaid - EBay::AmountType
#   lastPaymentDate - SOAP::SOAPDateTime
#   pastDue - SOAP::SOAPBoolean
#   paymentMethod - EBay::SellerPaymentMethodCodeType
class AccountSummaryType
  attr_accessor :accountState
  attr_accessor :invoicePayment
  attr_accessor :invoiceCredit
  attr_accessor :invoiceNewFee
  attr_accessor :additionalAccount
  attr_accessor :amountPastDue
  attr_accessor :bankAccountInfo
  attr_accessor :bankModifyDate
  attr_accessor :billingCycleDate
  attr_accessor :creditCardExpiration
  attr_accessor :creditCardInfo
  attr_accessor :creditCardModifyDate
  attr_accessor :currentBalance
  attr_accessor :email
  attr_accessor :invoiceBalance
  attr_accessor :invoiceDate
  attr_accessor :lastAmountPaid
  attr_accessor :lastPaymentDate
  attr_accessor :pastDue
  attr_accessor :paymentMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(accountState = nil, invoicePayment = nil, invoiceCredit = nil, invoiceNewFee = nil, additionalAccount = [], amountPastDue = nil, bankAccountInfo = nil, bankModifyDate = nil, billingCycleDate = nil, creditCardExpiration = nil, creditCardInfo = nil, creditCardModifyDate = nil, currentBalance = nil, email = nil, invoiceBalance = nil, invoiceDate = nil, lastAmountPaid = nil, lastPaymentDate = nil, pastDue = nil, paymentMethod = nil)
    @accountState = accountState
    @invoicePayment = invoicePayment
    @invoiceCredit = invoiceCredit
    @invoiceNewFee = invoiceNewFee
    @additionalAccount = additionalAccount
    @amountPastDue = amountPastDue
    @bankAccountInfo = bankAccountInfo
    @bankModifyDate = bankModifyDate
    @billingCycleDate = billingCycleDate
    @creditCardExpiration = creditCardExpiration
    @creditCardInfo = creditCardInfo
    @creditCardModifyDate = creditCardModifyDate
    @currentBalance = currentBalance
    @email = email
    @invoiceBalance = invoiceBalance
    @invoiceDate = invoiceDate
    @lastAmountPaid = lastAmountPaid
    @lastPaymentDate = lastPaymentDate
    @pastDue = pastDue
    @paymentMethod = paymentMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatEnabledDefinitionType
class AdFormatEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatLeadType
#   additionalInformation - SOAP::SOAPString
#   address - EBay::AddressType
#   bestTimeToCall - SOAP::SOAPString
#   email - SOAP::SOAPString
#   submittedTime - SOAP::SOAPDateTime
#   itemID - (any)
#   itemTitle - SOAP::SOAPString
#   userID - (any)
#   memberMessage - EBay::MemberMessageExchangeArrayType
#   status - EBay::AdFormatLeadStatusCodeType
#   leadFee - EBay::AmountType
#   externalEmail - SOAP::SOAPString
#   purchaseTimeFrame - SOAP::SOAPString
#   tradeInYear - SOAP::SOAPString
#   tradeInMake - SOAP::SOAPString
#   tradeInModel - SOAP::SOAPString
#   financingAnswer - SOAP::SOAPBoolean
#   answer1 - SOAP::SOAPBoolean
#   answer2 - SOAP::SOAPBoolean
class AdFormatLeadType
  attr_accessor :additionalInformation
  attr_accessor :address
  attr_accessor :bestTimeToCall
  attr_accessor :email
  attr_accessor :submittedTime
  attr_accessor :itemID
  attr_accessor :itemTitle
  attr_accessor :userID
  attr_accessor :memberMessage
  attr_accessor :status
  attr_accessor :leadFee
  attr_accessor :externalEmail
  attr_accessor :purchaseTimeFrame
  attr_accessor :tradeInYear
  attr_accessor :tradeInMake
  attr_accessor :tradeInModel
  attr_accessor :financingAnswer
  attr_accessor :answer1
  attr_accessor :answer2
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(additionalInformation = nil, address = nil, bestTimeToCall = nil, email = nil, submittedTime = nil, itemID = nil, itemTitle = nil, userID = nil, memberMessage = nil, status = nil, leadFee = nil, externalEmail = nil, purchaseTimeFrame = nil, tradeInYear = nil, tradeInMake = nil, tradeInModel = nil, financingAnswer = nil, answer1 = nil, answer2 = nil)
    @additionalInformation = additionalInformation
    @address = address
    @bestTimeToCall = bestTimeToCall
    @email = email
    @submittedTime = submittedTime
    @itemID = itemID
    @itemTitle = itemTitle
    @userID = userID
    @memberMessage = memberMessage
    @status = status
    @leadFee = leadFee
    @externalEmail = externalEmail
    @purchaseTimeFrame = purchaseTimeFrame
    @tradeInYear = tradeInYear
    @tradeInMake = tradeInMake
    @tradeInModel = tradeInModel
    @financingAnswer = financingAnswer
    @answer1 = answer1
    @answer2 = answer2
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemRequestContainerType
#   item - EBay::ItemType
#   messageID - SOAP::SOAPString
class AddItemRequestContainerType
  attr_accessor :item
  attr_accessor :messageID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, messageID = nil)
    @item = item
    @messageID = messageID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddItemResponseContainerType
#   itemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   fees - EBay::FeesType
#   categoryID - SOAP::SOAPString
#   category2ID - SOAP::SOAPString
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
#   message - SOAP::SOAPString
#   discountReason - EBay::DiscountReasonCodeType
#   listingRecommendations - EBay::ListingRecommendationsType
class AddItemResponseContainerType
  attr_accessor :itemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :fees
  attr_accessor :categoryID
  attr_accessor :category2ID
  attr_accessor :correlationID
  attr_accessor :errors
  attr_accessor :message
  attr_accessor :discountReason
  attr_accessor :listingRecommendations
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, startTime = nil, endTime = nil, fees = nil, categoryID = nil, category2ID = nil, correlationID = nil, errors = [], message = nil, discountReason = [], listingRecommendations = nil)
    @itemID = itemID
    @startTime = startTime
    @endTime = endTime
    @fees = fees
    @categoryID = categoryID
    @category2ID = category2ID
    @correlationID = correlationID
    @errors = errors
    @message = message
    @discountReason = discountReason
    @listingRecommendations = listingRecommendations
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderRequestContainerType
#   correlationID - SOAP::SOAPString
#   itemID - SOAP::SOAPString
#   memberMessage - EBay::MemberMessageType
class AddMemberMessagesAAQToBidderRequestContainerType
  attr_accessor :correlationID
  attr_accessor :itemID
  attr_accessor :memberMessage

  def initialize(correlationID = nil, itemID = nil, memberMessage = nil)
    @correlationID = correlationID
    @itemID = itemID
    @memberMessage = memberMessage
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddMemberMessagesAAQToBidderResponseContainerType
#   correlationID - SOAP::SOAPString
#   ack - EBay::AckCodeType
class AddMemberMessagesAAQToBidderResponseContainerType
  attr_accessor :correlationID
  attr_accessor :ack

  def initialize(correlationID = nil, ack = nil)
    @correlationID = correlationID
    @ack = ack
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdditionalAccountType
#   balance - EBay::AmountType
#   currency - EBay::CurrencyCodeType
#   accountCode - SOAP::SOAPString
class AdditionalAccountType
  attr_accessor :balance
  attr_accessor :currency
  attr_accessor :accountCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(balance = nil, currency = nil, accountCode = nil)
    @balance = balance
    @currency = currency
    @accountCode = accountCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AdditionalCompatibilityEnabledDefinitionType
class AdditionalCompatibilityEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddressAttributeType
#   xmlattr_type - SOAP::SOAPToken
class AddressAttributeType < ::String
  AttrType = XSD::QName.new(nil, "type")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AddressType
#   name - SOAP::SOAPString
#   street - SOAP::SOAPString
#   street1 - SOAP::SOAPString
#   street2 - SOAP::SOAPString
#   cityName - SOAP::SOAPString
#   county - SOAP::SOAPString
#   stateOrProvince - SOAP::SOAPString
#   country - EBay::CountryCodeType
#   countryName - SOAP::SOAPString
#   phone - SOAP::SOAPString
#   phoneCountryCode - EBay::CountryCodeType
#   phoneCountryPrefix - SOAP::SOAPString
#   phoneAreaOrCityCode - SOAP::SOAPString
#   phoneLocalNumber - SOAP::SOAPString
#   phone2CountryCode - EBay::CountryCodeType
#   phone2CountryPrefix - SOAP::SOAPString
#   phone2AreaOrCityCode - SOAP::SOAPString
#   phone2LocalNumber - SOAP::SOAPString
#   postalCode - SOAP::SOAPString
#   addressID - SOAP::SOAPString
#   addressOwner - EBay::AddressOwnerCodeType
#   addressStatus - EBay::AddressStatusCodeType
#   externalAddressID - SOAP::SOAPString
#   internationalName - SOAP::SOAPString
#   internationalStateAndCity - SOAP::SOAPString
#   internationalStreet - SOAP::SOAPString
#   companyName - SOAP::SOAPString
#   addressRecordType - EBay::AddressRecordTypeCodeType
#   firstName - SOAP::SOAPString
#   lastName - SOAP::SOAPString
#   phone2 - SOAP::SOAPString
#   addressUsage - EBay::AddressUsageCodeType
#   referenceID - SOAP::SOAPString
#   addressAttribute - EBay::AddressAttributeType
class AddressType
  attr_accessor :name
  attr_accessor :street
  attr_accessor :street1
  attr_accessor :street2
  attr_accessor :cityName
  attr_accessor :county
  attr_accessor :stateOrProvince
  attr_accessor :country
  attr_accessor :countryName
  attr_accessor :phone
  attr_accessor :phoneCountryCode
  attr_accessor :phoneCountryPrefix
  attr_accessor :phoneAreaOrCityCode
  attr_accessor :phoneLocalNumber
  attr_accessor :phone2CountryCode
  attr_accessor :phone2CountryPrefix
  attr_accessor :phone2AreaOrCityCode
  attr_accessor :phone2LocalNumber
  attr_accessor :postalCode
  attr_accessor :addressID
  attr_accessor :addressOwner
  attr_accessor :addressStatus
  attr_accessor :externalAddressID
  attr_accessor :internationalName
  attr_accessor :internationalStateAndCity
  attr_accessor :internationalStreet
  attr_accessor :companyName
  attr_accessor :addressRecordType
  attr_accessor :firstName
  attr_accessor :lastName
  attr_accessor :phone2
  attr_accessor :addressUsage
  attr_accessor :referenceID
  attr_accessor :addressAttribute
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, street = nil, street1 = nil, street2 = nil, cityName = nil, county = nil, stateOrProvince = nil, country = nil, countryName = nil, phone = nil, phoneCountryCode = nil, phoneCountryPrefix = nil, phoneAreaOrCityCode = nil, phoneLocalNumber = nil, phone2CountryCode = nil, phone2CountryPrefix = nil, phone2AreaOrCityCode = nil, phone2LocalNumber = nil, postalCode = nil, addressID = nil, addressOwner = nil, addressStatus = nil, externalAddressID = nil, internationalName = nil, internationalStateAndCity = nil, internationalStreet = nil, companyName = nil, addressRecordType = nil, firstName = nil, lastName = nil, phone2 = nil, addressUsage = nil, referenceID = nil, addressAttribute = [])
    @name = name
    @street = street
    @street1 = street1
    @street2 = street2
    @cityName = cityName
    @county = county
    @stateOrProvince = stateOrProvince
    @country = country
    @countryName = countryName
    @phone = phone
    @phoneCountryCode = phoneCountryCode
    @phoneCountryPrefix = phoneCountryPrefix
    @phoneAreaOrCityCode = phoneAreaOrCityCode
    @phoneLocalNumber = phoneLocalNumber
    @phone2CountryCode = phone2CountryCode
    @phone2CountryPrefix = phone2CountryPrefix
    @phone2AreaOrCityCode = phone2AreaOrCityCode
    @phone2LocalNumber = phone2LocalNumber
    @postalCode = postalCode
    @addressID = addressID
    @addressOwner = addressOwner
    @addressStatus = addressStatus
    @externalAddressID = externalAddressID
    @internationalName = internationalName
    @internationalStateAndCity = internationalStateAndCity
    @internationalStreet = internationalStreet
    @companyName = companyName
    @addressRecordType = addressRecordType
    @firstName = firstName
    @lastName = lastName
    @phone2 = phone2
    @addressUsage = addressUsage
    @referenceID = referenceID
    @addressAttribute = addressAttribute
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AffiliateTrackingDetailsType
#   trackingID - SOAP::SOAPString
#   trackingPartnerCode - SOAP::SOAPString
#   applicationDeviceType - EBay::ApplicationDeviceTypeCodeType
#   affiliateUserID - SOAP::SOAPString
class AffiliateTrackingDetailsType
  attr_accessor :trackingID
  attr_accessor :trackingPartnerCode
  attr_accessor :applicationDeviceType
  attr_accessor :affiliateUserID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(trackingID = nil, trackingPartnerCode = nil, applicationDeviceType = nil, affiliateUserID = nil)
    @trackingID = trackingID
    @trackingPartnerCode = trackingPartnerCode
    @applicationDeviceType = applicationDeviceType
    @affiliateUserID = affiliateUserID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AmountType
#   xmlattr_currencyID - SOAP::SOAPToken
class AmountType < ::String
  AttrCurrencyID = XSD::QName.new(nil, "currencyID")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_currencyID
    __xmlattr[AttrCurrencyID]
  end

  def xmlattr_currencyID=(value)
    __xmlattr[AttrCurrencyID] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AnnouncementMessageType
#   announcementStartTime - SOAP::SOAPDateTime
#   eventTime - SOAP::SOAPDateTime
#   messageType - EBay::AnnouncementMessageCodeType
class AnnouncementMessageType
  attr_accessor :announcementStartTime
  attr_accessor :eventTime
  attr_accessor :messageType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(announcementStartTime = nil, eventTime = nil, messageType = nil)
    @announcementStartTime = announcementStartTime
    @eventTime = eventTime
    @messageType = messageType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApiAccessRuleType
#   callName - SOAP::SOAPString
#   countsTowardAggregate - SOAP::SOAPBoolean
#   dailyHardLimit - SOAP::SOAPLong
#   dailySoftLimit - SOAP::SOAPLong
#   dailyUsage - SOAP::SOAPLong
#   hourlyHardLimit - SOAP::SOAPLong
#   hourlySoftLimit - SOAP::SOAPLong
#   hourlyUsage - SOAP::SOAPLong
#   period - SOAP::SOAPInt
#   periodicHardLimit - SOAP::SOAPLong
#   periodicSoftLimit - SOAP::SOAPLong
#   periodicUsage - SOAP::SOAPLong
#   periodicStartDate - SOAP::SOAPDateTime
#   modTime - SOAP::SOAPDateTime
#   ruleCurrentStatus - EBay::AccessRuleCurrentStatusCodeType
#   ruleStatus - EBay::AccessRuleStatusCodeType
class ApiAccessRuleType
  attr_accessor :callName
  attr_accessor :countsTowardAggregate
  attr_accessor :dailyHardLimit
  attr_accessor :dailySoftLimit
  attr_accessor :dailyUsage
  attr_accessor :hourlyHardLimit
  attr_accessor :hourlySoftLimit
  attr_accessor :hourlyUsage
  attr_accessor :period
  attr_accessor :periodicHardLimit
  attr_accessor :periodicSoftLimit
  attr_accessor :periodicUsage
  attr_accessor :periodicStartDate
  attr_accessor :modTime
  attr_accessor :ruleCurrentStatus
  attr_accessor :ruleStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(callName = nil, countsTowardAggregate = nil, dailyHardLimit = nil, dailySoftLimit = nil, dailyUsage = nil, hourlyHardLimit = nil, hourlySoftLimit = nil, hourlyUsage = nil, period = nil, periodicHardLimit = nil, periodicSoftLimit = nil, periodicUsage = nil, periodicStartDate = nil, modTime = nil, ruleCurrentStatus = nil, ruleStatus = nil)
    @callName = callName
    @countsTowardAggregate = countsTowardAggregate
    @dailyHardLimit = dailyHardLimit
    @dailySoftLimit = dailySoftLimit
    @dailyUsage = dailyUsage
    @hourlyHardLimit = hourlyHardLimit
    @hourlySoftLimit = hourlySoftLimit
    @hourlyUsage = hourlyUsage
    @period = period
    @periodicHardLimit = periodicHardLimit
    @periodicSoftLimit = periodicSoftLimit
    @periodicUsage = periodicUsage
    @periodicStartDate = periodicStartDate
    @modTime = modTime
    @ruleCurrentStatus = ruleCurrentStatus
    @ruleStatus = ruleStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ApplicationDeliveryPreferencesType
#   applicationURL - SOAP::SOAPAnyURI
#   applicationEnable - EBay::EnableCodeType
#   alertEmail - SOAP::SOAPAnyURI
#   alertEnable - EBay::EnableCodeType
#   notificationPayloadType - EBay::NotificationPayloadTypeCodeType
#   deviceType - EBay::DeviceTypeCodeType
#   payloadVersion - SOAP::SOAPString
#   deliveryURLDetails - EBay::DeliveryURLDetailType
class ApplicationDeliveryPreferencesType
  attr_accessor :applicationURL
  attr_accessor :applicationEnable
  attr_accessor :alertEmail
  attr_accessor :alertEnable
  attr_accessor :notificationPayloadType
  attr_accessor :deviceType
  attr_accessor :payloadVersion
  attr_accessor :deliveryURLDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(applicationURL = nil, applicationEnable = nil, alertEmail = nil, alertEnable = nil, notificationPayloadType = nil, deviceType = nil, payloadVersion = nil, deliveryURLDetails = [])
    @applicationURL = applicationURL
    @applicationEnable = applicationEnable
    @alertEmail = alertEmail
    @alertEnable = alertEnable
    @notificationPayloadType = notificationPayloadType
    @deviceType = deviceType
    @payloadVersion = payloadVersion
    @deliveryURLDetails = deliveryURLDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeArrayType
class AttributeArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}AttributeConversionEnabledFeatureDefinitionType
class AttributeConversionEnabledFeatureDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeRecommendationsType
#   attributeSetArray - EBay::AttributeSetArrayType
class AttributeRecommendationsType
  attr_accessor :attributeSetArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeSetArray = nil)
    @attributeSetArray = attributeSetArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeSetArrayType
class AttributeSetArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}AttributeSetType
#   attribute - EBay::AttributeType
#   xmlattr_attributeSetID - SOAP::SOAPInt
#   xmlattr_attributeSetVersion - SOAP::SOAPString
class AttributeSetType
  AttrAttributeSetID = XSD::QName.new(nil, "attributeSetID")
  AttrAttributeSetVersion = XSD::QName.new(nil, "attributeSetVersion")

  attr_accessor :attribute
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_attributeSetID
    __xmlattr[AttrAttributeSetID]
  end

  def xmlattr_attributeSetID=(value)
    __xmlattr[AttrAttributeSetID] = value
  end

  def xmlattr_attributeSetVersion
    __xmlattr[AttrAttributeSetVersion]
  end

  def xmlattr_attributeSetVersion=(value)
    __xmlattr[AttrAttributeSetVersion] = value
  end

  def initialize(attribute = [])
    @attribute = attribute
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AttributeType
#   value - EBay::ValType
#   xmlattr_attributeID - SOAP::SOAPInt
#   xmlattr_attributeLabel - SOAP::SOAPString
class AttributeType
  AttrAttributeID = XSD::QName.new(nil, "attributeID")
  AttrAttributeLabel = XSD::QName.new(nil, "attributeLabel")

  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_attributeID
    __xmlattr[AttrAttributeID]
  end

  def xmlattr_attributeID=(value)
    __xmlattr[AttrAttributeID] = value
  end

  def xmlattr_attributeLabel
    __xmlattr[AttrAttributeLabel]
  end

  def xmlattr_attributeLabel=(value)
    __xmlattr[AttrAttributeLabel] = value
  end

  def initialize(value = [])
    @value = value
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}AverageRatingDetailArrayType
class AverageRatingDetailArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}AverageRatingDetailsType
#   ratingDetail - EBay::FeedbackRatingDetailCodeType
#   rating - SOAP::SOAPDouble
#   ratingCount - SOAP::SOAPInt
class AverageRatingDetailsType
  attr_accessor :ratingDetail
  attr_accessor :rating
  attr_accessor :ratingCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(ratingDetail = nil, rating = nil, ratingCount = nil)
    @ratingDetail = ratingDetail
    @rating = rating
    @ratingCount = ratingCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AverageRatingSummaryType
#   feedbackSummaryPeriod - EBay::FeedbackSummaryPeriodCodeType
#   averageRatingDetails - EBay::AverageRatingDetailsType
class AverageRatingSummaryType
  attr_accessor :feedbackSummaryPeriod
  attr_accessor :averageRatingDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(feedbackSummaryPeriod = nil, averageRatingDetails = [])
    @feedbackSummaryPeriod = feedbackSummaryPeriod
    @averageRatingDetails = averageRatingDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}Base64BinaryType
#   xmlattr_contentType - SOAP::SOAPString
class Base64BinaryType < ::String
  AttrContentType = XSD::QName.new(nil, "contentType")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_contentType
    __xmlattr[AttrContentType]
  end

  def xmlattr_contentType=(value)
    __xmlattr[AttrContentType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}BasicAmountType
#   xmlattr_currencyID - SOAP::SOAPToken
class BasicAmountType < ::String
  AttrCurrencyID = XSD::QName.new(nil, "currencyID")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_currencyID
    __xmlattr[AttrCurrencyID]
  end

  def xmlattr_currencyID=(value)
    __xmlattr[AttrCurrencyID] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}BasicUpgradePackEnabledDefinitionType
class BasicUpgradePackEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferArrayType
class BestOfferArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferAutoAcceptEnabledDefinitionType
class BestOfferAutoAcceptEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferAutoDeclineEnabledDefinitionType
class BestOfferAutoDeclineEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferCounterEnabledDefinitionType
class BestOfferCounterEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferDetailsType
#   bestOfferCount - SOAP::SOAPInt
#   bestOfferEnabled - SOAP::SOAPBoolean
#   bestOffer - EBay::AmountType
#   bestOfferStatus - EBay::BestOfferStatusCodeType
#   bestOfferType - EBay::BestOfferTypeCodeType
#   newBestOffer - SOAP::SOAPBoolean
class BestOfferDetailsType
  attr_accessor :bestOfferCount
  attr_accessor :bestOfferEnabled
  attr_accessor :bestOffer
  attr_accessor :bestOfferStatus
  attr_accessor :bestOfferType
  attr_accessor :newBestOffer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferCount = nil, bestOfferEnabled = nil, bestOffer = nil, bestOfferStatus = nil, bestOfferType = nil, newBestOffer = nil)
    @bestOfferCount = bestOfferCount
    @bestOfferEnabled = bestOfferEnabled
    @bestOffer = bestOffer
    @bestOfferStatus = bestOfferStatus
    @bestOfferType = bestOfferType
    @newBestOffer = newBestOffer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferEnabledDefinitionType
class BestOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferType
#   bestOfferID - (any)
#   expirationTime - SOAP::SOAPDateTime
#   buyer - EBay::UserType
#   price - EBay::AmountType
#   status - EBay::BestOfferStatusCodeType
#   quantity - SOAP::SOAPInt
#   buyerMessage - SOAP::SOAPString
#   sellerMessage - SOAP::SOAPString
#   bestOfferCodeType - EBay::BestOfferTypeCodeType
#   callStatus - SOAP::SOAPString
#   newBestOffer - SOAP::SOAPBoolean
#   immediatePayEligible - SOAP::SOAPBoolean
class BestOfferType
  attr_accessor :bestOfferID
  attr_accessor :expirationTime
  attr_accessor :buyer
  attr_accessor :price
  attr_accessor :status
  attr_accessor :quantity
  attr_accessor :buyerMessage
  attr_accessor :sellerMessage
  attr_accessor :bestOfferCodeType
  attr_accessor :callStatus
  attr_accessor :newBestOffer
  attr_accessor :immediatePayEligible
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferID = nil, expirationTime = nil, buyer = nil, price = nil, status = nil, quantity = nil, buyerMessage = nil, sellerMessage = nil, bestOfferCodeType = nil, callStatus = nil, newBestOffer = nil, immediatePayEligible = nil)
    @bestOfferID = bestOfferID
    @expirationTime = expirationTime
    @buyer = buyer
    @price = price
    @status = status
    @quantity = quantity
    @buyerMessage = buyerMessage
    @sellerMessage = sellerMessage
    @bestOfferCodeType = bestOfferCodeType
    @callStatus = callStatus
    @newBestOffer = newBestOffer
    @immediatePayEligible = immediatePayEligible
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidApprovalArrayType
class BidApprovalArrayType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidApprovalType
#   userID - (any)
#   approvedBiddingLimit - EBay::AmountType
#   declinedComment - SOAP::SOAPString
#   status - EBay::BidderStatusCodeType
class BidApprovalType
  attr_accessor :userID
  attr_accessor :approvedBiddingLimit
  attr_accessor :declinedComment
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = nil, approvedBiddingLimit = nil, declinedComment = nil, status = nil)
    @userID = userID
    @approvedBiddingLimit = approvedBiddingLimit
    @declinedComment = declinedComment
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidAssistantListType
#   bidGroupID - SOAP::SOAPLong
#   includeNotes - SOAP::SOAPBoolean
class BidAssistantListType
  attr_accessor :bidGroupID
  attr_accessor :includeNotes
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidGroupID = nil, includeNotes = nil)
    @bidGroupID = bidGroupID
    @includeNotes = includeNotes
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidGroupArrayType
class BidGroupArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}BidGroupItemType
#   item - EBay::ItemType
#   bidGroupItemStatus - EBay::BidGroupItemStatusCodeType
#   maxBidAmount - EBay::AmountType
class BidGroupItemType
  attr_accessor :item
  attr_accessor :bidGroupItemStatus
  attr_accessor :maxBidAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, bidGroupItemStatus = nil, maxBidAmount = nil)
    @item = item
    @bidGroupItemStatus = bidGroupItemStatus
    @maxBidAmount = maxBidAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidGroupType
#   bidGroupItem - EBay::BidGroupItemType
#   bidGroupID - SOAP::SOAPLong
#   bidGroupName - SOAP::SOAPString
#   bidGroupStatus - EBay::BidGroupStatusCodeType
class BidGroupType
  attr_accessor :bidGroupItem
  attr_accessor :bidGroupID
  attr_accessor :bidGroupName
  attr_accessor :bidGroupStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidGroupItem = [], bidGroupID = nil, bidGroupName = nil, bidGroupStatus = nil)
    @bidGroupItem = bidGroupItem
    @bidGroupID = bidGroupID
    @bidGroupName = bidGroupName
    @bidGroupStatus = bidGroupStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidderDetailArrayType
class BidderDetailArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}BidderDetailType
#   userID - (any)
#   email - SOAP::SOAPString
#   feedbackScore - SOAP::SOAPInt
#   uniqueNegativeFeedbackCount - SOAP::SOAPInt
#   uniquePositiveFeedbackCount - SOAP::SOAPInt
#   uniqueNeutralFeedbackCount - SOAP::SOAPInt
class BidderDetailType
  attr_accessor :userID
  attr_accessor :email
  attr_accessor :feedbackScore
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_accessor :uniqueNeutralFeedbackCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = nil, email = nil, feedbackScore = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil, uniqueNeutralFeedbackCount = nil)
    @userID = userID
    @email = email
    @feedbackScore = feedbackScore
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @uniqueNeutralFeedbackCount = uniqueNeutralFeedbackCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BidderNoticePreferencesType
#   unsuccessfulBidderNoticeIncludeMyItems - SOAP::SOAPBoolean
class BidderNoticePreferencesType
  attr_accessor :unsuccessfulBidderNoticeIncludeMyItems
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(unsuccessfulBidderNoticeIncludeMyItems = nil)
    @unsuccessfulBidderNoticeIncludeMyItems = unsuccessfulBidderNoticeIncludeMyItems
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BiddingDetailsType
#   convertedMaxBid - EBay::AmountType
#   maxBid - EBay::AmountType
#   quantityBid - SOAP::SOAPInt
#   quantityWon - SOAP::SOAPInt
#   winning - SOAP::SOAPBoolean
#   bidAssistant - SOAP::SOAPBoolean
class BiddingDetailsType
  attr_accessor :convertedMaxBid
  attr_accessor :maxBid
  attr_accessor :quantityBid
  attr_accessor :quantityWon
  attr_accessor :winning
  attr_accessor :bidAssistant
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(convertedMaxBid = nil, maxBid = nil, quantityBid = nil, quantityWon = nil, winning = nil, bidAssistant = nil)
    @convertedMaxBid = convertedMaxBid
    @maxBid = maxBid
    @quantityBid = quantityBid
    @quantityWon = quantityWon
    @winning = winning
    @bidAssistant = bidAssistant
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BiddingSummaryType
#   summaryDays - SOAP::SOAPInt
#   totalBids - SOAP::SOAPInt
#   bidActivityWithSeller - SOAP::SOAPInt
#   bidsToUniqueSellers - SOAP::SOAPInt
#   bidsToUniqueCategories - SOAP::SOAPInt
#   bidRetractions - SOAP::SOAPInt
#   itemBidDetails - EBay::ItemBidDetailsType
class BiddingSummaryType
  attr_accessor :summaryDays
  attr_accessor :totalBids
  attr_accessor :bidActivityWithSeller
  attr_accessor :bidsToUniqueSellers
  attr_accessor :bidsToUniqueCategories
  attr_accessor :bidRetractions
  attr_accessor :itemBidDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(summaryDays = nil, totalBids = nil, bidActivityWithSeller = nil, bidsToUniqueSellers = nil, bidsToUniqueCategories = nil, bidRetractions = nil, itemBidDetails = [])
    @summaryDays = summaryDays
    @totalBids = totalBids
    @bidActivityWithSeller = bidActivityWithSeller
    @bidsToUniqueSellers = bidsToUniqueSellers
    @bidsToUniqueCategories = bidsToUniqueCategories
    @bidRetractions = bidRetractions
    @itemBidDetails = itemBidDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BrandMPNIdentifierEnabledDefinitionType
class BrandMPNIdentifierEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BrandMPNType
#   brand - SOAP::SOAPString
#   mPN - SOAP::SOAPString
class BrandMPNType
  attr_accessor :brand
  attr_accessor :mPN
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(brand = nil, mPN = nil)
    @brand = brand
    @mPN = mPN
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BusinessSellerDetailsType
#   address - EBay::AddressType
#   fax - SOAP::SOAPString
#   email - SOAP::SOAPString
#   additionalContactInformation - SOAP::SOAPString
#   tradeRegistrationNumber - SOAP::SOAPString
#   legalInvoice - SOAP::SOAPBoolean
#   termsAndConditions - SOAP::SOAPString
#   vATDetails - EBay::VATDetailsType
class BusinessSellerDetailsType
  attr_accessor :address
  attr_accessor :fax
  attr_accessor :email
  attr_accessor :additionalContactInformation
  attr_accessor :tradeRegistrationNumber
  attr_accessor :legalInvoice
  attr_accessor :termsAndConditions
  attr_accessor :vATDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(address = nil, fax = nil, email = nil, additionalContactInformation = nil, tradeRegistrationNumber = nil, legalInvoice = nil, termsAndConditions = nil, vATDetails = nil)
    @address = address
    @fax = fax
    @email = email
    @additionalContactInformation = additionalContactInformation
    @tradeRegistrationNumber = tradeRegistrationNumber
    @legalInvoice = legalInvoice
    @termsAndConditions = termsAndConditions
    @vATDetails = vATDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerGuaranteeEnabledDefinitionType
class BuyerGuaranteeEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerPackageEnclosureType
#   xmlattr_type - SOAP::SOAPToken
class BuyerPackageEnclosureType < ::String
  AttrType = XSD::QName.new(nil, "type")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerPackageEnclosuresType
#   buyerPackageEnclosure - EBay::BuyerPackageEnclosureType
class BuyerPackageEnclosuresType
  attr_accessor :buyerPackageEnclosure
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyerPackageEnclosure = [])
    @buyerPackageEnclosure = buyerPackageEnclosure
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerProtectionDetailsType
#   buyerProtectionSource - EBay::BuyerProtectionSourceCodeType
#   buyerProtectionStatus - EBay::BuyerProtectionCodeType
class BuyerProtectionDetailsType
  attr_accessor :buyerProtectionSource
  attr_accessor :buyerProtectionStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyerProtectionSource = nil, buyerProtectionStatus = nil)
    @buyerProtectionSource = buyerProtectionSource
    @buyerProtectionStatus = buyerProtectionStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerRequirementDetailsType
#   shipToRegistrationCountry - SOAP::SOAPBoolean
#   zeroFeedbackScore - SOAP::SOAPBoolean
#   minimumFeedbackScore - SOAP::SOAPInt
#   maximumItemRequirements - EBay::MaximumItemRequirementsType
#   linkedPayPalAccount - SOAP::SOAPBoolean
#   verifiedUserRequirements - EBay::VerifiedUserRequirementsType
#   maximumUnpaidItemStrikesInfo - EBay::MaximumUnpaidItemStrikesInfoType
#   maximumBuyerPolicyViolations - EBay::MaximumBuyerPolicyViolationsType
class BuyerRequirementDetailsType
  attr_accessor :shipToRegistrationCountry
  attr_accessor :zeroFeedbackScore
  attr_accessor :minimumFeedbackScore
  attr_accessor :maximumItemRequirements
  attr_accessor :linkedPayPalAccount
  attr_accessor :verifiedUserRequirements
  attr_accessor :maximumUnpaidItemStrikesInfo
  attr_accessor :maximumBuyerPolicyViolations
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shipToRegistrationCountry = nil, zeroFeedbackScore = nil, minimumFeedbackScore = nil, maximumItemRequirements = nil, linkedPayPalAccount = nil, verifiedUserRequirements = nil, maximumUnpaidItemStrikesInfo = nil, maximumBuyerPolicyViolations = nil)
    @shipToRegistrationCountry = shipToRegistrationCountry
    @zeroFeedbackScore = zeroFeedbackScore
    @minimumFeedbackScore = minimumFeedbackScore
    @maximumItemRequirements = maximumItemRequirements
    @linkedPayPalAccount = linkedPayPalAccount
    @verifiedUserRequirements = verifiedUserRequirements
    @maximumUnpaidItemStrikesInfo = maximumUnpaidItemStrikesInfo
    @maximumBuyerPolicyViolations = maximumBuyerPolicyViolations
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerRoleMetricsType
#   positiveFeedbackLeftCount - SOAP::SOAPInt
#   negativeFeedbackLeftCount - SOAP::SOAPInt
#   neutralFeedbackLeftCount - SOAP::SOAPInt
#   feedbackLeftPercent - SOAP::SOAPFloat
class BuyerRoleMetricsType
  attr_accessor :positiveFeedbackLeftCount
  attr_accessor :negativeFeedbackLeftCount
  attr_accessor :neutralFeedbackLeftCount
  attr_accessor :feedbackLeftPercent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(positiveFeedbackLeftCount = nil, negativeFeedbackLeftCount = nil, neutralFeedbackLeftCount = nil, feedbackLeftPercent = nil)
    @positiveFeedbackLeftCount = positiveFeedbackLeftCount
    @negativeFeedbackLeftCount = negativeFeedbackLeftCount
    @neutralFeedbackLeftCount = neutralFeedbackLeftCount
    @feedbackLeftPercent = feedbackLeftPercent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerSatisfactionDashboardType
#   status - EBay::BuyerSatisfactionStatusCodeType
#   alert - EBay::SellerDashboardAlertType
class BuyerSatisfactionDashboardType
  attr_accessor :status
  attr_accessor :alert
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil, alert = [])
    @status = status
    @alert = alert
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyerType
#   shippingAddress - EBay::AddressType
#   buyerTaxIdentifier - EBay::TaxIdentifierType
class BuyerType
  attr_accessor :shippingAddress
  attr_accessor :buyerTaxIdentifier
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingAddress = nil, buyerTaxIdentifier = [])
    @shippingAddress = shippingAddress
    @buyerTaxIdentifier = buyerTaxIdentifier
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingGuideDetailsType
#   buyingGuide - EBay::BuyingGuideType
#   buyingGuideHub - SOAP::SOAPAnyURI
class BuyingGuideDetailsType
  attr_accessor :buyingGuide
  attr_accessor :buyingGuideHub
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyingGuide = [], buyingGuideHub = nil)
    @buyingGuide = buyingGuide
    @buyingGuideHub = buyingGuideHub
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingGuideType
#   name - SOAP::SOAPString
#   uRL - SOAP::SOAPAnyURI
#   categoryID - SOAP::SOAPString
#   productFinderID - SOAP::SOAPInt
#   title - SOAP::SOAPString
#   text - SOAP::SOAPString
#   creationTime - SOAP::SOAPDateTime
#   userID - (any)
class BuyingGuideType
  attr_accessor :name
  attr_accessor :uRL
  attr_accessor :categoryID
  attr_accessor :productFinderID
  attr_accessor :title
  attr_accessor :text
  attr_accessor :creationTime
  attr_accessor :userID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, uRL = nil, categoryID = nil, productFinderID = nil, title = nil, text = nil, creationTime = nil, userID = nil)
    @name = name
    @uRL = uRL
    @categoryID = categoryID
    @productFinderID = productFinderID
    @title = title
    @text = text
    @creationTime = creationTime
    @userID = userID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}BuyingSummaryType
#   biddingCount - SOAP::SOAPInt
#   winningCount - SOAP::SOAPInt
#   totalWinningCost - EBay::AmountType
#   wonCount - SOAP::SOAPInt
#   totalWonCost - EBay::AmountType
#   wonDurationInDays - SOAP::SOAPInt
#   bestOfferCount - SOAP::SOAPInt
class BuyingSummaryType
  attr_accessor :biddingCount
  attr_accessor :winningCount
  attr_accessor :totalWinningCost
  attr_accessor :wonCount
  attr_accessor :totalWonCost
  attr_accessor :wonDurationInDays
  attr_accessor :bestOfferCount

  def initialize(biddingCount = nil, winningCount = nil, totalWinningCost = nil, wonCount = nil, totalWonCost = nil, wonDurationInDays = nil, bestOfferCount = nil)
    @biddingCount = biddingCount
    @winningCount = winningCount
    @totalWinningCost = totalWinningCost
    @wonCount = wonCount
    @totalWonCost = totalWonCost
    @wonDurationInDays = wonDurationInDays
    @bestOfferCount = bestOfferCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedHandlingDiscountType
#   discountName - EBay::HandlingNameCodeType
#   orderHandlingAmount - EBay::AmountType
#   eachAdditionalAmount - EBay::AmountType
#   eachAdditionalOffAmount - EBay::AmountType
#   eachAdditionalPercentOff - SOAP::SOAPFloat
class CalculatedHandlingDiscountType
  attr_accessor :discountName
  attr_accessor :orderHandlingAmount
  attr_accessor :eachAdditionalAmount
  attr_accessor :eachAdditionalOffAmount
  attr_accessor :eachAdditionalPercentOff
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(discountName = nil, orderHandlingAmount = nil, eachAdditionalAmount = nil, eachAdditionalOffAmount = nil, eachAdditionalPercentOff = nil)
    @discountName = discountName
    @orderHandlingAmount = orderHandlingAmount
    @eachAdditionalAmount = eachAdditionalAmount
    @eachAdditionalOffAmount = eachAdditionalOffAmount
    @eachAdditionalPercentOff = eachAdditionalPercentOff
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingDiscountType
#   discountName - EBay::DiscountNameCodeType
#   discountProfile - EBay::DiscountProfileType
class CalculatedShippingDiscountType
  attr_accessor :discountName
  attr_accessor :discountProfile
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(discountName = nil, discountProfile = [])
    @discountName = discountName
    @discountProfile = discountProfile
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingPreferencesType
#   calculatedShippingAmountForEntireOrder - EBay::AmountType
#   calculatedShippingChargeOption - EBay::CalculatedShippingChargeOptionCodeType
#   calculatedShippingRateOption - EBay::CalculatedShippingRateOptionCodeType
#   insuranceOption - EBay::InsuranceOptionCodeType
class CalculatedShippingPreferencesType
  attr_accessor :calculatedShippingAmountForEntireOrder
  attr_accessor :calculatedShippingChargeOption
  attr_accessor :calculatedShippingRateOption
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(calculatedShippingAmountForEntireOrder = nil, calculatedShippingChargeOption = nil, calculatedShippingRateOption = nil, insuranceOption = nil)
    @calculatedShippingAmountForEntireOrder = calculatedShippingAmountForEntireOrder
    @calculatedShippingChargeOption = calculatedShippingChargeOption
    @calculatedShippingRateOption = calculatedShippingRateOption
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingRateType
#   originatingPostalCode - SOAP::SOAPString
#   measurementUnit - EBay::MeasurementSystemCodeType
#   packageDepth - EBay::MeasureType
#   packageLength - EBay::MeasureType
#   packageWidth - EBay::MeasureType
#   packagingHandlingCosts - EBay::AmountType
#   shippingIrregular - SOAP::SOAPBoolean
#   shippingPackage - EBay::ShippingPackageCodeType
#   weightMajor - EBay::MeasureType
#   weightMinor - EBay::MeasureType
#   internationalPackagingHandlingCosts - EBay::AmountType
class CalculatedShippingRateType
  attr_accessor :originatingPostalCode
  attr_accessor :measurementUnit
  attr_accessor :packageDepth
  attr_accessor :packageLength
  attr_accessor :packageWidth
  attr_accessor :packagingHandlingCosts
  attr_accessor :shippingIrregular
  attr_accessor :shippingPackage
  attr_accessor :weightMajor
  attr_accessor :weightMinor
  attr_accessor :internationalPackagingHandlingCosts
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(originatingPostalCode = nil, measurementUnit = nil, packageDepth = nil, packageLength = nil, packageWidth = nil, packagingHandlingCosts = nil, shippingIrregular = nil, shippingPackage = nil, weightMajor = nil, weightMinor = nil, internationalPackagingHandlingCosts = nil)
    @originatingPostalCode = originatingPostalCode
    @measurementUnit = measurementUnit
    @packageDepth = packageDepth
    @packageLength = packageLength
    @packageWidth = packageWidth
    @packagingHandlingCosts = packagingHandlingCosts
    @shippingIrregular = shippingIrregular
    @shippingPackage = shippingPackage
    @weightMajor = weightMajor
    @weightMinor = weightMinor
    @internationalPackagingHandlingCosts = internationalPackagingHandlingCosts
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CancelDetailType
#   cancelReason - SOAP::SOAPToken
#   cancelReasonDetails - SOAP::SOAPString
#   cancelIntiator - SOAP::SOAPToken
#   cancelIntiationDate - SOAP::SOAPDateTime
#   cancelCompleteDate - SOAP::SOAPDateTime
class CancelDetailType
  attr_accessor :cancelReason
  attr_accessor :cancelReasonDetails
  attr_accessor :cancelIntiator
  attr_accessor :cancelIntiationDate
  attr_accessor :cancelCompleteDate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(cancelReason = nil, cancelReasonDetails = nil, cancelIntiator = nil, cancelIntiationDate = nil, cancelCompleteDate = nil)
    @cancelReason = cancelReason
    @cancelReasonDetails = cancelReasonDetails
    @cancelIntiator = cancelIntiator
    @cancelIntiationDate = cancelIntiationDate
    @cancelCompleteDate = cancelCompleteDate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CancelOfferArrayType
#   cancelOffer - EBay::CancelOfferType
class CancelOfferArrayType
  attr_accessor :cancelOffer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(cancelOffer = [])
    @cancelOffer = cancelOffer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CancelOfferType
#   offer - EBay::OfferType
#   explanation - SOAP::SOAPString
class CancelOfferType
  attr_accessor :offer
  attr_accessor :explanation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(offer = nil, explanation = nil)
    @offer = offer
    @explanation = explanation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CartItemType
#   item - EBay::ItemType
#   referenceID - SOAP::SOAPLong
#   action - EBay::ModifyActionCodeType
class CartItemType
  attr_accessor :item
  attr_accessor :referenceID
  attr_accessor :action
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, referenceID = nil, action = nil)
    @item = item
    @referenceID = referenceID
    @action = action
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CatalogProductType
#   title - SOAP::SOAPString
#   detailsURL - SOAP::SOAPAnyURI
#   stockPhotoURL - SOAP::SOAPAnyURI
#   displayStockPhotos - SOAP::SOAPBoolean
#   itemCount - SOAP::SOAPInt
#   externalProductID - EBay::ExternalProductIDType
#   productReferenceID - SOAP::SOAPLong
#   attributeSetID - SOAP::SOAPInt
#   itemSpecifics - EBay::NameValueListArrayType
#   reviewCount - SOAP::SOAPInt
#   reviewDetails - EBay::ReviewDetailsType
#   productState - EBay::ProductStateCodeType
class CatalogProductType
  attr_accessor :title
  attr_accessor :detailsURL
  attr_accessor :stockPhotoURL
  attr_accessor :displayStockPhotos
  attr_accessor :itemCount
  attr_accessor :externalProductID
  attr_accessor :productReferenceID
  attr_accessor :attributeSetID
  attr_accessor :itemSpecifics
  attr_accessor :reviewCount
  attr_accessor :reviewDetails
  attr_accessor :productState
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(title = nil, detailsURL = nil, stockPhotoURL = nil, displayStockPhotos = nil, itemCount = nil, externalProductID = nil, productReferenceID = nil, attributeSetID = nil, itemSpecifics = nil, reviewCount = nil, reviewDetails = nil, productState = nil)
    @title = title
    @detailsURL = detailsURL
    @stockPhotoURL = stockPhotoURL
    @displayStockPhotos = displayStockPhotos
    @itemCount = itemCount
    @externalProductID = externalProductID
    @productReferenceID = productReferenceID
    @attributeSetID = attributeSetID
    @itemSpecifics = itemSpecifics
    @reviewCount = reviewCount
    @reviewDetails = reviewDetails
    @productState = productState
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryArrayType
class CategoryArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFeatureType
#   categoryID - SOAP::SOAPString
#   listingDuration - EBay::ListingDurationReferenceType
#   shippingTermsRequired - SOAP::SOAPBoolean
#   bestOfferEnabled - SOAP::SOAPBoolean
#   dutchBINEnabled - SOAP::SOAPBoolean
#   userConsentRequired - SOAP::SOAPBoolean
#   homePageFeaturedEnabled - SOAP::SOAPBoolean
#   proPackEnabled - SOAP::SOAPBoolean
#   basicUpgradePackEnabled - SOAP::SOAPBoolean
#   valuePackEnabled - SOAP::SOAPBoolean
#   proPackPlusEnabled - SOAP::SOAPBoolean
#   adFormatEnabled - EBay::AdFormatEnabledCodeType
#   bestOfferCounterEnabled - SOAP::SOAPBoolean
#   bestOfferAutoDeclineEnabled - SOAP::SOAPBoolean
#   localMarketSpecialitySubscription - SOAP::SOAPBoolean
#   localMarketRegularSubscription - SOAP::SOAPBoolean
#   localMarketPremiumSubscription - SOAP::SOAPBoolean
#   localMarketNonSubscription - SOAP::SOAPBoolean
#   expressEnabled - SOAP::SOAPBoolean
#   expressPicturesRequired - SOAP::SOAPBoolean
#   expressConditionRequired - SOAP::SOAPBoolean
#   minimumReservePrice - SOAP::SOAPDouble
#   sellerContactDetailsEnabled - SOAP::SOAPBoolean
#   transactionConfirmationRequestEnabled - SOAP::SOAPBoolean
#   storeInventoryEnabled - SOAP::SOAPBoolean
#   skypeMeTransactionalEnabled - SOAP::SOAPBoolean
#   skypeMeNonTransactionalEnabled - SOAP::SOAPBoolean
#   classifiedAdPaymentMethodEnabled - EBay::ClassifiedAdPaymentMethodEnabledCodeType
#   classifiedAdShippingMethodEnabled - SOAP::SOAPBoolean
#   classifiedAdBestOfferEnabled - EBay::ClassifiedAdBestOfferEnabledCodeType
#   classifiedAdCounterOfferEnabled - SOAP::SOAPBoolean
#   classifiedAdAutoDeclineEnabled - SOAP::SOAPBoolean
#   classifiedAdContactByPhoneEnabled - SOAP::SOAPBoolean
#   classifiedAdContactByEmailEnabled - SOAP::SOAPBoolean
#   safePaymentRequired - SOAP::SOAPBoolean
#   classifiedAdPayPerLeadEnabled - SOAP::SOAPBoolean
#   itemSpecificsEnabled - EBay::ItemSpecificsEnabledCodeType
#   paisaPayFullEscrowEnabled - SOAP::SOAPBoolean
#   brandMPNIdentifierEnabled - SOAP::SOAPBoolean
#   classifiedAdAutoAcceptEnabled - SOAP::SOAPBoolean
#   bestOfferAutoAcceptEnabled - SOAP::SOAPBoolean
#   crossBorderTradeNorthAmericaEnabled - SOAP::SOAPBoolean
#   crossBorderTradeGBEnabled - SOAP::SOAPBoolean
#   crossBorderTradeAustraliaEnabled - SOAP::SOAPBoolean
#   payPalBuyerProtectionEnabled - SOAP::SOAPBoolean
#   buyerGuaranteeEnabled - SOAP::SOAPBoolean
#   combinedFixedPriceTreatmentEnabled - SOAP::SOAPBoolean
#   galleryFeaturedDurations - EBay::ListingEnhancementDurationReferenceType
#   payPalRequired - SOAP::SOAPBoolean
#   eBayMotorsProAdFormatEnabled - EBay::AdFormatEnabledCodeType
#   eBayMotorsProContactByPhoneEnabled - SOAP::SOAPBoolean
#   eBayMotorsProPhoneCount - SOAP::SOAPInt
#   eBayMotorsProContactByAddressEnabled - SOAP::SOAPBoolean
#   eBayMotorsProStreetCount - SOAP::SOAPInt
#   eBayMotorsProCompanyNameEnabled - SOAP::SOAPBoolean
#   eBayMotorsProContactByEmailEnabled - SOAP::SOAPBoolean
#   eBayMotorsProBestOfferEnabled - EBay::ClassifiedAdBestOfferEnabledCodeType
#   eBayMotorsProAutoAcceptEnabled - SOAP::SOAPBoolean
#   eBayMotorsProAutoDeclineEnabled - SOAP::SOAPBoolean
#   eBayMotorsProPaymentMethodCheckOutEnabled - EBay::ClassifiedAdPaymentMethodEnabledCodeType
#   eBayMotorsProShippingMethodEnabled - SOAP::SOAPBoolean
#   eBayMotorsProCounterOfferEnabled - SOAP::SOAPBoolean
#   eBayMotorsProSellerContactDetailsEnabled - SOAP::SOAPBoolean
#   localMarketAdFormatEnabled - EBay::AdFormatEnabledCodeType
#   localMarketContactByPhoneEnabled - SOAP::SOAPBoolean
#   localMarketPhoneCount - SOAP::SOAPInt
#   localMarketContactByAddressEnabled - SOAP::SOAPBoolean
#   localMarketStreetCount - SOAP::SOAPInt
#   localMarketCompanyNameEnabled - SOAP::SOAPBoolean
#   localMarketContactByEmailEnabled - SOAP::SOAPBoolean
#   localMarketBestOfferEnabled - EBay::ClassifiedAdBestOfferEnabledCodeType
#   localMarketAutoAcceptEnabled - SOAP::SOAPBoolean
#   localMarketAutoDeclineEnabled - SOAP::SOAPBoolean
#   localMarketPaymentMethodCheckOutEnabled - EBay::ClassifiedAdPaymentMethodEnabledCodeType
#   localMarketShippingMethodEnabled - SOAP::SOAPBoolean
#   localMarketCounterOfferEnabled - SOAP::SOAPBoolean
#   localMarketSellerContactDetailsEnabled - SOAP::SOAPBoolean
#   classifiedAdPhoneCount - SOAP::SOAPInt
#   classifiedAdContactByAddressEnabled - SOAP::SOAPBoolean
#   classifiedAdStreetCount - SOAP::SOAPInt
#   classifiedAdCompanyNameEnabled - SOAP::SOAPBoolean
#   specialitySubscription - EBay::GeographicExposureCodeType
#   regularSubscription - EBay::GeographicExposureCodeType
#   premiumSubscription - EBay::GeographicExposureCodeType
#   nonSubscription - EBay::GeographicExposureCodeType
#   iNEscrowWorkflowTimeline - EBay::INEscrowWorkflowTimelineCodeType
#   payPalRequiredForStoreOwner - SOAP::SOAPBoolean
#   reviseQuantityAllowed - SOAP::SOAPBoolean
#   revisePriceAllowed - SOAP::SOAPBoolean
#   storeOwnerExtendedListingDurationsEnabled - SOAP::SOAPBoolean
#   storeOwnerExtendedListingDurations - EBay::StoreOwnerExtendedListingDurationsType
#   returnPolicyEnabled - SOAP::SOAPBoolean
#   handlingTimeEnabled - SOAP::SOAPBoolean
#   maxFlatShippingCost - EBay::AmountType
#   group1MaxFlatShippingCost - EBay::AmountType
#   group2MaxFlatShippingCost - EBay::AmountType
#   group3MaxFlatShippingCost - EBay::AmountType
#   paymentMethod - EBay::BuyerPaymentMethodCodeType
#   variationsEnabled - SOAP::SOAPBoolean
#   attributeConversionEnabled - EBay::AttributeConversionEnabledCodeType
#   freeGalleryPlusEnabled - SOAP::SOAPBoolean
#   freePicturePackEnabled - SOAP::SOAPBoolean
#   itemCompatibilityEnabled - EBay::ItemCompatibilityEnabledCodeType
#   minItemCompatibility - SOAP::SOAPInt
#   maxItemCompatibility - SOAP::SOAPInt
#   conditionEnabled - EBay::ConditionEnabledCodeType
#   conditionValues - EBay::ConditionValuesType
#   valueCategory - SOAP::SOAPBoolean
#   productCreationEnabled - EBay::ProductCreationEnabledCodeType
#   eANEnabled - EBay::ProductIdentiferEnabledCodeType
#   iSBNEnabled - EBay::ProductIdentiferEnabledCodeType
#   uPCEnabled - EBay::ProductIdentiferEnabledCodeType
#   maxGranularFitmentCount - SOAP::SOAPInt
#   compatibleVehicleType - SOAP::SOAPString
#   paymentOptionsGroup - EBay::PaymentOptionsGroupEnabledCodeType
#   shippingProfileCategoryGroup - EBay::ProfileCategoryGroupCodeType
#   paymentProfileCategoryGroup - EBay::ProfileCategoryGroupCodeType
#   returnPolicyProfileCategoryGroup - EBay::ProfileCategoryGroupCodeType
#   vINSupported - SOAP::SOAPBoolean
#   vRMSupported - SOAP::SOAPBoolean
#   sellerProvidedTitleSupported - SOAP::SOAPBoolean
#   depositSupported - SOAP::SOAPBoolean
#   globalShippingEnabled - SOAP::SOAPBoolean
#   additionalCompatibilityEnabled - SOAP::SOAPBoolean
#   pickupDropOffEnabled - SOAP::SOAPBoolean
class CategoryFeatureType
  attr_accessor :categoryID
  attr_accessor :listingDuration
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :dutchBINEnabled
  attr_accessor :userConsentRequired
  attr_accessor :homePageFeaturedEnabled
  attr_accessor :proPackEnabled
  attr_accessor :basicUpgradePackEnabled
  attr_accessor :valuePackEnabled
  attr_accessor :proPackPlusEnabled
  attr_accessor :adFormatEnabled
  attr_accessor :bestOfferCounterEnabled
  attr_accessor :bestOfferAutoDeclineEnabled
  attr_accessor :localMarketSpecialitySubscription
  attr_accessor :localMarketRegularSubscription
  attr_accessor :localMarketPremiumSubscription
  attr_accessor :localMarketNonSubscription
  attr_accessor :expressEnabled
  attr_accessor :expressPicturesRequired
  attr_accessor :expressConditionRequired
  attr_accessor :minimumReservePrice
  attr_accessor :sellerContactDetailsEnabled
  attr_accessor :transactionConfirmationRequestEnabled
  attr_accessor :storeInventoryEnabled
  attr_accessor :skypeMeTransactionalEnabled
  attr_accessor :skypeMeNonTransactionalEnabled
  attr_accessor :classifiedAdPaymentMethodEnabled
  attr_accessor :classifiedAdShippingMethodEnabled
  attr_accessor :classifiedAdBestOfferEnabled
  attr_accessor :classifiedAdCounterOfferEnabled
  attr_accessor :classifiedAdAutoDeclineEnabled
  attr_accessor :classifiedAdContactByPhoneEnabled
  attr_accessor :classifiedAdContactByEmailEnabled
  attr_accessor :safePaymentRequired
  attr_accessor :classifiedAdPayPerLeadEnabled
  attr_accessor :itemSpecificsEnabled
  attr_accessor :paisaPayFullEscrowEnabled
  attr_accessor :brandMPNIdentifierEnabled
  attr_accessor :classifiedAdAutoAcceptEnabled
  attr_accessor :bestOfferAutoAcceptEnabled
  attr_accessor :crossBorderTradeNorthAmericaEnabled
  attr_accessor :crossBorderTradeGBEnabled
  attr_accessor :crossBorderTradeAustraliaEnabled
  attr_accessor :payPalBuyerProtectionEnabled
  attr_accessor :buyerGuaranteeEnabled
  attr_accessor :combinedFixedPriceTreatmentEnabled
  attr_accessor :galleryFeaturedDurations
  attr_accessor :payPalRequired
  attr_accessor :eBayMotorsProAdFormatEnabled
  attr_accessor :eBayMotorsProContactByPhoneEnabled
  attr_accessor :eBayMotorsProPhoneCount
  attr_accessor :eBayMotorsProContactByAddressEnabled
  attr_accessor :eBayMotorsProStreetCount
  attr_accessor :eBayMotorsProCompanyNameEnabled
  attr_accessor :eBayMotorsProContactByEmailEnabled
  attr_accessor :eBayMotorsProBestOfferEnabled
  attr_accessor :eBayMotorsProAutoAcceptEnabled
  attr_accessor :eBayMotorsProAutoDeclineEnabled
  attr_accessor :eBayMotorsProPaymentMethodCheckOutEnabled
  attr_accessor :eBayMotorsProShippingMethodEnabled
  attr_accessor :eBayMotorsProCounterOfferEnabled
  attr_accessor :eBayMotorsProSellerContactDetailsEnabled
  attr_accessor :localMarketAdFormatEnabled
  attr_accessor :localMarketContactByPhoneEnabled
  attr_accessor :localMarketPhoneCount
  attr_accessor :localMarketContactByAddressEnabled
  attr_accessor :localMarketStreetCount
  attr_accessor :localMarketCompanyNameEnabled
  attr_accessor :localMarketContactByEmailEnabled
  attr_accessor :localMarketBestOfferEnabled
  attr_accessor :localMarketAutoAcceptEnabled
  attr_accessor :localMarketAutoDeclineEnabled
  attr_accessor :localMarketPaymentMethodCheckOutEnabled
  attr_accessor :localMarketShippingMethodEnabled
  attr_accessor :localMarketCounterOfferEnabled
  attr_accessor :localMarketSellerContactDetailsEnabled
  attr_accessor :classifiedAdPhoneCount
  attr_accessor :classifiedAdContactByAddressEnabled
  attr_accessor :classifiedAdStreetCount
  attr_accessor :classifiedAdCompanyNameEnabled
  attr_accessor :specialitySubscription
  attr_accessor :regularSubscription
  attr_accessor :premiumSubscription
  attr_accessor :nonSubscription
  attr_accessor :iNEscrowWorkflowTimeline
  attr_accessor :payPalRequiredForStoreOwner
  attr_accessor :reviseQuantityAllowed
  attr_accessor :revisePriceAllowed
  attr_accessor :storeOwnerExtendedListingDurationsEnabled
  attr_accessor :storeOwnerExtendedListingDurations
  attr_accessor :returnPolicyEnabled
  attr_accessor :handlingTimeEnabled
  attr_accessor :maxFlatShippingCost
  attr_accessor :group1MaxFlatShippingCost
  attr_accessor :group2MaxFlatShippingCost
  attr_accessor :group3MaxFlatShippingCost
  attr_accessor :paymentMethod
  attr_accessor :variationsEnabled
  attr_accessor :attributeConversionEnabled
  attr_accessor :freeGalleryPlusEnabled
  attr_accessor :freePicturePackEnabled
  attr_accessor :itemCompatibilityEnabled
  attr_accessor :minItemCompatibility
  attr_accessor :maxItemCompatibility
  attr_accessor :conditionEnabled
  attr_accessor :conditionValues
  attr_accessor :valueCategory
  attr_accessor :productCreationEnabled
  attr_accessor :eANEnabled
  attr_accessor :iSBNEnabled
  attr_accessor :uPCEnabled
  attr_accessor :maxGranularFitmentCount
  attr_accessor :compatibleVehicleType
  attr_accessor :paymentOptionsGroup
  attr_accessor :shippingProfileCategoryGroup
  attr_accessor :paymentProfileCategoryGroup
  attr_accessor :returnPolicyProfileCategoryGroup
  attr_accessor :vINSupported
  attr_accessor :vRMSupported
  attr_accessor :sellerProvidedTitleSupported
  attr_accessor :depositSupported
  attr_accessor :globalShippingEnabled
  attr_accessor :additionalCompatibilityEnabled
  attr_reader :__xmlele_any
  attr_accessor :pickupDropOffEnabled

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, listingDuration = [], shippingTermsRequired = nil, bestOfferEnabled = nil, dutchBINEnabled = nil, userConsentRequired = nil, homePageFeaturedEnabled = nil, proPackEnabled = nil, basicUpgradePackEnabled = nil, valuePackEnabled = nil, proPackPlusEnabled = nil, adFormatEnabled = nil, bestOfferCounterEnabled = nil, bestOfferAutoDeclineEnabled = nil, localMarketSpecialitySubscription = nil, localMarketRegularSubscription = nil, localMarketPremiumSubscription = nil, localMarketNonSubscription = nil, expressEnabled = nil, expressPicturesRequired = nil, expressConditionRequired = nil, minimumReservePrice = nil, sellerContactDetailsEnabled = nil, transactionConfirmationRequestEnabled = nil, storeInventoryEnabled = nil, skypeMeTransactionalEnabled = nil, skypeMeNonTransactionalEnabled = nil, classifiedAdPaymentMethodEnabled = nil, classifiedAdShippingMethodEnabled = nil, classifiedAdBestOfferEnabled = nil, classifiedAdCounterOfferEnabled = nil, classifiedAdAutoDeclineEnabled = nil, classifiedAdContactByPhoneEnabled = nil, classifiedAdContactByEmailEnabled = nil, safePaymentRequired = nil, classifiedAdPayPerLeadEnabled = nil, itemSpecificsEnabled = nil, paisaPayFullEscrowEnabled = nil, brandMPNIdentifierEnabled = nil, classifiedAdAutoAcceptEnabled = nil, bestOfferAutoAcceptEnabled = nil, crossBorderTradeNorthAmericaEnabled = nil, crossBorderTradeGBEnabled = nil, crossBorderTradeAustraliaEnabled = nil, payPalBuyerProtectionEnabled = nil, buyerGuaranteeEnabled = nil, combinedFixedPriceTreatmentEnabled = nil, galleryFeaturedDurations = nil, payPalRequired = nil, eBayMotorsProAdFormatEnabled = nil, eBayMotorsProContactByPhoneEnabled = nil, eBayMotorsProPhoneCount = nil, eBayMotorsProContactByAddressEnabled = nil, eBayMotorsProStreetCount = nil, eBayMotorsProCompanyNameEnabled = nil, eBayMotorsProContactByEmailEnabled = nil, eBayMotorsProBestOfferEnabled = nil, eBayMotorsProAutoAcceptEnabled = nil, eBayMotorsProAutoDeclineEnabled = nil, eBayMotorsProPaymentMethodCheckOutEnabled = nil, eBayMotorsProShippingMethodEnabled = nil, eBayMotorsProCounterOfferEnabled = nil, eBayMotorsProSellerContactDetailsEnabled = nil, localMarketAdFormatEnabled = nil, localMarketContactByPhoneEnabled = nil, localMarketPhoneCount = nil, localMarketContactByAddressEnabled = nil, localMarketStreetCount = nil, localMarketCompanyNameEnabled = nil, localMarketContactByEmailEnabled = nil, localMarketBestOfferEnabled = nil, localMarketAutoAcceptEnabled = nil, localMarketAutoDeclineEnabled = nil, localMarketPaymentMethodCheckOutEnabled = nil, localMarketShippingMethodEnabled = nil, localMarketCounterOfferEnabled = nil, localMarketSellerContactDetailsEnabled = nil, classifiedAdPhoneCount = nil, classifiedAdContactByAddressEnabled = nil, classifiedAdStreetCount = nil, classifiedAdCompanyNameEnabled = nil, specialitySubscription = nil, regularSubscription = nil, premiumSubscription = nil, nonSubscription = nil, iNEscrowWorkflowTimeline = nil, payPalRequiredForStoreOwner = nil, reviseQuantityAllowed = nil, revisePriceAllowed = nil, storeOwnerExtendedListingDurationsEnabled = nil, storeOwnerExtendedListingDurations = nil, returnPolicyEnabled = nil, handlingTimeEnabled = nil, maxFlatShippingCost = nil, group1MaxFlatShippingCost = nil, group2MaxFlatShippingCost = nil, group3MaxFlatShippingCost = nil, paymentMethod = [], variationsEnabled = nil, attributeConversionEnabled = nil, freeGalleryPlusEnabled = nil, freePicturePackEnabled = nil, itemCompatibilityEnabled = nil, minItemCompatibility = nil, maxItemCompatibility = nil, conditionEnabled = nil, conditionValues = nil, valueCategory = nil, productCreationEnabled = nil, eANEnabled = nil, iSBNEnabled = nil, uPCEnabled = nil, maxGranularFitmentCount = nil, compatibleVehicleType = nil, paymentOptionsGroup = nil, shippingProfileCategoryGroup = nil, paymentProfileCategoryGroup = nil, returnPolicyProfileCategoryGroup = nil, vINSupported = nil, vRMSupported = nil, sellerProvidedTitleSupported = nil, depositSupported = nil, globalShippingEnabled = nil, additionalCompatibilityEnabled = nil, pickupDropOffEnabled = nil)
    @categoryID = categoryID
    @listingDuration = listingDuration
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @dutchBINEnabled = dutchBINEnabled
    @userConsentRequired = userConsentRequired
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @proPackEnabled = proPackEnabled
    @basicUpgradePackEnabled = basicUpgradePackEnabled
    @valuePackEnabled = valuePackEnabled
    @proPackPlusEnabled = proPackPlusEnabled
    @adFormatEnabled = adFormatEnabled
    @bestOfferCounterEnabled = bestOfferCounterEnabled
    @bestOfferAutoDeclineEnabled = bestOfferAutoDeclineEnabled
    @localMarketSpecialitySubscription = localMarketSpecialitySubscription
    @localMarketRegularSubscription = localMarketRegularSubscription
    @localMarketPremiumSubscription = localMarketPremiumSubscription
    @localMarketNonSubscription = localMarketNonSubscription
    @expressEnabled = expressEnabled
    @expressPicturesRequired = expressPicturesRequired
    @expressConditionRequired = expressConditionRequired
    @minimumReservePrice = minimumReservePrice
    @sellerContactDetailsEnabled = sellerContactDetailsEnabled
    @transactionConfirmationRequestEnabled = transactionConfirmationRequestEnabled
    @storeInventoryEnabled = storeInventoryEnabled
    @skypeMeTransactionalEnabled = skypeMeTransactionalEnabled
    @skypeMeNonTransactionalEnabled = skypeMeNonTransactionalEnabled
    @classifiedAdPaymentMethodEnabled = classifiedAdPaymentMethodEnabled
    @classifiedAdShippingMethodEnabled = classifiedAdShippingMethodEnabled
    @classifiedAdBestOfferEnabled = classifiedAdBestOfferEnabled
    @classifiedAdCounterOfferEnabled = classifiedAdCounterOfferEnabled
    @classifiedAdAutoDeclineEnabled = classifiedAdAutoDeclineEnabled
    @classifiedAdContactByPhoneEnabled = classifiedAdContactByPhoneEnabled
    @classifiedAdContactByEmailEnabled = classifiedAdContactByEmailEnabled
    @safePaymentRequired = safePaymentRequired
    @classifiedAdPayPerLeadEnabled = classifiedAdPayPerLeadEnabled
    @itemSpecificsEnabled = itemSpecificsEnabled
    @paisaPayFullEscrowEnabled = paisaPayFullEscrowEnabled
    @brandMPNIdentifierEnabled = brandMPNIdentifierEnabled
    @classifiedAdAutoAcceptEnabled = classifiedAdAutoAcceptEnabled
    @bestOfferAutoAcceptEnabled = bestOfferAutoAcceptEnabled
    @crossBorderTradeNorthAmericaEnabled = crossBorderTradeNorthAmericaEnabled
    @crossBorderTradeGBEnabled = crossBorderTradeGBEnabled
    @crossBorderTradeAustraliaEnabled = crossBorderTradeAustraliaEnabled
    @payPalBuyerProtectionEnabled = payPalBuyerProtectionEnabled
    @buyerGuaranteeEnabled = buyerGuaranteeEnabled
    @combinedFixedPriceTreatmentEnabled = combinedFixedPriceTreatmentEnabled
    @galleryFeaturedDurations = galleryFeaturedDurations
    @payPalRequired = payPalRequired
    @eBayMotorsProAdFormatEnabled = eBayMotorsProAdFormatEnabled
    @eBayMotorsProContactByPhoneEnabled = eBayMotorsProContactByPhoneEnabled
    @eBayMotorsProPhoneCount = eBayMotorsProPhoneCount
    @eBayMotorsProContactByAddressEnabled = eBayMotorsProContactByAddressEnabled
    @eBayMotorsProStreetCount = eBayMotorsProStreetCount
    @eBayMotorsProCompanyNameEnabled = eBayMotorsProCompanyNameEnabled
    @eBayMotorsProContactByEmailEnabled = eBayMotorsProContactByEmailEnabled
    @eBayMotorsProBestOfferEnabled = eBayMotorsProBestOfferEnabled
    @eBayMotorsProAutoAcceptEnabled = eBayMotorsProAutoAcceptEnabled
    @eBayMotorsProAutoDeclineEnabled = eBayMotorsProAutoDeclineEnabled
    @eBayMotorsProPaymentMethodCheckOutEnabled = eBayMotorsProPaymentMethodCheckOutEnabled
    @eBayMotorsProShippingMethodEnabled = eBayMotorsProShippingMethodEnabled
    @eBayMotorsProCounterOfferEnabled = eBayMotorsProCounterOfferEnabled
    @eBayMotorsProSellerContactDetailsEnabled = eBayMotorsProSellerContactDetailsEnabled
    @localMarketAdFormatEnabled = localMarketAdFormatEnabled
    @localMarketContactByPhoneEnabled = localMarketContactByPhoneEnabled
    @localMarketPhoneCount = localMarketPhoneCount
    @localMarketContactByAddressEnabled = localMarketContactByAddressEnabled
    @localMarketStreetCount = localMarketStreetCount
    @localMarketCompanyNameEnabled = localMarketCompanyNameEnabled
    @localMarketContactByEmailEnabled = localMarketContactByEmailEnabled
    @localMarketBestOfferEnabled = localMarketBestOfferEnabled
    @localMarketAutoAcceptEnabled = localMarketAutoAcceptEnabled
    @localMarketAutoDeclineEnabled = localMarketAutoDeclineEnabled
    @localMarketPaymentMethodCheckOutEnabled = localMarketPaymentMethodCheckOutEnabled
    @localMarketShippingMethodEnabled = localMarketShippingMethodEnabled
    @localMarketCounterOfferEnabled = localMarketCounterOfferEnabled
    @localMarketSellerContactDetailsEnabled = localMarketSellerContactDetailsEnabled
    @classifiedAdPhoneCount = classifiedAdPhoneCount
    @classifiedAdContactByAddressEnabled = classifiedAdContactByAddressEnabled
    @classifiedAdStreetCount = classifiedAdStreetCount
    @classifiedAdCompanyNameEnabled = classifiedAdCompanyNameEnabled
    @specialitySubscription = specialitySubscription
    @regularSubscription = regularSubscription
    @premiumSubscription = premiumSubscription
    @nonSubscription = nonSubscription
    @iNEscrowWorkflowTimeline = iNEscrowWorkflowTimeline
    @payPalRequiredForStoreOwner = payPalRequiredForStoreOwner
    @reviseQuantityAllowed = reviseQuantityAllowed
    @revisePriceAllowed = revisePriceAllowed
    @storeOwnerExtendedListingDurationsEnabled = storeOwnerExtendedListingDurationsEnabled
    @storeOwnerExtendedListingDurations = storeOwnerExtendedListingDurations
    @returnPolicyEnabled = returnPolicyEnabled
    @handlingTimeEnabled = handlingTimeEnabled
    @maxFlatShippingCost = maxFlatShippingCost
    @group1MaxFlatShippingCost = group1MaxFlatShippingCost
    @group2MaxFlatShippingCost = group2MaxFlatShippingCost
    @group3MaxFlatShippingCost = group3MaxFlatShippingCost
    @paymentMethod = paymentMethod
    @variationsEnabled = variationsEnabled
    @attributeConversionEnabled = attributeConversionEnabled
    @freeGalleryPlusEnabled = freeGalleryPlusEnabled
    @freePicturePackEnabled = freePicturePackEnabled
    @itemCompatibilityEnabled = itemCompatibilityEnabled
    @minItemCompatibility = minItemCompatibility
    @maxItemCompatibility = maxItemCompatibility
    @conditionEnabled = conditionEnabled
    @conditionValues = conditionValues
    @valueCategory = valueCategory
    @productCreationEnabled = productCreationEnabled
    @eANEnabled = eANEnabled
    @iSBNEnabled = iSBNEnabled
    @uPCEnabled = uPCEnabled
    @maxGranularFitmentCount = maxGranularFitmentCount
    @compatibleVehicleType = compatibleVehicleType
    @paymentOptionsGroup = paymentOptionsGroup
    @shippingProfileCategoryGroup = shippingProfileCategoryGroup
    @paymentProfileCategoryGroup = paymentProfileCategoryGroup
    @returnPolicyProfileCategoryGroup = returnPolicyProfileCategoryGroup
    @vINSupported = vINSupported
    @vRMSupported = vRMSupported
    @sellerProvidedTitleSupported = sellerProvidedTitleSupported
    @depositSupported = depositSupported
    @globalShippingEnabled = globalShippingEnabled
    @additionalCompatibilityEnabled = additionalCompatibilityEnabled
    @__xmlele_any = nil
    @pickupDropOffEnabled = pickupDropOffEnabled
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryGroupType
#   name - SOAP::SOAPString
#   isDefault - SOAP::SOAPBoolean
class CategoryGroupType
  attr_accessor :name
  attr_accessor :isDefault

  def initialize(name = nil, isDefault = nil)
    @name = name
    @isDefault = isDefault
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryItemSpecificsType
#   categoryID - SOAP::SOAPString
#   itemSpecifics - EBay::NameValueListArrayType
class CategoryItemSpecificsType
  attr_accessor :categoryID
  attr_accessor :itemSpecifics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, itemSpecifics = nil)
    @categoryID = categoryID
    @itemSpecifics = itemSpecifics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryMappingType
#   xmlattr_oldID - SOAP::SOAPString
#   xmlattr_id - SOAP::SOAPString
class CategoryMappingType
  AttrId = XSD::QName.new(nil, "id")
  AttrOldID = XSD::QName.new(nil, "oldID")

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_oldID
    __xmlattr[AttrOldID]
  end

  def xmlattr_oldID=(value)
    __xmlattr[AttrOldID] = value
  end

  def xmlattr_id
    __xmlattr[AttrId]
  end

  def xmlattr_id=(value)
    __xmlattr[AttrId] = value
  end

  def initialize
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CategoryType
#   bestOfferEnabled - SOAP::SOAPBoolean
#   autoPayEnabled - SOAP::SOAPBoolean
#   b2BVATEnabled - SOAP::SOAPBoolean
#   catalogEnabled - SOAP::SOAPBoolean
#   categoryID - SOAP::SOAPString
#   categoryLevel - SOAP::SOAPInt
#   categoryName - SOAP::SOAPString
#   categoryParentID - SOAP::SOAPString
#   categoryParentName - SOAP::SOAPString
#   productSearchPageAvailable - SOAP::SOAPBoolean
#   productFinderIDs - EBay::ExtendedProductFinderIDType
#   characteristicsSets - EBay::CharacteristicsSetType
#   expired - SOAP::SOAPBoolean
#   intlAutosFixedCat - SOAP::SOAPBoolean
#   leafCategory - SOAP::SOAPBoolean
#   virtual - SOAP::SOAPBoolean
#   numOfItems - SOAP::SOAPInt
#   sellerGuaranteeEligible - SOAP::SOAPBoolean
#   oRPA - SOAP::SOAPBoolean
#   oRRA - SOAP::SOAPBoolean
#   lSD - SOAP::SOAPBoolean
#   keywords - SOAP::SOAPString
class CategoryType
  attr_accessor :bestOfferEnabled
  attr_accessor :autoPayEnabled
  attr_accessor :b2BVATEnabled
  attr_accessor :catalogEnabled
  attr_accessor :categoryID
  attr_accessor :categoryLevel
  attr_accessor :categoryName
  attr_accessor :categoryParentID
  attr_accessor :categoryParentName
  attr_accessor :productSearchPageAvailable
  attr_accessor :productFinderIDs
  attr_accessor :characteristicsSets
  attr_accessor :expired
  attr_accessor :intlAutosFixedCat
  attr_accessor :leafCategory
  attr_accessor :virtual
  attr_accessor :numOfItems
  attr_accessor :sellerGuaranteeEligible
  attr_accessor :oRPA
  attr_accessor :oRRA
  attr_accessor :lSD
  attr_accessor :keywords
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bestOfferEnabled = nil, autoPayEnabled = nil, b2BVATEnabled = nil, catalogEnabled = nil, categoryID = nil, categoryLevel = nil, categoryName = nil, categoryParentID = [], categoryParentName = [], productSearchPageAvailable = nil, productFinderIDs = [], characteristicsSets = [], expired = nil, intlAutosFixedCat = nil, leafCategory = nil, virtual = nil, numOfItems = nil, sellerGuaranteeEligible = nil, oRPA = nil, oRRA = nil, lSD = nil, keywords = nil)
    @bestOfferEnabled = bestOfferEnabled
    @autoPayEnabled = autoPayEnabled
    @b2BVATEnabled = b2BVATEnabled
    @catalogEnabled = catalogEnabled
    @categoryID = categoryID
    @categoryLevel = categoryLevel
    @categoryName = categoryName
    @categoryParentID = categoryParentID
    @categoryParentName = categoryParentName
    @productSearchPageAvailable = productSearchPageAvailable
    @productFinderIDs = productFinderIDs
    @characteristicsSets = characteristicsSets
    @expired = expired
    @intlAutosFixedCat = intlAutosFixedCat
    @leafCategory = leafCategory
    @virtual = virtual
    @numOfItems = numOfItems
    @sellerGuaranteeEligible = sellerGuaranteeEligible
    @oRPA = oRPA
    @oRRA = oRRA
    @lSD = lSD
    @keywords = keywords
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicSetIDsType
class CharacteristicSetIDsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicType
#   attributeID - SOAP::SOAPInt
#   dateFormat - SOAP::SOAPString
#   displaySequence - SOAP::SOAPString
#   displayUOM - SOAP::SOAPString
#   label - EBay::LabelType
#   sortOrder - EBay::SortOrderCodeType
#   valueList - EBay::ValType
class CharacteristicType
  attr_accessor :attributeID
  attr_accessor :dateFormat
  attr_accessor :displaySequence
  attr_accessor :displayUOM
  attr_accessor :label
  attr_accessor :sortOrder
  attr_accessor :valueList
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeID = nil, dateFormat = nil, displaySequence = nil, displayUOM = nil, label = nil, sortOrder = nil, valueList = [])
    @attributeID = attributeID
    @dateFormat = dateFormat
    @displaySequence = displaySequence
    @displayUOM = displayUOM
    @label = label
    @sortOrder = sortOrder
    @valueList = valueList
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicsSetProductHistogramType
#   histogramEntry - EBay::HistogramEntryType
class CharacteristicsSetProductHistogramType
  attr_accessor :histogramEntry
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(histogramEntry = [])
    @histogramEntry = histogramEntry
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicsSetType
#   name - SOAP::SOAPString
#   attributeSetID - SOAP::SOAPInt
#   attributeSetVersion - SOAP::SOAPString
#   characteristics - EBay::CharacteristicType
class CharacteristicsSetType
  attr_accessor :name
  attr_accessor :attributeSetID
  attr_accessor :attributeSetVersion
  attr_accessor :characteristics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, attributeSetID = nil, attributeSetVersion = nil, characteristics = [])
    @name = name
    @attributeSetID = attributeSetID
    @attributeSetVersion = attributeSetVersion
    @characteristics = characteristics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationDetailType
#   charityID - SOAP::SOAPString
#   affiliationType - EBay::CharityAffiliationTypeCodeType
#   lastUsedTime - SOAP::SOAPDateTime
class CharityAffiliationDetailType
  attr_accessor :charityID
  attr_accessor :affiliationType
  attr_accessor :lastUsedTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charityID = nil, affiliationType = nil, lastUsedTime = nil)
    @charityID = charityID
    @affiliationType = affiliationType
    @lastUsedTime = lastUsedTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationDetailsType
class CharityAffiliationDetailsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationType
#   xmlattr_id - SOAP::SOAPString
#   xmlattr_type - SOAP::SOAPToken
class CharityAffiliationType
  AttrId = XSD::QName.new(nil, "id")
  AttrType = XSD::QName.new(nil, "type")

  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_id
    __xmlattr[AttrId]
  end

  def xmlattr_id=(value)
    __xmlattr[AttrId] = value
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationsType
#   charityID - EBay::CharityIDType
class CharityAffiliationsType
  attr_accessor :charityID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charityID = [])
    @charityID = charityID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityIDType
#   xmlattr_type - SOAP::SOAPToken
class CharityIDType < ::String
  AttrType = XSD::QName.new(nil, "type")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityInfoType
#   name - SOAP::SOAPString
#   listingNPEmailNotifPref - SOAP::SOAPBoolean
#   listingNPEmail - SOAP::SOAPString
#   listingNPContactName - SOAP::SOAPString
#   mission - SOAP::SOAPString
#   logoURL - SOAP::SOAPAnyURI
#   status - EBay::CharityStatusCodeType
#   searchableString - SOAP::SOAPString
#   charityRegion - SOAP::SOAPInt
#   charityDomain - SOAP::SOAPInt
#   charityID - SOAP::SOAPString
#   logoURLSelling - SOAP::SOAPAnyURI
#   displayLogoSelling - SOAP::SOAPBoolean
#   displayNameInCheckout - SOAP::SOAPBoolean
#   description - SOAP::SOAPString
#   showMultipleDonationAmountInCheckout - SOAP::SOAPBoolean
#   externalID - SOAP::SOAPString
#   popularityIndex - SOAP::SOAPInt
#   eIN - SOAP::SOAPString
#   nonProfitSecondName - SOAP::SOAPString
#   nonProfitAddress - EBay::NonProfitAddressType
#   nonProfitSocialAddress - EBay::NonProfitSocialAddressType
#   xmlattr_id - SOAP::SOAPString
class CharityInfoType
  AttrId = XSD::QName.new(nil, "id")

  attr_accessor :name
  attr_accessor :listingNPEmailNotifPref
  attr_accessor :listingNPEmail
  attr_accessor :listingNPContactName
  attr_accessor :mission
  attr_accessor :logoURL
  attr_accessor :status
  attr_accessor :searchableString
  attr_accessor :charityRegion
  attr_accessor :charityDomain
  attr_accessor :charityID
  attr_accessor :logoURLSelling
  attr_accessor :displayLogoSelling
  attr_accessor :displayNameInCheckout
  attr_accessor :description
  attr_accessor :showMultipleDonationAmountInCheckout
  attr_accessor :externalID
  attr_accessor :popularityIndex
  attr_accessor :eIN
  attr_accessor :nonProfitSecondName
  attr_accessor :nonProfitAddress
  attr_accessor :nonProfitSocialAddress
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_id
    __xmlattr[AttrId]
  end

  def xmlattr_id=(value)
    __xmlattr[AttrId] = value
  end

  def initialize(name = nil, listingNPEmailNotifPref = nil, listingNPEmail = nil, listingNPContactName = nil, mission = nil, logoURL = nil, status = nil, searchableString = nil, charityRegion = nil, charityDomain = [], charityID = nil, logoURLSelling = nil, displayLogoSelling = nil, displayNameInCheckout = nil, description = nil, showMultipleDonationAmountInCheckout = nil, externalID = nil, popularityIndex = nil, eIN = nil, nonProfitSecondName = nil, nonProfitAddress = [], nonProfitSocialAddress = [])
    @name = name
    @listingNPEmailNotifPref = listingNPEmailNotifPref
    @listingNPEmail = listingNPEmail
    @listingNPContactName = listingNPContactName
    @mission = mission
    @logoURL = logoURL
    @status = status
    @searchableString = searchableString
    @charityRegion = charityRegion
    @charityDomain = charityDomain
    @charityID = charityID
    @logoURLSelling = logoURLSelling
    @displayLogoSelling = displayLogoSelling
    @displayNameInCheckout = displayNameInCheckout
    @description = description
    @showMultipleDonationAmountInCheckout = showMultipleDonationAmountInCheckout
    @externalID = externalID
    @popularityIndex = popularityIndex
    @eIN = eIN
    @nonProfitSecondName = nonProfitSecondName
    @nonProfitAddress = nonProfitAddress
    @nonProfitSocialAddress = nonProfitSocialAddress
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}NonProfitSocialAddressType
#   socialAddressType - EBay::SocialAddressTypeCodeType
#   socialAddressId - SOAP::SOAPString
class NonProfitSocialAddressType
  attr_accessor :socialAddressType
  attr_accessor :socialAddressId

  def initialize(socialAddressType = nil, socialAddressId = nil)
    @socialAddressType = socialAddressType
    @socialAddressId = socialAddressId
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharitySellerType
#   charitySellerStatus - EBay::CharitySellerStatusCodeType
#   charityAffiliation - EBay::CharityAffiliationType
#   termsAndConditionsAccepted - SOAP::SOAPBoolean
class CharitySellerType
  attr_accessor :charitySellerStatus
  attr_accessor :charityAffiliation
  attr_accessor :termsAndConditionsAccepted
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charitySellerStatus = nil, charityAffiliation = [], termsAndConditionsAccepted = nil)
    @charitySellerStatus = charitySellerStatus
    @charityAffiliation = charityAffiliation
    @termsAndConditionsAccepted = termsAndConditionsAccepted
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CharityType
#   charityName - SOAP::SOAPString
#   charityNumber - SOAP::SOAPInt
#   donationPercent - SOAP::SOAPFloat
#   charityID - SOAP::SOAPString
#   mission - SOAP::SOAPString
#   logoURL - SOAP::SOAPString
#   status - EBay::CharityStatusCodeType
#   charityListing - SOAP::SOAPBoolean
class CharityType
  attr_accessor :charityName
  attr_accessor :charityNumber
  attr_accessor :donationPercent
  attr_accessor :charityID
  attr_accessor :mission
  attr_accessor :logoURL
  attr_accessor :status
  attr_accessor :charityListing
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(charityName = nil, charityNumber = nil, donationPercent = nil, charityID = nil, mission = nil, logoURL = nil, status = nil, charityListing = nil)
    @charityName = charityName
    @charityNumber = charityNumber
    @donationPercent = donationPercent
    @charityID = charityID
    @mission = mission
    @logoURL = logoURL
    @status = status
    @charityListing = charityListing
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutOrderDetailType
#   totalCartMerchandiseCost - EBay::AmountType
#   totalCartShippingCost - EBay::AmountType
#   totalTaxAmount - EBay::AmountType
#   totalAmount - EBay::AmountType
class CheckoutOrderDetailType
  attr_accessor :totalCartMerchandiseCost
  attr_accessor :totalCartShippingCost
  attr_accessor :totalTaxAmount
  attr_accessor :totalAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalCartMerchandiseCost = nil, totalCartShippingCost = nil, totalTaxAmount = nil, totalAmount = nil)
    @totalCartMerchandiseCost = totalCartMerchandiseCost
    @totalCartShippingCost = totalCartShippingCost
    @totalTaxAmount = totalTaxAmount
    @totalAmount = totalAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutStatusType
#   eBayPaymentStatus - EBay::PaymentStatusCodeType
#   lastModifiedTime - SOAP::SOAPDateTime
#   paymentMethod - EBay::BuyerPaymentMethodCodeType
#   status - EBay::CompleteStatusCodeType
#   integratedMerchantCreditCardEnabled - SOAP::SOAPBoolean
#   eBayPaymentMismatchDetails - EBay::EBayPaymentMismatchDetailsType
#   paymentInstrument - EBay::BuyerPaymentInstrumentCodeType
class CheckoutStatusType
  attr_accessor :eBayPaymentStatus
  attr_accessor :lastModifiedTime
  attr_accessor :paymentMethod
  attr_accessor :status
  attr_accessor :integratedMerchantCreditCardEnabled
  attr_accessor :eBayPaymentMismatchDetails
  attr_accessor :paymentInstrument
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayPaymentStatus = nil, lastModifiedTime = nil, paymentMethod = nil, status = nil, integratedMerchantCreditCardEnabled = nil, eBayPaymentMismatchDetails = nil, paymentInstrument = nil)
    @eBayPaymentStatus = eBayPaymentStatus
    @lastModifiedTime = lastModifiedTime
    @paymentMethod = paymentMethod
    @status = status
    @integratedMerchantCreditCardEnabled = integratedMerchantCreditCardEnabled
    @eBayPaymentMismatchDetails = eBayPaymentMismatchDetails
    @paymentInstrument = paymentInstrument
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdAutoAcceptEnabledDefinitionType
class ClassifiedAdAutoAcceptEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdAutoDeclineEnabledDefinitionType
class ClassifiedAdAutoDeclineEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdBestOfferEnabledDefinitionType
class ClassifiedAdBestOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdCompanyNameEnabledDefinitionType
class ClassifiedAdCompanyNameEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdContactByAddressEnabledDefinitionType
class ClassifiedAdContactByAddressEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdContactByEmailEnabledDefintionType
class ClassifiedAdContactByEmailEnabledDefintionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdContactByPhoneEnabledDefinitionType
class ClassifiedAdContactByPhoneEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdCounterOfferEnabledDefinitionType
class ClassifiedAdCounterOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdPayPerLeadEnabledDefinitionType
class ClassifiedAdPayPerLeadEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdPaymentMethodEnabledDefinitionType
class ClassifiedAdPaymentMethodEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdPhoneCountDefinitionType
class ClassifiedAdPhoneCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdShippingMethodEnabledDefinitionType
class ClassifiedAdShippingMethodEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdStreetCountDefinitionType
class ClassifiedAdStreetCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CombinedFixedPriceTreatmentEnabledDefinitionType
class CombinedFixedPriceTreatmentEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentPreferencesType
#   calculatedShippingPreferences - EBay::CalculatedShippingPreferencesType
#   combinedPaymentOption - EBay::CombinedPaymentOptionCodeType
#   combinedPaymentPeriod - EBay::CombinedPaymentPeriodCodeType
#   flatShippingPreferences - EBay::FlatShippingPreferencesType
class CombinedPaymentPreferencesType
  attr_accessor :calculatedShippingPreferences
  attr_accessor :combinedPaymentOption
  attr_accessor :combinedPaymentPeriod
  attr_accessor :flatShippingPreferences
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(calculatedShippingPreferences = nil, combinedPaymentOption = nil, combinedPaymentPeriod = nil, flatShippingPreferences = nil)
    @calculatedShippingPreferences = calculatedShippingPreferences
    @combinedPaymentOption = combinedPaymentOption
    @combinedPaymentPeriod = combinedPaymentPeriod
    @flatShippingPreferences = flatShippingPreferences
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CompatibleVehicleTypeDefinitionType
class CompatibleVehicleTypeDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ConditionEnabledDefinitionType
class ConditionEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ConditionType
#   iD - SOAP::SOAPInt
#   displayName - SOAP::SOAPString
class ConditionType
  attr_accessor :iD
  attr_accessor :displayName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(iD = nil, displayName = nil)
    @iD = iD
    @displayName = displayName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ConditionValuesDefinitionType
class ConditionValuesDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ConditionValuesType
#   condition - EBay::ConditionType
#   conditionHelpURL - SOAP::SOAPAnyURI
class ConditionValuesType
  attr_accessor :condition
  attr_accessor :conditionHelpURL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(condition = [], conditionHelpURL = nil)
    @condition = condition
    @conditionHelpURL = conditionHelpURL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ContactHoursDetailsType
#   timeZoneID - SOAP::SOAPString
#   hours1Days - EBay::DaysCodeType
#   hours1AnyTime - SOAP::SOAPBoolean
#   hours1From - SOAP::SOAPTime
#   hours1To - SOAP::SOAPTime
#   hours2Days - EBay::DaysCodeType
#   hours2AnyTime - SOAP::SOAPBoolean
#   hours2From - SOAP::SOAPTime
#   hours2To - SOAP::SOAPTime
class ContactHoursDetailsType
  attr_accessor :timeZoneID
  attr_accessor :hours1Days
  attr_accessor :hours1AnyTime
  attr_accessor :hours1From
  attr_accessor :hours1To
  attr_accessor :hours2Days
  attr_accessor :hours2AnyTime
  attr_accessor :hours2From
  attr_accessor :hours2To
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timeZoneID = nil, hours1Days = nil, hours1AnyTime = nil, hours1From = nil, hours1To = nil, hours2Days = nil, hours2AnyTime = nil, hours2From = nil, hours2To = nil)
    @timeZoneID = timeZoneID
    @hours1Days = hours1Days
    @hours1AnyTime = hours1AnyTime
    @hours1From = hours1From
    @hours1To = hours1To
    @hours2Days = hours2Days
    @hours2AnyTime = hours2AnyTime
    @hours2From = hours2From
    @hours2To = hours2To
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ContextSearchAssetType
#   keyword - SOAP::SOAPString
#   category - EBay::CategoryType
#   ranking - SOAP::SOAPInt
class ContextSearchAssetType
  attr_accessor :keyword
  attr_accessor :category
  attr_accessor :ranking

  def initialize(keyword = nil, category = nil, ranking = nil)
    @keyword = keyword
    @category = category
    @ranking = ranking
  end
end

# {urn:ebay:apis:eBLBaseComponents}CountryDetailsType
#   country - EBay::CountryCodeType
#   description - SOAP::SOAPString
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class CountryDetailsType
  attr_accessor :country
  attr_accessor :description
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(country = nil, description = nil, detailVersion = nil, updateTime = nil)
    @country = country
    @description = description
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossBorderTradeAustraliaEnabledDefinitionType
class CrossBorderTradeAustraliaEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossBorderTradeGBEnabledDefinitionType
class CrossBorderTradeGBEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossBorderTradeNorthAmericaEnabledDefinitionType
class CrossBorderTradeNorthAmericaEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossPromotionPreferencesType
#   crossPromotionEnabled - SOAP::SOAPBoolean
#   crossSellItemFormatSortFilter - EBay::ItemFormatSortFilterCodeType
#   crossSellGallerySortFilter - EBay::GallerySortFilterCodeType
#   crossSellItemSortFilter - EBay::ItemSortFilterCodeType
#   upSellItemFormatSortFilter - EBay::ItemFormatSortFilterCodeType
#   upSellGallerySortFilter - EBay::GallerySortFilterCodeType
#   upSellItemSortFilter - EBay::ItemSortFilterCodeType
class CrossPromotionPreferencesType
  attr_accessor :crossPromotionEnabled
  attr_accessor :crossSellItemFormatSortFilter
  attr_accessor :crossSellGallerySortFilter
  attr_accessor :crossSellItemSortFilter
  attr_accessor :upSellItemFormatSortFilter
  attr_accessor :upSellGallerySortFilter
  attr_accessor :upSellItemSortFilter
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(crossPromotionEnabled = nil, crossSellItemFormatSortFilter = nil, crossSellGallerySortFilter = nil, crossSellItemSortFilter = nil, upSellItemFormatSortFilter = nil, upSellGallerySortFilter = nil, upSellItemSortFilter = nil)
    @crossPromotionEnabled = crossPromotionEnabled
    @crossSellItemFormatSortFilter = crossSellItemFormatSortFilter
    @crossSellGallerySortFilter = crossSellGallerySortFilter
    @crossSellItemSortFilter = crossSellItemSortFilter
    @upSellItemFormatSortFilter = upSellItemFormatSortFilter
    @upSellGallerySortFilter = upSellGallerySortFilter
    @upSellItemSortFilter = upSellItemSortFilter
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CrossPromotionsType
#   itemID - (any)
#   primaryScheme - EBay::PromotionSchemeCodeType
#   promotionMethod - EBay::PromotionMethodCodeType
#   sellerID - SOAP::SOAPString
#   shippingDiscount - SOAP::SOAPBoolean
#   storeName - SOAP::SOAPString
#   promotedItem - EBay::PromotedItemType
class CrossPromotionsType
  attr_accessor :itemID
  attr_accessor :primaryScheme
  attr_accessor :promotionMethod
  attr_accessor :sellerID
  attr_accessor :shippingDiscount
  attr_accessor :storeName
  attr_accessor :promotedItem
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, primaryScheme = nil, promotionMethod = nil, sellerID = nil, shippingDiscount = nil, storeName = nil, promotedItem = [])
    @itemID = itemID
    @primaryScheme = primaryScheme
    @promotionMethod = promotionMethod
    @sellerID = sellerID
    @shippingDiscount = shippingDiscount
    @storeName = storeName
    @promotedItem = promotedItem
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}CurrencyDetailsType
#   currency - EBay::CurrencyCodeType
#   description - SOAP::SOAPString
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class CurrencyDetailsType
  attr_accessor :currency
  attr_accessor :description
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(currency = nil, description = nil, detailVersion = nil, updateTime = nil)
    @currency = currency
    @description = description
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DataElementSetType
#   dataElement - SOAP::SOAPString
#   dataElementID - SOAP::SOAPInt
#   xmlattr_attributeSetID - SOAP::SOAPInt
class DataElementSetType
  AttrAttributeSetID = XSD::QName.new(nil, "attributeSetID")

  attr_accessor :dataElement
  attr_accessor :dataElementID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_attributeSetID
    __xmlattr[AttrAttributeSetID]
  end

  def xmlattr_attributeSetID=(value)
    __xmlattr[AttrAttributeSetID] = value
  end

  def initialize(dataElement = nil, dataElementID = nil)
    @dataElement = dataElement
    @dataElementID = dataElementID
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}DateType
#   year - SOAP::SOAPInt
#   month - SOAP::SOAPInt
#   day - SOAP::SOAPInt
class DateType
  attr_accessor :year
  attr_accessor :month
  attr_accessor :day
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(year = nil, month = nil, day = nil)
    @year = year
    @month = month
    @day = day
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DeliveryURLDetailType
#   deliveryURLName - SOAP::SOAPString
#   deliveryURL - SOAP::SOAPAnyURI
#   status - EBay::EnableCodeType
class DeliveryURLDetailType
  attr_accessor :deliveryURLName
  attr_accessor :deliveryURL
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(deliveryURLName = nil, deliveryURL = nil, status = nil)
    @deliveryURLName = deliveryURLName
    @deliveryURL = deliveryURL
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DepositSupportedDefinitionType
class DepositSupportedDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionTemplateType
#   groupID - SOAP::SOAPInt
#   iD - SOAP::SOAPInt
#   imageURL - SOAP::SOAPAnyURI
#   name - SOAP::SOAPString
#   templateXML - SOAP::SOAPString
#   type - EBay::DescriptionTemplateCodeType
class DescriptionTemplateType
  attr_accessor :groupID
  attr_accessor :iD
  attr_accessor :imageURL
  attr_accessor :name
  attr_accessor :templateXML
  attr_accessor :type
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(groupID = nil, iD = nil, imageURL = nil, name = nil, templateXML = nil, type = nil)
    @groupID = groupID
    @iD = iD
    @imageURL = imageURL
    @name = name
    @templateXML = templateXML
    @type = type
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DiscountPriceInfoType
#   originalRetailPrice - EBay::AmountType
#   minimumAdvertisedPrice - EBay::AmountType
#   minimumAdvertisedPriceExposure - EBay::MinimumAdvertisedPriceExposureCodeType
#   pricingTreatment - EBay::PricingTreatmentCodeType
#   soldOneBay - SOAP::SOAPBoolean
#   soldOffeBay - SOAP::SOAPBoolean
#   madeForOutletComparisonPrice - EBay::AmountType
class DiscountPriceInfoType
  attr_accessor :originalRetailPrice
  attr_accessor :minimumAdvertisedPrice
  attr_accessor :minimumAdvertisedPriceExposure
  attr_accessor :pricingTreatment
  attr_accessor :soldOneBay
  attr_accessor :soldOffeBay
  attr_accessor :madeForOutletComparisonPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(originalRetailPrice = nil, minimumAdvertisedPrice = nil, minimumAdvertisedPriceExposure = nil, pricingTreatment = nil, soldOneBay = nil, soldOffeBay = nil, madeForOutletComparisonPrice = nil)
    @originalRetailPrice = originalRetailPrice
    @minimumAdvertisedPrice = minimumAdvertisedPrice
    @minimumAdvertisedPriceExposure = minimumAdvertisedPriceExposure
    @pricingTreatment = pricingTreatment
    @soldOneBay = soldOneBay
    @soldOffeBay = soldOffeBay
    @madeForOutletComparisonPrice = madeForOutletComparisonPrice
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DiscountProfileType
#   discountProfileID - SOAP::SOAPString
#   discountProfileName - SOAP::SOAPString
#   eachAdditionalAmount - EBay::AmountType
#   eachAdditionalAmountOff - EBay::AmountType
#   eachAdditionalPercentOff - SOAP::SOAPFloat
#   weightOff - EBay::MeasureType
#   mappedDiscountProfileID - SOAP::SOAPString
class DiscountProfileType
  attr_accessor :discountProfileID
  attr_accessor :discountProfileName
  attr_accessor :eachAdditionalAmount
  attr_accessor :eachAdditionalAmountOff
  attr_accessor :eachAdditionalPercentOff
  attr_accessor :weightOff
  attr_accessor :mappedDiscountProfileID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(discountProfileID = nil, discountProfileName = nil, eachAdditionalAmount = nil, eachAdditionalAmountOff = nil, eachAdditionalPercentOff = nil, weightOff = nil, mappedDiscountProfileID = nil)
    @discountProfileID = discountProfileID
    @discountProfileName = discountProfileName
    @eachAdditionalAmount = eachAdditionalAmount
    @eachAdditionalAmountOff = eachAdditionalAmountOff
    @eachAdditionalPercentOff = eachAdditionalPercentOff
    @weightOff = weightOff
    @mappedDiscountProfileID = mappedDiscountProfileID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DispatchCutoffTimePreferencesType
#   cutoffTime - SOAP::SOAPTime
class DispatchCutoffTimePreferencesType
  attr_accessor :cutoffTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(cutoffTime = nil)
    @cutoffTime = cutoffTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DispatchTimeMaxDetailsType
#   dispatchTimeMax - SOAP::SOAPInt
#   description - SOAP::SOAPString
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
#   extendedHandling - SOAP::SOAPBoolean
class DispatchTimeMaxDetailsType
  attr_accessor :dispatchTimeMax
  attr_accessor :description
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_accessor :extendedHandling
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(dispatchTimeMax = nil, description = nil, detailVersion = nil, updateTime = nil, extendedHandling = nil)
    @dispatchTimeMax = dispatchTimeMax
    @description = description
    @detailVersion = detailVersion
    @updateTime = updateTime
    @extendedHandling = extendedHandling
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DisputeArrayType
class DisputeArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}DisputeType
#   disputeID - (any)
#   disputeRecordType - EBay::DisputeRecordTypeCodeType
#   disputeState - EBay::DisputeStateCodeType
#   disputeStatus - EBay::DisputeStatusCodeType
#   otherPartyRole - EBay::TradingRoleCodeType
#   otherPartyName - SOAP::SOAPString
#   userRole - EBay::TradingRoleCodeType
#   buyerUserID - (any)
#   sellerUserID - (any)
#   transactionID - SOAP::SOAPString
#   item - EBay::ItemType
#   disputeReason - EBay::DisputeReasonCodeType
#   disputeExplanation - EBay::DisputeExplanationCodeType
#   disputeCreditEligibility - EBay::DisputeCreditEligibilityCodeType
#   disputeCreatedTime - SOAP::SOAPDateTime
#   disputeModifiedTime - SOAP::SOAPDateTime
#   disputeResolution - EBay::DisputeResolutionType
#   disputeMessage - EBay::DisputeMessageType
#   escalation - SOAP::SOAPBoolean
#   purchaseProtection - SOAP::SOAPBoolean
#   orderLineItemID - SOAP::SOAPString
class DisputeType
  attr_accessor :disputeID
  attr_accessor :disputeRecordType
  attr_accessor :disputeState
  attr_accessor :disputeStatus
  attr_accessor :otherPartyRole
  attr_accessor :otherPartyName
  attr_accessor :userRole
  attr_accessor :buyerUserID
  attr_accessor :sellerUserID
  attr_accessor :transactionID
  attr_accessor :item
  attr_accessor :disputeReason
  attr_accessor :disputeExplanation
  attr_accessor :disputeCreditEligibility
  attr_accessor :disputeCreatedTime
  attr_accessor :disputeModifiedTime
  attr_accessor :disputeResolution
  attr_accessor :disputeMessage
  attr_accessor :escalation
  attr_accessor :purchaseProtection
  attr_accessor :orderLineItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(disputeID = nil, disputeRecordType = nil, disputeState = nil, disputeStatus = nil, otherPartyRole = nil, otherPartyName = nil, userRole = nil, buyerUserID = nil, sellerUserID = nil, transactionID = nil, item = nil, disputeReason = nil, disputeExplanation = nil, disputeCreditEligibility = nil, disputeCreatedTime = nil, disputeModifiedTime = nil, disputeResolution = [], disputeMessage = [], escalation = nil, purchaseProtection = nil, orderLineItemID = nil)
    @disputeID = disputeID
    @disputeRecordType = disputeRecordType
    @disputeState = disputeState
    @disputeStatus = disputeStatus
    @otherPartyRole = otherPartyRole
    @otherPartyName = otherPartyName
    @userRole = userRole
    @buyerUserID = buyerUserID
    @sellerUserID = sellerUserID
    @transactionID = transactionID
    @item = item
    @disputeReason = disputeReason
    @disputeExplanation = disputeExplanation
    @disputeCreditEligibility = disputeCreditEligibility
    @disputeCreatedTime = disputeCreatedTime
    @disputeModifiedTime = disputeModifiedTime
    @disputeResolution = disputeResolution
    @disputeMessage = disputeMessage
    @escalation = escalation
    @purchaseProtection = purchaseProtection
    @orderLineItemID = orderLineItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DistanceType
#   distanceMeasurement - SOAP::SOAPInt
#   distanceUnit - SOAP::SOAPString
class DistanceType
  attr_accessor :distanceMeasurement
  attr_accessor :distanceUnit
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(distanceMeasurement = nil, distanceUnit = nil)
    @distanceMeasurement = distanceMeasurement
    @distanceUnit = distanceUnit
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}DutchBINEnabledDefinitionType
class DutchBINEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EANEnabledDefinitionType
class EANEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EANIdentifierEnabledDefinitionType
class EANIdentifierEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemRequestContainerType
#   itemID - (any)
#   endingReason - EBay::EndReasonCodeType
#   messageID - SOAP::SOAPString
#   sellerInventoryID - SOAP::SOAPString
class EndItemRequestContainerType
  attr_accessor :itemID
  attr_accessor :endingReason
  attr_accessor :messageID
  attr_accessor :sellerInventoryID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, endingReason = nil, messageID = nil, sellerInventoryID = nil)
    @itemID = itemID
    @endingReason = endingReason
    @messageID = messageID
    @sellerInventoryID = sellerInventoryID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndItemResponseContainerType
#   endTime - SOAP::SOAPDateTime
#   correlationID - SOAP::SOAPString
#   errors - EBay::ErrorType
class EndItemResponseContainerType
  attr_accessor :endTime
  attr_accessor :correlationID
  attr_accessor :errors
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(endTime = nil, correlationID = nil, errors = [])
    @endTime = endTime
    @correlationID = correlationID
    @errors = errors
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}EndOfAuctionEmailPreferencesType
#   templateText - SOAP::SOAPString
#   logoURL - SOAP::SOAPAnyURI
#   logoType - EBay::EndOfAuctionLogoTypeCodeType
#   emailCustomized - SOAP::SOAPBoolean
#   textCustomized - SOAP::SOAPBoolean
#   logoCustomized - SOAP::SOAPBoolean
#   copyEmail - SOAP::SOAPBoolean
class EndOfAuctionEmailPreferencesType
  attr_accessor :templateText
  attr_accessor :logoURL
  attr_accessor :logoType
  attr_accessor :emailCustomized
  attr_accessor :textCustomized
  attr_accessor :logoCustomized
  attr_accessor :copyEmail
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(templateText = nil, logoURL = nil, logoType = nil, emailCustomized = nil, textCustomized = nil, logoCustomized = nil, copyEmail = nil)
    @templateText = templateText
    @logoURL = logoURL
    @logoType = logoType
    @emailCustomized = emailCustomized
    @textCustomized = textCustomized
    @logoCustomized = logoCustomized
    @copyEmail = copyEmail
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExcludeShippingLocationDetailsType
#   description - SOAP::SOAPString
#   location - SOAP::SOAPString
#   region - SOAP::SOAPString
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class ExcludeShippingLocationDetailsType
  attr_accessor :description
  attr_accessor :location
  attr_accessor :region
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(description = nil, location = nil, region = nil, detailVersion = nil, updateTime = nil)
    @description = description
    @location = location
    @region = region
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressConditionRequiredDefinitionType
class ExpressConditionRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressEnabledDefinitionType
class ExpressEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressItemRequirementsType
#   sellerExpressEligible - SOAP::SOAPBoolean
#   expressOptOut - SOAP::SOAPBoolean
#   expressApproved - SOAP::SOAPBoolean
#   expressEligibleListingType - SOAP::SOAPBoolean
#   expressEnabledCategory - SOAP::SOAPBoolean
#   eligiblePayPalAccount - SOAP::SOAPBoolean
#   domesticShippingCost - SOAP::SOAPBoolean
#   eligibleReturnPolicy - SOAP::SOAPBoolean
#   picture - SOAP::SOAPBoolean
#   eligibleItemCondition - SOAP::SOAPBoolean
#   priceAboveMinimum - SOAP::SOAPBoolean
#   priceBelowMaximum - SOAP::SOAPBoolean
#   eligibleCheckout - SOAP::SOAPBoolean
#   noPreapprovedBidderList - SOAP::SOAPBoolean
#   noCharity - SOAP::SOAPBoolean
#   combinedShippingDiscount - SOAP::SOAPBoolean
#   shipFromEligibleCountry - SOAP::SOAPBoolean
#   payPalAccountAcceptsUnconfirmedAddress - SOAP::SOAPBoolean
class ExpressItemRequirementsType
  attr_accessor :sellerExpressEligible
  attr_accessor :expressOptOut
  attr_accessor :expressApproved
  attr_accessor :expressEligibleListingType
  attr_accessor :expressEnabledCategory
  attr_accessor :eligiblePayPalAccount
  attr_accessor :domesticShippingCost
  attr_accessor :eligibleReturnPolicy
  attr_accessor :picture
  attr_accessor :eligibleItemCondition
  attr_accessor :priceAboveMinimum
  attr_accessor :priceBelowMaximum
  attr_accessor :eligibleCheckout
  attr_accessor :noPreapprovedBidderList
  attr_accessor :noCharity
  attr_accessor :combinedShippingDiscount
  attr_accessor :shipFromEligibleCountry
  attr_accessor :payPalAccountAcceptsUnconfirmedAddress
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sellerExpressEligible = nil, expressOptOut = nil, expressApproved = nil, expressEligibleListingType = nil, expressEnabledCategory = nil, eligiblePayPalAccount = nil, domesticShippingCost = nil, eligibleReturnPolicy = nil, picture = nil, eligibleItemCondition = nil, priceAboveMinimum = nil, priceBelowMaximum = nil, eligibleCheckout = nil, noPreapprovedBidderList = nil, noCharity = nil, combinedShippingDiscount = nil, shipFromEligibleCountry = nil, payPalAccountAcceptsUnconfirmedAddress = nil)
    @sellerExpressEligible = sellerExpressEligible
    @expressOptOut = expressOptOut
    @expressApproved = expressApproved
    @expressEligibleListingType = expressEligibleListingType
    @expressEnabledCategory = expressEnabledCategory
    @eligiblePayPalAccount = eligiblePayPalAccount
    @domesticShippingCost = domesticShippingCost
    @eligibleReturnPolicy = eligibleReturnPolicy
    @picture = picture
    @eligibleItemCondition = eligibleItemCondition
    @priceAboveMinimum = priceAboveMinimum
    @priceBelowMaximum = priceBelowMaximum
    @eligibleCheckout = eligibleCheckout
    @noPreapprovedBidderList = noPreapprovedBidderList
    @noCharity = noCharity
    @combinedShippingDiscount = combinedShippingDiscount
    @shipFromEligibleCountry = shipFromEligibleCountry
    @payPalAccountAcceptsUnconfirmedAddress = payPalAccountAcceptsUnconfirmedAddress
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExpressPicturesRequiredDefinitionType
class ExpressPicturesRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExtendedContactDetailsType
#   contactHoursDetails - EBay::ContactHoursDetailsType
#   classifiedAdContactByEmailEnabled - SOAP::SOAPBoolean
#   payPerLeadPhoneNumber - SOAP::SOAPString
class ExtendedContactDetailsType
  attr_accessor :contactHoursDetails
  attr_accessor :classifiedAdContactByEmailEnabled
  attr_accessor :payPerLeadPhoneNumber
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(contactHoursDetails = nil, classifiedAdContactByEmailEnabled = nil, payPerLeadPhoneNumber = nil)
    @contactHoursDetails = contactHoursDetails
    @classifiedAdContactByEmailEnabled = classifiedAdContactByEmailEnabled
    @payPerLeadPhoneNumber = payPerLeadPhoneNumber
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExtendedPictureDetailsType
#   pictureURLs - EBay::PictureURLsType
class ExtendedPictureDetailsType
  attr_accessor :pictureURLs
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureURLs = [])
    @pictureURLs = pictureURLs
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExtendedProductFinderIDType
#   productFinderID - SOAP::SOAPInt
#   productFinderBuySide - SOAP::SOAPBoolean
class ExtendedProductFinderIDType
  attr_accessor :productFinderID
  attr_accessor :productFinderBuySide

  def initialize(productFinderID = nil, productFinderBuySide = nil)
    @productFinderID = productFinderID
    @productFinderBuySide = productFinderBuySide
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExternalAlertIDArrayType
class ExternalAlertIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ExternalProductIDType
#   value - SOAP::SOAPString
#   returnSearchResultOnDuplicates - SOAP::SOAPBoolean
#   type - EBay::ExternalProductCodeType
#   alternateValue - SOAP::SOAPString
class ExternalProductIDType
  attr_accessor :value
  attr_accessor :returnSearchResultOnDuplicates
  attr_accessor :type
  attr_accessor :alternateValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(value = nil, returnSearchResultOnDuplicates = nil, type = nil, alternateValue = [])
    @value = value
    @returnSearchResultOnDuplicates = returnSearchResultOnDuplicates
    @type = type
    @alternateValue = alternateValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ExternalTransactionType
#   externalTransactionID - SOAP::SOAPString
#   externalTransactionTime - SOAP::SOAPDateTime
#   feeOrCreditAmount - EBay::AmountType
#   paymentOrRefundAmount - EBay::AmountType
#   externalTransactionStatus - EBay::PaymentTransactionStatusCodeType
class ExternalTransactionType
  attr_accessor :externalTransactionID
  attr_accessor :externalTransactionTime
  attr_accessor :feeOrCreditAmount
  attr_accessor :paymentOrRefundAmount
  attr_accessor :externalTransactionStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(externalTransactionID = nil, externalTransactionTime = nil, feeOrCreditAmount = nil, paymentOrRefundAmount = nil, externalTransactionStatus = nil)
    @externalTransactionID = externalTransactionID
    @externalTransactionTime = externalTransactionTime
    @feeOrCreditAmount = feeOrCreditAmount
    @paymentOrRefundAmount = paymentOrRefundAmount
    @externalTransactionStatus = externalTransactionStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeatureDefinitionsType
#   listingDurations - EBay::ListingDurationDefinitionsType
#   shippingTermsRequired - EBay::ShippingTermRequiredDefinitionType
#   bestOfferEnabled - EBay::BestOfferEnabledDefinitionType
#   dutchBINEnabled - EBay::DutchBINEnabledDefinitionType
#   userConsentRequired - EBay::UserConsentRequiredDefinitionType
#   homePageFeaturedEnabled - EBay::HomePageFeaturedEnabledDefinitionType
#   proPackEnabled - EBay::ProPackEnabledDefinitionType
#   basicUpgradePackEnabled - EBay::BasicUpgradePackEnabledDefinitionType
#   valuePackEnabled - EBay::ValuePackEnabledDefinitionType
#   proPackPlusEnabled - EBay::ProPackPlusEnabledDefinitionType
#   adFormatEnabled - EBay::AdFormatEnabledDefinitionType
#   bestOfferCounterEnabled - EBay::BestOfferCounterEnabledDefinitionType
#   bestOfferAutoDeclineEnabled - EBay::BestOfferAutoDeclineEnabledDefinitionType
#   localMarketSpecialitySubscription - EBay::LocalMarketSpecialitySubscriptionDefinitionType
#   localMarketRegularSubscription - EBay::LocalMarketRegularSubscriptionDefinitionType
#   localMarketPremiumSubscription - EBay::LocalMarketPremiumSubscriptionDefinitionType
#   localMarketNonSubscription - EBay::LocalMarketNonSubscriptionDefinitionType
#   expressEnabled - EBay::ExpressEnabledDefinitionType
#   expressPicturesRequired - EBay::ExpressPicturesRequiredDefinitionType
#   expressConditionRequired - EBay::ExpressConditionRequiredDefinitionType
#   minimumReservePrice - EBay::MinimumReservePriceDefinitionType
#   transactionConfirmationRequestEnabled - EBay::TCREnabledDefinitionType
#   sellerContactDetailsEnabled - EBay::SellerContactDetailsEnabledDefinitionType
#   storeInventoryEnabled - EBay::StoreInventoryEnabledDefinitionType
#   skypeMeTransactionalEnabled - EBay::SkypeMeTransactionalEnabledDefinitionType
#   skypeMeNonTransactionalEnabled - EBay::SkypeMeNonTransactionalEnabledDefinitionType
#   localListingDistancesRegular - EBay::LocalListingDistancesRegularDefinitionType
#   localListingDistancesSpecialty - EBay::LocalListingDistancesSpecialtyDefinitionType
#   localListingDistancesNonSubscription - EBay::LocalListingDistancesNonSubscriptionDefinitionType
#   classifiedAdPaymentMethodEnabled - EBay::ClassifiedAdPaymentMethodEnabledDefinitionType
#   classifiedAdShippingMethodEnabled - EBay::ClassifiedAdShippingMethodEnabledDefinitionType
#   classifiedAdBestOfferEnabled - EBay::ClassifiedAdBestOfferEnabledDefinitionType
#   classifiedAdCounterOfferEnabled - EBay::ClassifiedAdCounterOfferEnabledDefinitionType
#   classifiedAdAutoDeclineEnabled - EBay::ClassifiedAdAutoDeclineEnabledDefinitionType
#   classifiedAdContactByPhoneEnabled - EBay::ClassifiedAdContactByPhoneEnabledDefinitionType
#   classifiedAdContactByEmailEnabled - EBay::ClassifiedAdContactByEmailEnabledDefintionType
#   safePaymentRequired - EBay::SafePaymentRequiredDefinitionType
#   classifiedAdPayPerLeadEnabled - EBay::ClassifiedAdPayPerLeadEnabledDefinitionType
#   itemSpecificsEnabled - EBay::ItemSpecificsEnabledDefinitionType
#   paisaPayFullEscrowEnabled - EBay::PaisaPayFullEscrowEnabledDefinitionType
#   iSBNIdentifierEnabled - EBay::ISBNIdentifierEnabledDefinitionType
#   uPCIdentifierEnabled - EBay::UPCIdentifierEnabledDefinitionType
#   eANIdentifierEnabled - EBay::EANIdentifierEnabledDefinitionType
#   brandMPNIdentifierEnabled - EBay::BrandMPNIdentifierEnabledDefinitionType
#   bestOfferAutoAcceptEnabled - EBay::BestOfferAutoAcceptEnabledDefinitionType
#   classifiedAdAutoAcceptEnabled - EBay::ClassifiedAdAutoAcceptEnabledDefinitionType
#   crossBorderTradeNorthAmericaEnabled - EBay::CrossBorderTradeNorthAmericaEnabledDefinitionType
#   crossBorderTradeGBEnabled - EBay::CrossBorderTradeGBEnabledDefinitionType
#   crossBorderTradeAustraliaEnabled - EBay::CrossBorderTradeAustraliaEnabledDefinitionType
#   payPalBuyerProtectionEnabled - EBay::PayPalBuyerProtectionEnabledDefinitionType
#   buyerGuaranteeEnabled - EBay::BuyerGuaranteeEnabledDefinitionType
#   combinedFixedPriceTreatmentEnabled - EBay::CombinedFixedPriceTreatmentEnabledDefinitionType
#   galleryFeaturedDurations - EBay::ListingEnhancementDurationDefinitionType
#   iNEscrowWorkflowTimeline - EBay::INEscrowWorkflowTimelineDefinitionType
#   payPalRequired - EBay::PayPalRequiredDefinitionType
#   eBayMotorsProAdFormatEnabled - EBay::EBayMotorsProAdFormatEnabledDefinitionType
#   eBayMotorsProContactByPhoneEnabled - EBay::EBayMotorsProContactByPhoneEnabledDefinitionType
#   eBayMotorsProPhoneCount - EBay::EBayMotorsProPhoneCountDefinitionType
#   eBayMotorsProContactByAddressEnabled - EBay::EBayMotorsProContactByAddressEnabledDefinitionType
#   eBayMotorsProStreetCount - EBay::EBayMotorsProStreetCountDefinitionType
#   eBayMotorsProCompanyNameEnabled - EBay::EBayMotorsProCompanyNameEnabledDefinitionType
#   eBayMotorsProContactByEmailEnabled - EBay::EBayMotorsProContactByEmailEnabledDefinitionType
#   eBayMotorsProBestOfferEnabled - EBay::EBayMotorsProBestOfferEnabledDefinitionType
#   eBayMotorsProAutoAcceptEnabled - EBay::EBayMotorsProAutoAcceptEnabledDefinitionType
#   eBayMotorsProAutoDeclineEnabled - EBay::EBayMotorsProAutoDeclineEnabledDefinitionType
#   eBayMotorsProPaymentMethodCheckOutEnabled - EBay::EBayMotorsProPaymentMethodCheckOutEnabledDefinitionType
#   eBayMotorsProShippingMethodEnabled - EBay::EBayMotorsProShippingMethodEnabledDefinitionType
#   eBayMotorsProCounterOfferEnabled - EBay::EBayMotorsProCounterOfferEnabledDefinitionType
#   eBayMotorsProSellerContactDetailsEnabled - EBay::EBayMotorsProSellerContactDetailsEnabledDefinitionType
#   localMarketAdFormatEnabled - EBay::LocalMarketAdFormatEnabledDefinitionType
#   localMarketContactByPhoneEnabled - EBay::LocalMarketContactByPhoneEnabledDefinitionType
#   localMarketPhoneCount - EBay::LocalMarketPhoneCountDefinitionType
#   localMarketContactByAddressEnabled - EBay::LocalMarketContactByAddressEnabledDefinitionType
#   localMarketStreetCount - EBay::LocalMarketStreetCountDefinitionType
#   localMarketCompanyNameEnabled - EBay::LocalMarketCompanyNameEnabledDefinitionType
#   localMarketContactByEmailEnabled - EBay::LocalMarketContactByEmailEnabledDefinitionType
#   localMarketBestOfferEnabled - EBay::LocalMarketBestOfferEnabledDefinitionType
#   localMarketAutoAcceptEnabled - EBay::LocalMarketAutoAcceptEnabledDefinitionType
#   localMarketAutoDeclineEnabled - EBay::LocalMarketAutoDeclineEnabledDefinitionType
#   localMarketPaymentMethodCheckOutEnabled - EBay::LocalMarketPaymentMethodCheckOutEnabledDefinitionType
#   localMarketShippingMethodEnabled - EBay::LocalMarketShippingMethodEnabledDefinitionType
#   localMarketCounterOfferEnabled - EBay::LocalMarketCounterOfferEnabledDefinitionType
#   localMarketSellerContactDetailsEnabled - EBay::LocalMarketSellerContactDetailsEnabledDefinitionType
#   classifiedAdPhoneCount - EBay::ClassifiedAdPhoneCountDefinitionType
#   classifiedAdContactByAddressEnabled - EBay::ClassifiedAdContactByAddressEnabledDefinitionType
#   classifiedAdStreetCount - EBay::ClassifiedAdStreetCountDefinitionType
#   classifiedAdCompanyNameEnabled - EBay::ClassifiedAdCompanyNameEnabledDefinitionType
#   specialitySubscription - EBay::SpecialitySubscriptionDefinitionType
#   regularSubscription - EBay::RegularSubscriptionDefinitionType
#   premiumSubscription - EBay::PremiumSubscriptionDefinitionType
#   nonSubscription - EBay::NonSubscriptionDefinitionType
#   returnPolicyEnabled - EBay::ReturnPolicyEnabledDefinitionType
#   handlingTimeEnabled - EBay::HandlingTimeEnabledDefinitionType
#   payPalRequiredForStoreOwner - EBay::PayPalRequiredForStoreOwnerDefinitionType
#   reviseQuantityAllowed - EBay::ReviseQuantityAllowedDefinitionType
#   revisePriceAllowed - EBay::RevisePriceAllowedDefinitionType
#   storeOwnerExtendedListingDurationsEnabled - EBay::StoreOwnerExtendedListingDurationsEnabledDefinitionType
#   storeOwnerExtendedListingDurations - EBay::StoreOwnerExtendedListingDurationsDefinitionType
#   paymentMethod - EBay::PaymentMethodDefinitionType
#   group1MaxFlatShippingCost - EBay::Group1MaxFlatShippingCostDefinitionType
#   group2MaxFlatShippingCost - EBay::Group2MaxFlatShippingCostDefinitionType
#   group3MaxFlatShippingCost - EBay::Group3MaxFlatShippingCostDefinitionType
#   maxFlatShippingCostCBTExempt - EBay::MaxFlatShippingCostCBTExemptDefinitionType
#   maxFlatShippingCost - EBay::MaxFlatShippingCostDefinitionType
#   variationsEnabled - EBay::VariationsEnabledDefinitionType
#   attributeConversionEnabled - EBay::AttributeConversionEnabledFeatureDefinitionType
#   freeGalleryPlusEnabled - EBay::FreeGalleryPlusEnabledDefinitionType
#   freePicturePackEnabled - EBay::FreePicturePackEnabledDefinitionType
#   itemCompatibilityEnabled - EBay::ItemCompatibilityEnabledDefinitionType
#   maxItemCompatibility - EBay::MaxItemCompatibilityDefinitionType
#   minItemCompatibility - EBay::MinItemCompatibilityDefinitionType
#   conditionEnabled - EBay::ConditionEnabledDefinitionType
#   conditionValues - EBay::ConditionValuesDefinitionType
#   valueCategory - EBay::ValueCategoryDefinitionType
#   productCreationEnabled - EBay::ProductCreationEnabledDefinitionType
#   eANEnabled - EBay::EANEnabledDefinitionType
#   iSBNEnabled - EBay::ISBNEnabledDefinitionType
#   uPCEnabled - EBay::UPCEnabledDefinitionType
#   compatibleVehicleType - EBay::CompatibleVehicleTypeDefinitionType
#   maxGranularFitmentCount - EBay::MaxGranularFitmentCountDefinitionType
#   paymentOptionsGroup - EBay::PaymentOptionsGroupEnabledDefinitionType
#   shippingProfileCategoryGroup - EBay::ProfileCategoryGroupDefinitionType
#   paymentProfileCategoryGroup - EBay::ProfileCategoryGroupDefinitionType
#   returnPolicyProfileCategoryGroup - EBay::ProfileCategoryGroupDefinitionType
#   vINSupported - EBay::VINSupportedDefinitionType
#   vRMSupported - EBay::VRMSupportedDefinitionType
#   sellerProvidedTitleSupported - EBay::SellerProvidedTitleSupportedDefinitionType
#   depositSupported - EBay::DepositSupportedDefinitionType
#   globalShippingEnabled - EBay::GlobalShippingEnabledDefinitionType
#   additionalCompatibilityEnabled - EBay::AdditionalCompatibilityEnabledDefinitionType
#   pickupDropOffEnabled - EBay::PickupDropOffEnabledDefinitionType
class FeatureDefinitionsType
  attr_accessor :listingDurations
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :dutchBINEnabled
  attr_accessor :userConsentRequired
  attr_accessor :homePageFeaturedEnabled
  attr_accessor :proPackEnabled
  attr_accessor :basicUpgradePackEnabled
  attr_accessor :valuePackEnabled
  attr_accessor :proPackPlusEnabled
  attr_accessor :adFormatEnabled
  attr_accessor :bestOfferCounterEnabled
  attr_accessor :bestOfferAutoDeclineEnabled
  attr_accessor :localMarketSpecialitySubscription
  attr_accessor :localMarketRegularSubscription
  attr_accessor :localMarketPremiumSubscription
  attr_accessor :localMarketNonSubscription
  attr_accessor :expressEnabled
  attr_accessor :expressPicturesRequired
  attr_accessor :expressConditionRequired
  attr_accessor :minimumReservePrice
  attr_accessor :transactionConfirmationRequestEnabled
  attr_accessor :sellerContactDetailsEnabled
  attr_accessor :storeInventoryEnabled
  attr_accessor :skypeMeTransactionalEnabled
  attr_accessor :skypeMeNonTransactionalEnabled
  attr_accessor :localListingDistancesRegular
  attr_accessor :localListingDistancesSpecialty
  attr_accessor :localListingDistancesNonSubscription
  attr_accessor :classifiedAdPaymentMethodEnabled
  attr_accessor :classifiedAdShippingMethodEnabled
  attr_accessor :classifiedAdBestOfferEnabled
  attr_accessor :classifiedAdCounterOfferEnabled
  attr_accessor :classifiedAdAutoDeclineEnabled
  attr_accessor :classifiedAdContactByPhoneEnabled
  attr_accessor :classifiedAdContactByEmailEnabled
  attr_accessor :safePaymentRequired
  attr_accessor :classifiedAdPayPerLeadEnabled
  attr_accessor :itemSpecificsEnabled
  attr_accessor :paisaPayFullEscrowEnabled
  attr_accessor :iSBNIdentifierEnabled
  attr_accessor :uPCIdentifierEnabled
  attr_accessor :eANIdentifierEnabled
  attr_accessor :brandMPNIdentifierEnabled
  attr_accessor :bestOfferAutoAcceptEnabled
  attr_accessor :classifiedAdAutoAcceptEnabled
  attr_accessor :crossBorderTradeNorthAmericaEnabled
  attr_accessor :crossBorderTradeGBEnabled
  attr_accessor :crossBorderTradeAustraliaEnabled
  attr_accessor :payPalBuyerProtectionEnabled
  attr_accessor :buyerGuaranteeEnabled
  attr_accessor :combinedFixedPriceTreatmentEnabled
  attr_accessor :galleryFeaturedDurations
  attr_accessor :iNEscrowWorkflowTimeline
  attr_accessor :payPalRequired
  attr_accessor :eBayMotorsProAdFormatEnabled
  attr_accessor :eBayMotorsProContactByPhoneEnabled
  attr_accessor :eBayMotorsProPhoneCount
  attr_accessor :eBayMotorsProContactByAddressEnabled
  attr_accessor :eBayMotorsProStreetCount
  attr_accessor :eBayMotorsProCompanyNameEnabled
  attr_accessor :eBayMotorsProContactByEmailEnabled
  attr_accessor :eBayMotorsProBestOfferEnabled
  attr_accessor :eBayMotorsProAutoAcceptEnabled
  attr_accessor :eBayMotorsProAutoDeclineEnabled
  attr_accessor :eBayMotorsProPaymentMethodCheckOutEnabled
  attr_accessor :eBayMotorsProShippingMethodEnabled
  attr_accessor :eBayMotorsProCounterOfferEnabled
  attr_accessor :eBayMotorsProSellerContactDetailsEnabled
  attr_accessor :localMarketAdFormatEnabled
  attr_accessor :localMarketContactByPhoneEnabled
  attr_accessor :localMarketPhoneCount
  attr_accessor :localMarketContactByAddressEnabled
  attr_accessor :localMarketStreetCount
  attr_accessor :localMarketCompanyNameEnabled
  attr_accessor :localMarketContactByEmailEnabled
  attr_accessor :localMarketBestOfferEnabled
  attr_accessor :localMarketAutoAcceptEnabled
  attr_accessor :localMarketAutoDeclineEnabled
  attr_accessor :localMarketPaymentMethodCheckOutEnabled
  attr_accessor :localMarketShippingMethodEnabled
  attr_accessor :localMarketCounterOfferEnabled
  attr_accessor :localMarketSellerContactDetailsEnabled
  attr_accessor :classifiedAdPhoneCount
  attr_accessor :classifiedAdContactByAddressEnabled
  attr_accessor :classifiedAdStreetCount
  attr_accessor :classifiedAdCompanyNameEnabled
  attr_accessor :specialitySubscription
  attr_accessor :regularSubscription
  attr_accessor :premiumSubscription
  attr_accessor :nonSubscription
  attr_accessor :returnPolicyEnabled
  attr_accessor :handlingTimeEnabled
  attr_accessor :payPalRequiredForStoreOwner
  attr_accessor :reviseQuantityAllowed
  attr_accessor :revisePriceAllowed
  attr_accessor :storeOwnerExtendedListingDurationsEnabled
  attr_accessor :storeOwnerExtendedListingDurations
  attr_accessor :paymentMethod
  attr_accessor :group1MaxFlatShippingCost
  attr_accessor :group2MaxFlatShippingCost
  attr_accessor :group3MaxFlatShippingCost
  attr_accessor :maxFlatShippingCostCBTExempt
  attr_accessor :maxFlatShippingCost
  attr_accessor :variationsEnabled
  attr_accessor :attributeConversionEnabled
  attr_accessor :freeGalleryPlusEnabled
  attr_accessor :freePicturePackEnabled
  attr_accessor :itemCompatibilityEnabled
  attr_accessor :maxItemCompatibility
  attr_accessor :minItemCompatibility
  attr_accessor :conditionEnabled
  attr_accessor :conditionValues
  attr_accessor :valueCategory
  attr_accessor :productCreationEnabled
  attr_accessor :eANEnabled
  attr_accessor :iSBNEnabled
  attr_accessor :uPCEnabled
  attr_accessor :compatibleVehicleType
  attr_accessor :maxGranularFitmentCount
  attr_accessor :paymentOptionsGroup
  attr_accessor :shippingProfileCategoryGroup
  attr_accessor :paymentProfileCategoryGroup
  attr_accessor :returnPolicyProfileCategoryGroup
  attr_accessor :vINSupported
  attr_accessor :vRMSupported
  attr_accessor :sellerProvidedTitleSupported
  attr_accessor :depositSupported
  attr_accessor :globalShippingEnabled
  attr_accessor :additionalCompatibilityEnabled
  attr_reader :__xmlele_any
  attr_accessor :pickupDropOffEnabled

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingDurations = nil, shippingTermsRequired = nil, bestOfferEnabled = nil, dutchBINEnabled = nil, userConsentRequired = nil, homePageFeaturedEnabled = nil, proPackEnabled = nil, basicUpgradePackEnabled = nil, valuePackEnabled = nil, proPackPlusEnabled = nil, adFormatEnabled = nil, bestOfferCounterEnabled = nil, bestOfferAutoDeclineEnabled = nil, localMarketSpecialitySubscription = nil, localMarketRegularSubscription = nil, localMarketPremiumSubscription = nil, localMarketNonSubscription = nil, expressEnabled = nil, expressPicturesRequired = nil, expressConditionRequired = nil, minimumReservePrice = nil, transactionConfirmationRequestEnabled = nil, sellerContactDetailsEnabled = nil, storeInventoryEnabled = nil, skypeMeTransactionalEnabled = nil, skypeMeNonTransactionalEnabled = nil, localListingDistancesRegular = nil, localListingDistancesSpecialty = nil, localListingDistancesNonSubscription = nil, classifiedAdPaymentMethodEnabled = nil, classifiedAdShippingMethodEnabled = nil, classifiedAdBestOfferEnabled = nil, classifiedAdCounterOfferEnabled = nil, classifiedAdAutoDeclineEnabled = nil, classifiedAdContactByPhoneEnabled = nil, classifiedAdContactByEmailEnabled = nil, safePaymentRequired = nil, classifiedAdPayPerLeadEnabled = nil, itemSpecificsEnabled = nil, paisaPayFullEscrowEnabled = nil, iSBNIdentifierEnabled = nil, uPCIdentifierEnabled = nil, eANIdentifierEnabled = nil, brandMPNIdentifierEnabled = nil, bestOfferAutoAcceptEnabled = nil, classifiedAdAutoAcceptEnabled = nil, crossBorderTradeNorthAmericaEnabled = nil, crossBorderTradeGBEnabled = nil, crossBorderTradeAustraliaEnabled = nil, payPalBuyerProtectionEnabled = nil, buyerGuaranteeEnabled = nil, combinedFixedPriceTreatmentEnabled = nil, galleryFeaturedDurations = nil, iNEscrowWorkflowTimeline = nil, payPalRequired = nil, eBayMotorsProAdFormatEnabled = nil, eBayMotorsProContactByPhoneEnabled = nil, eBayMotorsProPhoneCount = nil, eBayMotorsProContactByAddressEnabled = nil, eBayMotorsProStreetCount = nil, eBayMotorsProCompanyNameEnabled = nil, eBayMotorsProContactByEmailEnabled = nil, eBayMotorsProBestOfferEnabled = nil, eBayMotorsProAutoAcceptEnabled = nil, eBayMotorsProAutoDeclineEnabled = nil, eBayMotorsProPaymentMethodCheckOutEnabled = nil, eBayMotorsProShippingMethodEnabled = nil, eBayMotorsProCounterOfferEnabled = nil, eBayMotorsProSellerContactDetailsEnabled = nil, localMarketAdFormatEnabled = nil, localMarketContactByPhoneEnabled = nil, localMarketPhoneCount = nil, localMarketContactByAddressEnabled = nil, localMarketStreetCount = nil, localMarketCompanyNameEnabled = nil, localMarketContactByEmailEnabled = nil, localMarketBestOfferEnabled = nil, localMarketAutoAcceptEnabled = nil, localMarketAutoDeclineEnabled = nil, localMarketPaymentMethodCheckOutEnabled = nil, localMarketShippingMethodEnabled = nil, localMarketCounterOfferEnabled = nil, localMarketSellerContactDetailsEnabled = nil, classifiedAdPhoneCount = nil, classifiedAdContactByAddressEnabled = nil, classifiedAdStreetCount = nil, classifiedAdCompanyNameEnabled = nil, specialitySubscription = nil, regularSubscription = nil, premiumSubscription = nil, nonSubscription = nil, returnPolicyEnabled = nil, handlingTimeEnabled = nil, payPalRequiredForStoreOwner = nil, reviseQuantityAllowed = nil, revisePriceAllowed = nil, storeOwnerExtendedListingDurationsEnabled = nil, storeOwnerExtendedListingDurations = nil, paymentMethod = nil, group1MaxFlatShippingCost = nil, group2MaxFlatShippingCost = nil, group3MaxFlatShippingCost = nil, maxFlatShippingCostCBTExempt = nil, maxFlatShippingCost = nil, variationsEnabled = nil, attributeConversionEnabled = nil, freeGalleryPlusEnabled = nil, freePicturePackEnabled = nil, itemCompatibilityEnabled = nil, maxItemCompatibility = nil, minItemCompatibility = nil, conditionEnabled = nil, conditionValues = nil, valueCategory = nil, productCreationEnabled = nil, eANEnabled = nil, iSBNEnabled = nil, uPCEnabled = nil, compatibleVehicleType = nil, maxGranularFitmentCount = nil, paymentOptionsGroup = nil, shippingProfileCategoryGroup = nil, paymentProfileCategoryGroup = nil, returnPolicyProfileCategoryGroup = nil, vINSupported = nil, vRMSupported = nil, sellerProvidedTitleSupported = nil, depositSupported = nil, globalShippingEnabled = nil, additionalCompatibilityEnabled = nil, pickupDropOffEnabled = nil)
    @listingDurations = listingDurations
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @dutchBINEnabled = dutchBINEnabled
    @userConsentRequired = userConsentRequired
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @proPackEnabled = proPackEnabled
    @basicUpgradePackEnabled = basicUpgradePackEnabled
    @valuePackEnabled = valuePackEnabled
    @proPackPlusEnabled = proPackPlusEnabled
    @adFormatEnabled = adFormatEnabled
    @bestOfferCounterEnabled = bestOfferCounterEnabled
    @bestOfferAutoDeclineEnabled = bestOfferAutoDeclineEnabled
    @localMarketSpecialitySubscription = localMarketSpecialitySubscription
    @localMarketRegularSubscription = localMarketRegularSubscription
    @localMarketPremiumSubscription = localMarketPremiumSubscription
    @localMarketNonSubscription = localMarketNonSubscription
    @expressEnabled = expressEnabled
    @expressPicturesRequired = expressPicturesRequired
    @expressConditionRequired = expressConditionRequired
    @minimumReservePrice = minimumReservePrice
    @transactionConfirmationRequestEnabled = transactionConfirmationRequestEnabled
    @sellerContactDetailsEnabled = sellerContactDetailsEnabled
    @storeInventoryEnabled = storeInventoryEnabled
    @skypeMeTransactionalEnabled = skypeMeTransactionalEnabled
    @skypeMeNonTransactionalEnabled = skypeMeNonTransactionalEnabled
    @localListingDistancesRegular = localListingDistancesRegular
    @localListingDistancesSpecialty = localListingDistancesSpecialty
    @localListingDistancesNonSubscription = localListingDistancesNonSubscription
    @classifiedAdPaymentMethodEnabled = classifiedAdPaymentMethodEnabled
    @classifiedAdShippingMethodEnabled = classifiedAdShippingMethodEnabled
    @classifiedAdBestOfferEnabled = classifiedAdBestOfferEnabled
    @classifiedAdCounterOfferEnabled = classifiedAdCounterOfferEnabled
    @classifiedAdAutoDeclineEnabled = classifiedAdAutoDeclineEnabled
    @classifiedAdContactByPhoneEnabled = classifiedAdContactByPhoneEnabled
    @classifiedAdContactByEmailEnabled = classifiedAdContactByEmailEnabled
    @safePaymentRequired = safePaymentRequired
    @classifiedAdPayPerLeadEnabled = classifiedAdPayPerLeadEnabled
    @itemSpecificsEnabled = itemSpecificsEnabled
    @paisaPayFullEscrowEnabled = paisaPayFullEscrowEnabled
    @iSBNIdentifierEnabled = iSBNIdentifierEnabled
    @uPCIdentifierEnabled = uPCIdentifierEnabled
    @eANIdentifierEnabled = eANIdentifierEnabled
    @brandMPNIdentifierEnabled = brandMPNIdentifierEnabled
    @bestOfferAutoAcceptEnabled = bestOfferAutoAcceptEnabled
    @classifiedAdAutoAcceptEnabled = classifiedAdAutoAcceptEnabled
    @crossBorderTradeNorthAmericaEnabled = crossBorderTradeNorthAmericaEnabled
    @crossBorderTradeGBEnabled = crossBorderTradeGBEnabled
    @crossBorderTradeAustraliaEnabled = crossBorderTradeAustraliaEnabled
    @payPalBuyerProtectionEnabled = payPalBuyerProtectionEnabled
    @buyerGuaranteeEnabled = buyerGuaranteeEnabled
    @combinedFixedPriceTreatmentEnabled = combinedFixedPriceTreatmentEnabled
    @galleryFeaturedDurations = galleryFeaturedDurations
    @iNEscrowWorkflowTimeline = iNEscrowWorkflowTimeline
    @payPalRequired = payPalRequired
    @eBayMotorsProAdFormatEnabled = eBayMotorsProAdFormatEnabled
    @eBayMotorsProContactByPhoneEnabled = eBayMotorsProContactByPhoneEnabled
    @eBayMotorsProPhoneCount = eBayMotorsProPhoneCount
    @eBayMotorsProContactByAddressEnabled = eBayMotorsProContactByAddressEnabled
    @eBayMotorsProStreetCount = eBayMotorsProStreetCount
    @eBayMotorsProCompanyNameEnabled = eBayMotorsProCompanyNameEnabled
    @eBayMotorsProContactByEmailEnabled = eBayMotorsProContactByEmailEnabled
    @eBayMotorsProBestOfferEnabled = eBayMotorsProBestOfferEnabled
    @eBayMotorsProAutoAcceptEnabled = eBayMotorsProAutoAcceptEnabled
    @eBayMotorsProAutoDeclineEnabled = eBayMotorsProAutoDeclineEnabled
    @eBayMotorsProPaymentMethodCheckOutEnabled = eBayMotorsProPaymentMethodCheckOutEnabled
    @eBayMotorsProShippingMethodEnabled = eBayMotorsProShippingMethodEnabled
    @eBayMotorsProCounterOfferEnabled = eBayMotorsProCounterOfferEnabled
    @eBayMotorsProSellerContactDetailsEnabled = eBayMotorsProSellerContactDetailsEnabled
    @localMarketAdFormatEnabled = localMarketAdFormatEnabled
    @localMarketContactByPhoneEnabled = localMarketContactByPhoneEnabled
    @localMarketPhoneCount = localMarketPhoneCount
    @localMarketContactByAddressEnabled = localMarketContactByAddressEnabled
    @localMarketStreetCount = localMarketStreetCount
    @localMarketCompanyNameEnabled = localMarketCompanyNameEnabled
    @localMarketContactByEmailEnabled = localMarketContactByEmailEnabled
    @localMarketBestOfferEnabled = localMarketBestOfferEnabled
    @localMarketAutoAcceptEnabled = localMarketAutoAcceptEnabled
    @localMarketAutoDeclineEnabled = localMarketAutoDeclineEnabled
    @localMarketPaymentMethodCheckOutEnabled = localMarketPaymentMethodCheckOutEnabled
    @localMarketShippingMethodEnabled = localMarketShippingMethodEnabled
    @localMarketCounterOfferEnabled = localMarketCounterOfferEnabled
    @localMarketSellerContactDetailsEnabled = localMarketSellerContactDetailsEnabled
    @classifiedAdPhoneCount = classifiedAdPhoneCount
    @classifiedAdContactByAddressEnabled = classifiedAdContactByAddressEnabled
    @classifiedAdStreetCount = classifiedAdStreetCount
    @classifiedAdCompanyNameEnabled = classifiedAdCompanyNameEnabled
    @specialitySubscription = specialitySubscription
    @regularSubscription = regularSubscription
    @premiumSubscription = premiumSubscription
    @nonSubscription = nonSubscription
    @returnPolicyEnabled = returnPolicyEnabled
    @handlingTimeEnabled = handlingTimeEnabled
    @payPalRequiredForStoreOwner = payPalRequiredForStoreOwner
    @reviseQuantityAllowed = reviseQuantityAllowed
    @revisePriceAllowed = revisePriceAllowed
    @storeOwnerExtendedListingDurationsEnabled = storeOwnerExtendedListingDurationsEnabled
    @storeOwnerExtendedListingDurations = storeOwnerExtendedListingDurations
    @paymentMethod = paymentMethod
    @group1MaxFlatShippingCost = group1MaxFlatShippingCost
    @group2MaxFlatShippingCost = group2MaxFlatShippingCost
    @group3MaxFlatShippingCost = group3MaxFlatShippingCost
    @maxFlatShippingCostCBTExempt = maxFlatShippingCostCBTExempt
    @maxFlatShippingCost = maxFlatShippingCost
    @variationsEnabled = variationsEnabled
    @attributeConversionEnabled = attributeConversionEnabled
    @freeGalleryPlusEnabled = freeGalleryPlusEnabled
    @freePicturePackEnabled = freePicturePackEnabled
    @itemCompatibilityEnabled = itemCompatibilityEnabled
    @maxItemCompatibility = maxItemCompatibility
    @minItemCompatibility = minItemCompatibility
    @conditionEnabled = conditionEnabled
    @conditionValues = conditionValues
    @valueCategory = valueCategory
    @productCreationEnabled = productCreationEnabled
    @eANEnabled = eANEnabled
    @iSBNEnabled = iSBNEnabled
    @uPCEnabled = uPCEnabled
    @compatibleVehicleType = compatibleVehicleType
    @maxGranularFitmentCount = maxGranularFitmentCount
    @paymentOptionsGroup = paymentOptionsGroup
    @shippingProfileCategoryGroup = shippingProfileCategoryGroup
    @paymentProfileCategoryGroup = paymentProfileCategoryGroup
    @returnPolicyProfileCategoryGroup = returnPolicyProfileCategoryGroup
    @vINSupported = vINSupported
    @vRMSupported = vRMSupported
    @sellerProvidedTitleSupported = sellerProvidedTitleSupported
    @depositSupported = depositSupported
    @globalShippingEnabled = globalShippingEnabled
    @additionalCompatibilityEnabled = additionalCompatibilityEnabled
    @__xmlele_any = nil
    @pickupDropOffEnabled = pickupDropOffEnabled
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeatureEligibilityType
#   qualifiesForBuyItNow - SOAP::SOAPBoolean
#   qualifiesForBuyItNowMultiple - SOAP::SOAPBoolean
#   qualifiedForFixedPriceOneDayDuration - SOAP::SOAPBoolean
#   qualifiesForVariations - SOAP::SOAPBoolean
#   qualifiedForAuctionOneDayDuration - SOAP::SOAPBoolean
class FeatureEligibilityType
  attr_accessor :qualifiesForBuyItNow
  attr_accessor :qualifiesForBuyItNowMultiple
  attr_accessor :qualifiedForFixedPriceOneDayDuration
  attr_accessor :qualifiesForVariations
  attr_accessor :qualifiedForAuctionOneDayDuration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(qualifiesForBuyItNow = nil, qualifiesForBuyItNowMultiple = nil, qualifiedForFixedPriceOneDayDuration = nil, qualifiesForVariations = nil, qualifiedForAuctionOneDayDuration = nil)
    @qualifiesForBuyItNow = qualifiesForBuyItNow
    @qualifiesForBuyItNowMultiple = qualifiesForBuyItNowMultiple
    @qualifiedForFixedPriceOneDayDuration = qualifiedForFixedPriceOneDayDuration
    @qualifiesForVariations = qualifiesForVariations
    @qualifiedForAuctionOneDayDuration = qualifiedForAuctionOneDayDuration
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeeType
#   name - SOAP::SOAPString
#   fee - EBay::AmountType
#   promotionalDiscount - EBay::AmountType
class FeeType
  attr_accessor :name
  attr_accessor :fee
  attr_accessor :promotionalDiscount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, fee = nil, promotionalDiscount = nil)
    @name = name
    @fee = fee
    @promotionalDiscount = promotionalDiscount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackCommentArrayType
class FeedbackCommentArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackDetailArrayType
class FeedbackDetailArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackDetailType
#   commentingUser - (any)
#   commentingUserScore - SOAP::SOAPInt
#   commentText - SOAP::SOAPString
#   commentTime - SOAP::SOAPDateTime
#   commentType - EBay::CommentTypeCodeType
#   feedbackResponse - SOAP::SOAPString
#   followup - SOAP::SOAPString
#   itemID - (any)
#   role - EBay::TradingRoleCodeType
#   itemTitle - SOAP::SOAPString
#   itemPrice - EBay::AmountType
#   feedbackID - SOAP::SOAPString
#   transactionID - SOAP::SOAPString
#   commentReplaced - SOAP::SOAPBoolean
#   responseReplaced - SOAP::SOAPBoolean
#   followUpReplaced - SOAP::SOAPBoolean
#   countable - SOAP::SOAPBoolean
#   feedbackRevised - SOAP::SOAPBoolean
#   orderLineItemID - SOAP::SOAPString
class FeedbackDetailType
  attr_accessor :commentingUser
  attr_accessor :commentingUserScore
  attr_accessor :commentText
  attr_accessor :commentTime
  attr_accessor :commentType
  attr_accessor :feedbackResponse
  attr_accessor :followup
  attr_accessor :itemID
  attr_accessor :role
  attr_accessor :itemTitle
  attr_accessor :itemPrice
  attr_accessor :feedbackID
  attr_accessor :transactionID
  attr_accessor :commentReplaced
  attr_accessor :responseReplaced
  attr_accessor :followUpReplaced
  attr_accessor :countable
  attr_accessor :feedbackRevised
  attr_accessor :orderLineItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(commentingUser = nil, commentingUserScore = nil, commentText = nil, commentTime = nil, commentType = nil, feedbackResponse = nil, followup = nil, itemID = nil, role = nil, itemTitle = nil, itemPrice = nil, feedbackID = nil, transactionID = nil, commentReplaced = nil, responseReplaced = nil, followUpReplaced = nil, countable = nil, feedbackRevised = nil, orderLineItemID = nil)
    @commentingUser = commentingUser
    @commentingUserScore = commentingUserScore
    @commentText = commentText
    @commentTime = commentTime
    @commentType = commentType
    @feedbackResponse = feedbackResponse
    @followup = followup
    @itemID = itemID
    @role = role
    @itemTitle = itemTitle
    @itemPrice = itemPrice
    @feedbackID = feedbackID
    @transactionID = transactionID
    @commentReplaced = commentReplaced
    @responseReplaced = responseReplaced
    @followUpReplaced = followUpReplaced
    @countable = countable
    @feedbackRevised = feedbackRevised
    @orderLineItemID = orderLineItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackInfoType
#   commentText - SOAP::SOAPString
#   commentType - EBay::CommentTypeCodeType
#   targetUser - (any)
class FeedbackInfoType
  attr_accessor :commentText
  attr_accessor :commentType
  attr_accessor :targetUser
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(commentText = nil, commentType = nil, targetUser = nil)
    @commentText = commentText
    @commentType = commentType
    @targetUser = targetUser
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackPeriodArrayType
class FeedbackPeriodArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackPeriodType
#   periodInDays - SOAP::SOAPInt
#   count - SOAP::SOAPInt
class FeedbackPeriodType
  attr_accessor :periodInDays
  attr_accessor :count
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(periodInDays = nil, count = nil)
    @periodInDays = periodInDays
    @count = count
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackRequirementsType
#   xmlattr_minimum - SOAP::SOAPString
class FeedbackRequirementsType < ::String
  AttrMinimum = XSD::QName.new(nil, "minimum")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_minimum
    __xmlattr[AttrMinimum]
  end

  def xmlattr_minimum=(value)
    __xmlattr[AttrMinimum] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackSummaryType
#   bidRetractionFeedbackPeriodArray - EBay::FeedbackPeriodArrayType
#   negativeFeedbackPeriodArray - EBay::FeedbackPeriodArrayType
#   neutralFeedbackPeriodArray - EBay::FeedbackPeriodArrayType
#   positiveFeedbackPeriodArray - EBay::FeedbackPeriodArrayType
#   totalFeedbackPeriodArray - EBay::FeedbackPeriodArrayType
#   neutralCommentCountFromSuspendedUsers - SOAP::SOAPInt
#   uniqueNegativeFeedbackCount - SOAP::SOAPInt
#   uniquePositiveFeedbackCount - SOAP::SOAPInt
#   uniqueNeutralFeedbackCount - SOAP::SOAPInt
#   sellerRatingSummaryArray - EBay::SellerRatingSummaryArrayType
#   sellerRoleMetrics - EBay::SellerRoleMetricsType
#   buyerRoleMetrics - EBay::BuyerRoleMetricsType
class FeedbackSummaryType
  attr_accessor :bidRetractionFeedbackPeriodArray
  attr_accessor :negativeFeedbackPeriodArray
  attr_accessor :neutralFeedbackPeriodArray
  attr_accessor :positiveFeedbackPeriodArray
  attr_accessor :totalFeedbackPeriodArray
  attr_accessor :neutralCommentCountFromSuspendedUsers
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_accessor :uniqueNeutralFeedbackCount
  attr_accessor :sellerRatingSummaryArray
  attr_accessor :sellerRoleMetrics
  attr_accessor :buyerRoleMetrics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidRetractionFeedbackPeriodArray = nil, negativeFeedbackPeriodArray = nil, neutralFeedbackPeriodArray = nil, positiveFeedbackPeriodArray = nil, totalFeedbackPeriodArray = nil, neutralCommentCountFromSuspendedUsers = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil, uniqueNeutralFeedbackCount = nil, sellerRatingSummaryArray = nil, sellerRoleMetrics = nil, buyerRoleMetrics = nil)
    @bidRetractionFeedbackPeriodArray = bidRetractionFeedbackPeriodArray
    @negativeFeedbackPeriodArray = negativeFeedbackPeriodArray
    @neutralFeedbackPeriodArray = neutralFeedbackPeriodArray
    @positiveFeedbackPeriodArray = positiveFeedbackPeriodArray
    @totalFeedbackPeriodArray = totalFeedbackPeriodArray
    @neutralCommentCountFromSuspendedUsers = neutralCommentCountFromSuspendedUsers
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @uniqueNeutralFeedbackCount = uniqueNeutralFeedbackCount
    @sellerRatingSummaryArray = sellerRatingSummaryArray
    @sellerRoleMetrics = sellerRoleMetrics
    @buyerRoleMetrics = buyerRoleMetrics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FeesType
class FeesType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}FlatRateInsuranceRangeCostType
#   flatRateInsuranceRange - EBay::FlatRateInsuranceRangeCodeType
#   insuranceCost - EBay::AmountType
class FlatRateInsuranceRangeCostType
  attr_accessor :flatRateInsuranceRange
  attr_accessor :insuranceCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(flatRateInsuranceRange = nil, insuranceCost = nil)
    @flatRateInsuranceRange = flatRateInsuranceRange
    @insuranceCost = insuranceCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FlatShippingDiscountType
#   discountName - EBay::DiscountNameCodeType
#   discountProfile - EBay::DiscountProfileType
class FlatShippingDiscountType
  attr_accessor :discountName
  attr_accessor :discountProfile
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(discountName = nil, discountProfile = [])
    @discountName = discountName
    @discountProfile = discountProfile
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FlatShippingPreferencesType
#   amountPerAdditionalItem - EBay::AmountType
#   deductionAmountPerAdditionalItem - EBay::AmountType
#   flatRateInsuranceRangeCost - EBay::FlatRateInsuranceRangeCostType
#   flatShippingRateOption - EBay::FlatShippingRateOptionCodeType
#   insuranceOption - EBay::InsuranceOptionCodeType
class FlatShippingPreferencesType
  attr_accessor :amountPerAdditionalItem
  attr_accessor :deductionAmountPerAdditionalItem
  attr_accessor :flatRateInsuranceRangeCost
  attr_accessor :flatShippingRateOption
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(amountPerAdditionalItem = nil, deductionAmountPerAdditionalItem = nil, flatRateInsuranceRangeCost = [], flatShippingRateOption = nil, insuranceOption = nil)
    @amountPerAdditionalItem = amountPerAdditionalItem
    @deductionAmountPerAdditionalItem = deductionAmountPerAdditionalItem
    @flatRateInsuranceRangeCost = flatRateInsuranceRangeCost
    @flatShippingRateOption = flatShippingRateOption
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FreeGalleryPlusEnabledDefinitionType
class FreeGalleryPlusEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}FreePicturePackEnabledDefinitionType
class FreePicturePackEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsRequestContainerType
#   listingFlow - EBay::ListingFlowCodeType
#   item - EBay::ItemType
#   recommendationEngine - EBay::RecommendationEngineCodeType
#   query - SOAP::SOAPString
#   correlationID - SOAP::SOAPString
#   deletedField - SOAP::SOAPString
#   excludeRelationships - SOAP::SOAPBoolean
#   includeConfidence - SOAP::SOAPBoolean
class GetRecommendationsRequestContainerType
  attr_accessor :listingFlow
  attr_accessor :item
  attr_accessor :recommendationEngine
  attr_accessor :query
  attr_accessor :correlationID
  attr_accessor :deletedField
  attr_accessor :excludeRelationships
  attr_accessor :includeConfidence
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingFlow = nil, item = nil, recommendationEngine = [], query = nil, correlationID = nil, deletedField = [], excludeRelationships = nil, includeConfidence = nil)
    @listingFlow = listingFlow
    @item = item
    @recommendationEngine = recommendationEngine
    @query = query
    @correlationID = correlationID
    @deletedField = deletedField
    @excludeRelationships = excludeRelationships
    @includeConfidence = includeConfidence
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GetRecommendationsResponseContainerType
#   listingAnalyzerRecommendations - EBay::ListingAnalyzerRecommendationsType
#   sIFFTASRecommendations - EBay::SIFFTASRecommendationsType
#   pricingRecommendations - EBay::PricingRecommendationsType
#   attributeRecommendations - EBay::AttributeRecommendationsType
#   productRecommendations - EBay::ProductRecommendationsType
#   correlationID - SOAP::SOAPString
#   recommendations - EBay::RecommendationsType
#   productListingDetails - EBay::ProductListingDetailsType
#   title - SOAP::SOAPString
class GetRecommendationsResponseContainerType
  attr_accessor :listingAnalyzerRecommendations
  attr_accessor :sIFFTASRecommendations
  attr_accessor :pricingRecommendations
  attr_accessor :attributeRecommendations
  attr_accessor :productRecommendations
  attr_accessor :correlationID
  attr_accessor :recommendations
  attr_accessor :productListingDetails
  attr_accessor :title
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingAnalyzerRecommendations = nil, sIFFTASRecommendations = nil, pricingRecommendations = nil, attributeRecommendations = nil, productRecommendations = nil, correlationID = nil, recommendations = nil, productListingDetails = nil, title = nil)
    @listingAnalyzerRecommendations = listingAnalyzerRecommendations
    @sIFFTASRecommendations = sIFFTASRecommendations
    @pricingRecommendations = pricingRecommendations
    @attributeRecommendations = attributeRecommendations
    @productRecommendations = productRecommendations
    @correlationID = correlationID
    @recommendations = recommendations
    @productListingDetails = productListingDetails
    @title = title
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}GlobalShippingEnabledDefinitionType
class GlobalShippingEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}Group1MaxFlatShippingCostDefinitionType
class Group1MaxFlatShippingCostDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}Group2MaxFlatShippingCostDefinitionType
class Group2MaxFlatShippingCostDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}Group3MaxFlatShippingCostDefinitionType
class Group3MaxFlatShippingCostDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}HandlingTimeEnabledDefinitionType
class HandlingTimeEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}HistogramEntryType
#   count - SOAP::SOAPInt
#   xmlattr_id - SOAP::SOAPString
#   xmlattr_name - SOAP::SOAPString
class HistogramEntryType
  AttrId = XSD::QName.new(nil, "id")
  AttrName = XSD::QName.new(nil, "name")

  attr_accessor :count
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_id
    __xmlattr[AttrId]
  end

  def xmlattr_id=(value)
    __xmlattr[AttrId] = value
  end

  def xmlattr_name
    __xmlattr[AttrName]
  end

  def xmlattr_name=(value)
    __xmlattr[AttrName] = value
  end

  def initialize(count = nil)
    @count = count
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}HomePageFeaturedEnabledDefinitionType
class HomePageFeaturedEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}INEscrowWorkflowTimelineDefinitionType
class INEscrowWorkflowTimelineDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ISBNEnabledDefinitionType
class ISBNEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ISBNIdentifierEnabledDefinitionType
class ISBNIdentifierEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceDetailsType
#   insuranceFee - EBay::AmountType
#   insuranceOption - EBay::InsuranceOptionCodeType
class InsuranceDetailsType
  attr_accessor :insuranceFee
  attr_accessor :insuranceOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(insuranceFee = nil, insuranceOption = nil)
    @insuranceFee = insuranceFee
    @insuranceOption = insuranceOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}IntegratedMerchantCreditCardInfoType
#   supportedSite - EBay::SiteCodeType
class IntegratedMerchantCreditCardInfoType
  attr_accessor :supportedSite
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(supportedSite = [])
    @supportedSite = supportedSite
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}InternationalShippingServiceOptionsType
#   shippingService - SOAP::SOAPToken
#   shippingServiceCost - EBay::AmountType
#   shippingServiceAdditionalCost - EBay::AmountType
#   shippingServicePriority - SOAP::SOAPInt
#   shipToLocation - SOAP::SOAPString
#   shippingInsuranceCost - EBay::AmountType
#   importCharge - EBay::AmountType
#   shippingServiceCutOffTime - SOAP::SOAPDateTime
class InternationalShippingServiceOptionsType
  attr_accessor :shippingService
  attr_accessor :shippingServiceCost
  attr_accessor :shippingServiceAdditionalCost
  attr_accessor :shippingServicePriority
  attr_accessor :shipToLocation
  attr_accessor :shippingInsuranceCost
  attr_accessor :importCharge
  attr_accessor :shippingServiceCutOffTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingService = nil, shippingServiceCost = nil, shippingServiceAdditionalCost = nil, shippingServicePriority = nil, shipToLocation = [], shippingInsuranceCost = nil, importCharge = nil, shippingServiceCutOffTime = nil)
    @shippingService = shippingService
    @shippingServiceCost = shippingServiceCost
    @shippingServiceAdditionalCost = shippingServiceAdditionalCost
    @shippingServicePriority = shippingServicePriority
    @shipToLocation = shipToLocation
    @shippingInsuranceCost = shippingInsuranceCost
    @importCharge = importCharge
    @shippingServiceCutOffTime = shippingServiceCutOffTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}InventoryFeesType
#   itemID - (any)
#   fee - EBay::FeeType
class InventoryFeesType
  attr_accessor :itemID
  attr_accessor :fee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, fee = [])
    @itemID = itemID
    @fee = fee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}InventoryStatusType
#   sKU - (any)
#   itemID - (any)
#   startPrice - EBay::AmountType
#   quantity - SOAP::SOAPInt
class InventoryStatusType
  attr_accessor :sKU
  attr_accessor :itemID
  attr_accessor :startPrice
  attr_accessor :quantity
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sKU = nil, itemID = nil, startPrice = nil, quantity = nil)
    @sKU = sKU
    @itemID = itemID
    @startPrice = startPrice
    @quantity = quantity
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemArrayType
class ItemArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ItemBestOffersArrayType
#   itemBestOffers - EBay::ItemBestOffersType
class ItemBestOffersArrayType
  attr_accessor :itemBestOffers
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemBestOffers = [])
    @itemBestOffers = itemBestOffers
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemBestOffersType
#   role - EBay::TradingRoleCodeType
#   bestOfferArray - EBay::BestOfferArrayType
#   item - EBay::ItemType
class ItemBestOffersType
  attr_accessor :role
  attr_accessor :bestOfferArray
  attr_accessor :item
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(role = nil, bestOfferArray = nil, item = nil)
    @role = role
    @bestOfferArray = bestOfferArray
    @item = item
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemBidDetailsType
#   itemID - (any)
#   categoryID - SOAP::SOAPString
#   bidCount - SOAP::SOAPInt
#   sellerID - (any)
#   lastBidTime - SOAP::SOAPDateTime
class ItemBidDetailsType
  attr_accessor :itemID
  attr_accessor :categoryID
  attr_accessor :bidCount
  attr_accessor :sellerID
  attr_accessor :lastBidTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, categoryID = nil, bidCount = nil, sellerID = nil, lastBidTime = nil)
    @itemID = itemID
    @categoryID = categoryID
    @bidCount = bidCount
    @sellerID = sellerID
    @lastBidTime = lastBidTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemCompatibilityEnabledDefinitionType
class ItemCompatibilityEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemCompatibilityListType
#   compatibility - EBay::ItemCompatibilityType
#   replaceAll - SOAP::SOAPBoolean
class ItemCompatibilityListType
  attr_accessor :compatibility
  attr_accessor :replaceAll
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(compatibility = [], replaceAll = nil)
    @compatibility = compatibility
    @replaceAll = replaceAll
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemCompatibilityType
#   delete - SOAP::SOAPBoolean
#   nameValueList - EBay::NameValueListType
#   compatibilityNotes - SOAP::SOAPString
class ItemCompatibilityType
  attr_accessor :delete
  attr_accessor :nameValueList
  attr_accessor :compatibilityNotes
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(delete = nil, nameValueList = [], compatibilityNotes = nil)
    @delete = delete
    @nameValueList = nameValueList
    @compatibilityNotes = compatibilityNotes
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemIDArrayType
#   itemID - (any)
class ItemIDArrayType
  attr_accessor :itemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = [])
    @itemID = itemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemListCustomizationType
#   include - SOAP::SOAPBoolean
#   listingType - EBay::ListingTypeCodeType
#   sort - EBay::ItemSortTypeCodeType
#   durationInDays - SOAP::SOAPInt
#   includeNotes - SOAP::SOAPBoolean
#   pagination - EBay::PaginationType
#   orderStatusFilter - EBay::OrderStatusFilterCodeType
class ItemListCustomizationType
  attr_accessor :include
  attr_accessor :listingType
  attr_accessor :sort
  attr_accessor :durationInDays
  attr_accessor :includeNotes
  attr_accessor :pagination
  attr_accessor :orderStatusFilter
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(include = nil, listingType = nil, sort = nil, durationInDays = nil, includeNotes = nil, pagination = nil, orderStatusFilter = nil)
    @include = include
    @listingType = listingType
    @sort = sort
    @durationInDays = durationInDays
    @includeNotes = includeNotes
    @pagination = pagination
    @orderStatusFilter = orderStatusFilter
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemPolicyViolationType
#   policyID - SOAP::SOAPLong
#   policyText - SOAP::SOAPString
class ItemPolicyViolationType
  attr_accessor :policyID
  attr_accessor :policyText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(policyID = nil, policyText = nil)
    @policyID = policyID
    @policyText = policyText
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemRatingDetailArrayType
class ItemRatingDetailArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ItemRatingDetailsType
#   ratingDetail - EBay::FeedbackRatingDetailCodeType
#   rating - SOAP::SOAPInt
class ItemRatingDetailsType
  attr_accessor :ratingDetail
  attr_accessor :rating
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(ratingDetail = nil, rating = nil)
    @ratingDetail = ratingDetail
    @rating = rating
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemSpecificDetailsType
#   maxItemSpecificsPerItem - SOAP::SOAPInt
#   maxValuesPerName - SOAP::SOAPInt
#   maxCharactersPerValue - SOAP::SOAPInt
#   maxCharactersPerName - SOAP::SOAPInt
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class ItemSpecificDetailsType
  attr_accessor :maxItemSpecificsPerItem
  attr_accessor :maxValuesPerName
  attr_accessor :maxCharactersPerValue
  attr_accessor :maxCharactersPerName
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxItemSpecificsPerItem = nil, maxValuesPerName = nil, maxCharactersPerValue = nil, maxCharactersPerName = nil, detailVersion = nil, updateTime = nil)
    @maxItemSpecificsPerItem = maxItemSpecificsPerItem
    @maxValuesPerName = maxValuesPerName
    @maxCharactersPerValue = maxCharactersPerValue
    @maxCharactersPerName = maxCharactersPerName
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemSpecificsEnabledDefinitionType
class ItemSpecificsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemTotalsType
#   totalQuantity - SOAP::SOAPLong
#   totalValue - EBay::AmountType
class ItemTotalsType
  attr_accessor :totalQuantity
  attr_accessor :totalValue

  def initialize(totalQuantity = nil, totalValue = nil)
    @totalQuantity = totalQuantity
    @totalValue = totalValue
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemTransactionIDArrayType
class ItemTransactionIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ItemTransactionIDType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   sKU - (any)
#   orderLineItemID - SOAP::SOAPString
class ItemTransactionIDType
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :sKU
  attr_accessor :orderLineItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, transactionID = nil, sKU = nil, orderLineItemID = nil)
    @itemID = itemID
    @transactionID = transactionID
    @sKU = sKU
    @orderLineItemID = orderLineItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ItemType
#   applicationData - SOAP::SOAPString
#   attributeSetArray - EBay::AttributeSetArrayType
#   attributeArray - EBay::AttributeArrayType
#   lookupAttributeArray - EBay::LookupAttributeArrayType
#   autoPay - SOAP::SOAPBoolean
#   paymentDetails - EBay::PaymentDetailsType
#   biddingDetails - EBay::BiddingDetailsType
#   motorsGermanySearchable - SOAP::SOAPBoolean
#   buyerProtection - EBay::BuyerProtectionCodeType
#   buyItNowPrice - EBay::AmountType
#   categoryMappingAllowed - SOAP::SOAPBoolean
#   charity - EBay::CharityType
#   country - EBay::CountryCodeType
#   crossPromotion - EBay::CrossPromotionsType
#   currency - EBay::CurrencyCodeType
#   description - SOAP::SOAPString
#   descriptionReviseMode - EBay::DescriptionReviseModeCodeType
#   distance - EBay::DistanceType
#   giftIcon - SOAP::SOAPInt
#   giftServices - EBay::GiftServicesCodeType
#   hitCounter - EBay::HitCounterCodeType
#   itemID - (any)
#   listingDetails - EBay::ListingDetailsType
#   listingDesigner - EBay::ListingDesignerType
#   listingDuration - SOAP::SOAPToken
#   listingEnhancement - EBay::ListingEnhancementsCodeType
#   listingType - EBay::ListingTypeCodeType
#   location - SOAP::SOAPString
#   lotSize - SOAP::SOAPInt
#   partnerCode - SOAP::SOAPString
#   partnerName - SOAP::SOAPString
#   paymentMethods - EBay::BuyerPaymentMethodCodeType
#   payPalEmailAddress - SOAP::SOAPString
#   primaryCategory - EBay::CategoryType
#   privateListing - SOAP::SOAPBoolean
#   productListingDetails - EBay::ProductListingDetailsType
#   quantity - SOAP::SOAPInt
#   privateNotes - SOAP::SOAPString
#   regionID - SOAP::SOAPString
#   relistLink - SOAP::SOAPBoolean
#   reservePrice - EBay::AmountType
#   reviseStatus - EBay::ReviseStatusType
#   scheduleTime - SOAP::SOAPDateTime
#   secondaryCategory - EBay::CategoryType
#   freeAddedCategory - EBay::CategoryType
#   seller - EBay::UserType
#   sellingStatus - EBay::SellingStatusType
#   shippingDetails - EBay::ShippingDetailsType
#   shipToLocations - SOAP::SOAPString
#   site - EBay::SiteCodeType
#   startPrice - EBay::AmountType
#   storefront - EBay::StorefrontType
#   subTitle - SOAP::SOAPString
#   timeLeft - SOAP::SOAPDuration
#   title - SOAP::SOAPString
#   uUID - (any)
#   vATDetails - EBay::VATDetailsType
#   sellerVacationNote - SOAP::SOAPString
#   watchCount - SOAP::SOAPLong
#   hitCount - SOAP::SOAPLong
#   disableBuyerRequirements - SOAP::SOAPBoolean
#   bestOfferDetails - EBay::BestOfferDetailsType
#   locationDefaulted - SOAP::SOAPBoolean
#   thirdPartyCheckout - SOAP::SOAPBoolean
#   useTaxTable - SOAP::SOAPBoolean
#   getItFast - SOAP::SOAPBoolean
#   buyerResponsibleForShipping - SOAP::SOAPBoolean
#   limitedWarrantyEligible - SOAP::SOAPBoolean
#   eBayNotes - SOAP::SOAPString
#   questionCount - SOAP::SOAPLong
#   relisted - SOAP::SOAPBoolean
#   quantityAvailable - SOAP::SOAPInt
#   sKU - (any)
#   categoryBasedAttributesPrefill - SOAP::SOAPBoolean
#   searchDetails - EBay::SearchDetailsType
#   postalCode - SOAP::SOAPString
#   shippingTermsInDescription - SOAP::SOAPBoolean
#   externalProductID - EBay::ExternalProductIDType
#   sellerInventoryID - SOAP::SOAPString
#   pictureDetails - EBay::PictureDetailsType
#   dispatchTimeMax - SOAP::SOAPInt
#   skypeEnabled - SOAP::SOAPBoolean
#   skypeID - SOAP::SOAPString
#   skypeContactOption - EBay::SkypeContactOptionCodeType
#   bestOfferEnabled - SOAP::SOAPBoolean
#   localListing - SOAP::SOAPBoolean
#   thirdPartyCheckoutIntegration - SOAP::SOAPBoolean
#   listingCheckoutRedirectPreference - EBay::ListingCheckoutRedirectPreferenceType
#   sellerContactDetails - EBay::AddressType
#   totalQuestionCount - SOAP::SOAPLong
#   proxyItem - SOAP::SOAPBoolean
#   extendedSellerContactDetails - EBay::ExtendedContactDetailsType
#   leadCount - SOAP::SOAPInt
#   newLeadCount - SOAP::SOAPInt
#   itemSpecifics - EBay::NameValueListArrayType
#   groupCategoryID - SOAP::SOAPString
#   classifiedAdPayPerLeadFee - EBay::AmountType
#   bidGroupItem - SOAP::SOAPBoolean
#   applyBuyerProtection - EBay::BuyerProtectionDetailsType
#   listingSubtype2 - EBay::ListingSubtypeCodeType
#   mechanicalCheckAccepted - SOAP::SOAPBoolean
#   updateSellerInfo - SOAP::SOAPBoolean
#   updateReturnPolicy - SOAP::SOAPBoolean
#   itemPolicyViolation - EBay::ItemPolicyViolationType
#   crossBorderTrade - SOAP::SOAPString
#   businessSellerDetails - EBay::BusinessSellerDetailsType
#   buyerGuaranteePrice - EBay::AmountType
#   buyerRequirementDetails - EBay::BuyerRequirementDetailsType
#   returnPolicy - EBay::ReturnPolicyType
#   paymentAllowedSite - EBay::SiteCodeType
#   inventoryTrackingMethod - EBay::InventoryTrackingMethodCodeType
#   integratedMerchantCreditCardEnabled - SOAP::SOAPBoolean
#   variations - EBay::VariationsType
#   itemCompatibilityList - EBay::ItemCompatibilityListType
#   itemCompatibilityCount - SOAP::SOAPInt
#   conditionID - SOAP::SOAPInt
#   conditionDescription - SOAP::SOAPString
#   conditionDisplayName - SOAP::SOAPString
#   taxCategory - SOAP::SOAPString
#   quantityAvailableHint - EBay::QuantityAvailableHintCodeType
#   quantityThreshold - SOAP::SOAPInt
#   postCheckoutExperienceEnabled - SOAP::SOAPBoolean
#   discountPriceInfo - EBay::DiscountPriceInfoType
#   useRecommendedProduct - SOAP::SOAPBoolean
#   sellerProvidedTitle - SOAP::SOAPString
#   vIN - SOAP::SOAPString
#   vINLink - SOAP::SOAPString
#   vRM - SOAP::SOAPString
#   vRMLink - SOAP::SOAPString
#   quantityInfo - EBay::QuantityInfoType
#   sellerProfiles - EBay::SellerProfilesType
#   shippingServiceCostOverrideList - EBay::ShippingServiceCostOverrideListType
#   shippingPackageDetails - EBay::ShipPackageDetailsType
#   topRatedListing - SOAP::SOAPBoolean
#   quantityRestrictionPerBuyer - EBay::QuantityRestrictionPerBuyerInfoType
#   floorPrice - EBay::AmountType
#   ceilingPrice - EBay::AmountType
#   isIntermediatedShippingEligible - SOAP::SOAPBoolean
#   unitInfo - EBay::UnitInfoType
#   relistParentID - SOAP::SOAPLong
#   conditionDefinition - SOAP::SOAPString
#   hideFromSearch - SOAP::SOAPBoolean
#   reasonHideFromSearch - EBay::ReasonHideFromSearchCodeType
#   includeRecommendations - SOAP::SOAPBoolean
#   pickupInStoreDetails - EBay::PickupInStoreDetailsType
#   eBayNowEligible - SOAP::SOAPBoolean
#   eBayNowAvailable - SOAP::SOAPBoolean
#   ignoreQuantity - SOAP::SOAPBoolean
#   availableForPickupDropOff - SOAP::SOAPBoolean
#   eligibleForPickupDropOff - SOAP::SOAPBoolean
#   liveAuction - SOAP::SOAPBoolean
class ItemType
  attr_accessor :applicationData
  attr_accessor :attributeSetArray
  attr_accessor :attributeArray
  attr_accessor :lookupAttributeArray
  attr_accessor :autoPay
  attr_accessor :paymentDetails
  attr_accessor :biddingDetails
  attr_accessor :motorsGermanySearchable
  attr_accessor :buyerProtection
  attr_accessor :buyItNowPrice
  attr_accessor :categoryMappingAllowed
  attr_accessor :charity
  attr_accessor :country
  attr_accessor :crossPromotion
  attr_accessor :currency
  attr_accessor :description
  attr_accessor :descriptionReviseMode
  attr_accessor :distance
  attr_accessor :giftIcon
  attr_accessor :giftServices
  attr_accessor :hitCounter
  attr_accessor :itemID
  attr_accessor :listingDetails
  attr_accessor :listingDesigner
  attr_accessor :listingDuration
  attr_accessor :listingEnhancement
  attr_accessor :listingType
  attr_accessor :location
  attr_accessor :lotSize
  attr_accessor :partnerCode
  attr_accessor :partnerName
  attr_accessor :paymentMethods
  attr_accessor :payPalEmailAddress
  attr_accessor :primaryCategory
  attr_accessor :privateListing
  attr_accessor :productListingDetails
  attr_accessor :quantity
  attr_accessor :privateNotes
  attr_accessor :regionID
  attr_accessor :relistLink
  attr_accessor :reservePrice
  attr_accessor :reviseStatus
  attr_accessor :scheduleTime
  attr_accessor :secondaryCategory
  attr_accessor :freeAddedCategory
  attr_accessor :seller
  attr_accessor :sellingStatus
  attr_accessor :shippingDetails
  attr_accessor :shipToLocations
  attr_accessor :site
  attr_accessor :startPrice
  attr_accessor :storefront
  attr_accessor :subTitle
  attr_accessor :timeLeft
  attr_accessor :title
  attr_accessor :uUID
  attr_accessor :vATDetails
  attr_accessor :sellerVacationNote
  attr_accessor :watchCount
  attr_accessor :hitCount
  attr_accessor :disableBuyerRequirements
  attr_accessor :bestOfferDetails
  attr_accessor :locationDefaulted
  attr_accessor :thirdPartyCheckout
  attr_accessor :useTaxTable
  attr_accessor :getItFast
  attr_accessor :buyerResponsibleForShipping
  attr_accessor :limitedWarrantyEligible
  attr_accessor :eBayNotes
  attr_accessor :questionCount
  attr_accessor :relisted
  attr_accessor :quantityAvailable
  attr_accessor :sKU
  attr_accessor :categoryBasedAttributesPrefill
  attr_accessor :searchDetails
  attr_accessor :postalCode
  attr_accessor :shippingTermsInDescription
  attr_accessor :externalProductID
  attr_accessor :sellerInventoryID
  attr_accessor :pictureDetails
  attr_accessor :dispatchTimeMax
  attr_accessor :skypeEnabled
  attr_accessor :skypeID
  attr_accessor :skypeContactOption
  attr_accessor :bestOfferEnabled
  attr_accessor :localListing
  attr_accessor :thirdPartyCheckoutIntegration
  attr_accessor :listingCheckoutRedirectPreference
  attr_accessor :sellerContactDetails
  attr_accessor :totalQuestionCount
  attr_accessor :proxyItem
  attr_accessor :extendedSellerContactDetails
  attr_accessor :leadCount
  attr_accessor :newLeadCount
  attr_accessor :itemSpecifics
  attr_accessor :groupCategoryID
  attr_accessor :classifiedAdPayPerLeadFee
  attr_accessor :bidGroupItem
  attr_accessor :applyBuyerProtection
  attr_accessor :listingSubtype2
  attr_accessor :mechanicalCheckAccepted
  attr_accessor :updateSellerInfo
  attr_accessor :updateReturnPolicy
  attr_accessor :itemPolicyViolation
  attr_accessor :crossBorderTrade
  attr_accessor :businessSellerDetails
  attr_accessor :buyerGuaranteePrice
  attr_accessor :buyerRequirementDetails
  attr_accessor :returnPolicy
  attr_accessor :paymentAllowedSite
  attr_accessor :inventoryTrackingMethod
  attr_accessor :integratedMerchantCreditCardEnabled
  attr_accessor :variations
  attr_accessor :itemCompatibilityList
  attr_accessor :itemCompatibilityCount
  attr_accessor :conditionID
  attr_accessor :conditionDescription
  attr_accessor :conditionDisplayName
  attr_accessor :taxCategory
  attr_accessor :quantityAvailableHint
  attr_accessor :quantityThreshold
  attr_accessor :postCheckoutExperienceEnabled
  attr_accessor :discountPriceInfo
  attr_accessor :useRecommendedProduct
  attr_accessor :sellerProvidedTitle
  attr_accessor :vIN
  attr_accessor :vINLink
  attr_accessor :vRM
  attr_accessor :vRMLink
  attr_accessor :quantityInfo
  attr_accessor :sellerProfiles
  attr_accessor :shippingServiceCostOverrideList
  attr_accessor :shippingPackageDetails
  attr_accessor :topRatedListing
  attr_accessor :quantityRestrictionPerBuyer
  attr_accessor :floorPrice
  attr_accessor :ceilingPrice
  attr_accessor :isIntermediatedShippingEligible
  attr_accessor :unitInfo
  attr_accessor :relistParentID
  attr_accessor :conditionDefinition
  attr_accessor :hideFromSearch
  attr_accessor :reasonHideFromSearch
  attr_accessor :includeRecommendations
  attr_accessor :pickupInStoreDetails
  attr_accessor :eBayNowEligible
  attr_accessor :eBayNowAvailable
  attr_accessor :ignoreQuantity
  attr_accessor :availableForPickupDropOff
  attr_accessor :eligibleForPickupDropOff
  attr_accessor :liveAuction
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(applicationData = nil, attributeSetArray = nil, attributeArray = nil, lookupAttributeArray = nil, autoPay = nil, paymentDetails = nil, biddingDetails = nil, motorsGermanySearchable = nil, buyerProtection = nil, buyItNowPrice = nil, categoryMappingAllowed = nil, charity = nil, country = nil, crossPromotion = nil, currency = nil, description = nil, descriptionReviseMode = nil, distance = nil, giftIcon = nil, giftServices = [], hitCounter = nil, itemID = nil, listingDetails = nil, listingDesigner = nil, listingDuration = nil, listingEnhancement = [], listingType = nil, location = nil, lotSize = nil, partnerCode = nil, partnerName = nil, paymentMethods = [], payPalEmailAddress = nil, primaryCategory = nil, privateListing = nil, productListingDetails = nil, quantity = nil, privateNotes = nil, regionID = nil, relistLink = nil, reservePrice = nil, reviseStatus = nil, scheduleTime = nil, secondaryCategory = nil, freeAddedCategory = nil, seller = nil, sellingStatus = nil, shippingDetails = nil, shipToLocations = [], site = nil, startPrice = nil, storefront = nil, subTitle = nil, timeLeft = nil, title = nil, uUID = nil, vATDetails = nil, sellerVacationNote = nil, watchCount = nil, hitCount = nil, disableBuyerRequirements = nil, bestOfferDetails = nil, locationDefaulted = nil, thirdPartyCheckout = nil, useTaxTable = nil, getItFast = nil, buyerResponsibleForShipping = nil, limitedWarrantyEligible = nil, eBayNotes = nil, questionCount = nil, relisted = nil, quantityAvailable = nil, sKU = nil, categoryBasedAttributesPrefill = nil, searchDetails = nil, postalCode = nil, shippingTermsInDescription = nil, externalProductID = nil, sellerInventoryID = nil, pictureDetails = nil, dispatchTimeMax = nil, skypeEnabled = nil, skypeID = nil, skypeContactOption = [], bestOfferEnabled = nil, localListing = nil, thirdPartyCheckoutIntegration = nil, listingCheckoutRedirectPreference = nil, sellerContactDetails = nil, totalQuestionCount = nil, proxyItem = nil, extendedSellerContactDetails = nil, leadCount = nil, newLeadCount = nil, itemSpecifics = nil, groupCategoryID = nil, classifiedAdPayPerLeadFee = nil, bidGroupItem = nil, applyBuyerProtection = nil, listingSubtype2 = nil, mechanicalCheckAccepted = nil, updateSellerInfo = nil, updateReturnPolicy = nil, itemPolicyViolation = nil, crossBorderTrade = [], businessSellerDetails = nil, buyerGuaranteePrice = nil, buyerRequirementDetails = nil, returnPolicy = nil, paymentAllowedSite = [], inventoryTrackingMethod = nil, integratedMerchantCreditCardEnabled = nil, variations = nil, itemCompatibilityList = nil, itemCompatibilityCount = nil, conditionID = nil, conditionDescription = nil, conditionDisplayName = nil, taxCategory = nil, quantityAvailableHint = nil, quantityThreshold = nil, postCheckoutExperienceEnabled = nil, discountPriceInfo = nil, useRecommendedProduct = nil, sellerProvidedTitle = nil, vIN = nil, vINLink = nil, vRM = nil, vRMLink = nil, quantityInfo = nil, sellerProfiles = nil, shippingServiceCostOverrideList = nil, shippingPackageDetails = nil, topRatedListing = nil, quantityRestrictionPerBuyer = nil, floorPrice = nil, ceilingPrice = nil, isIntermediatedShippingEligible = nil, unitInfo = nil, relistParentID = nil, conditionDefinition = nil, hideFromSearch = nil, reasonHideFromSearch = nil, includeRecommendations = nil, pickupInStoreDetails = nil, eBayNowEligible = nil, eBayNowAvailable = nil, ignoreQuantity = nil, availableForPickupDropOff = nil, eligibleForPickupDropOff = nil, liveAuction = nil)
    @applicationData = applicationData
    @attributeSetArray = attributeSetArray
    @attributeArray = attributeArray
    @lookupAttributeArray = lookupAttributeArray
    @autoPay = autoPay
    @paymentDetails = paymentDetails
    @biddingDetails = biddingDetails
    @motorsGermanySearchable = motorsGermanySearchable
    @buyerProtection = buyerProtection
    @buyItNowPrice = buyItNowPrice
    @categoryMappingAllowed = categoryMappingAllowed
    @charity = charity
    @country = country
    @crossPromotion = crossPromotion
    @currency = currency
    @description = description
    @descriptionReviseMode = descriptionReviseMode
    @distance = distance
    @giftIcon = giftIcon
    @giftServices = giftServices
    @hitCounter = hitCounter
    @itemID = itemID
    @listingDetails = listingDetails
    @listingDesigner = listingDesigner
    @listingDuration = listingDuration
    @listingEnhancement = listingEnhancement
    @listingType = listingType
    @location = location
    @lotSize = lotSize
    @partnerCode = partnerCode
    @partnerName = partnerName
    @paymentMethods = paymentMethods
    @payPalEmailAddress = payPalEmailAddress
    @primaryCategory = primaryCategory
    @privateListing = privateListing
    @productListingDetails = productListingDetails
    @quantity = quantity
    @privateNotes = privateNotes
    @regionID = regionID
    @relistLink = relistLink
    @reservePrice = reservePrice
    @reviseStatus = reviseStatus
    @scheduleTime = scheduleTime
    @secondaryCategory = secondaryCategory
    @freeAddedCategory = freeAddedCategory
    @seller = seller
    @sellingStatus = sellingStatus
    @shippingDetails = shippingDetails
    @shipToLocations = shipToLocations
    @site = site
    @startPrice = startPrice
    @storefront = storefront
    @subTitle = subTitle
    @timeLeft = timeLeft
    @title = title
    @uUID = uUID
    @vATDetails = vATDetails
    @sellerVacationNote = sellerVacationNote
    @watchCount = watchCount
    @hitCount = hitCount
    @disableBuyerRequirements = disableBuyerRequirements
    @bestOfferDetails = bestOfferDetails
    @locationDefaulted = locationDefaulted
    @thirdPartyCheckout = thirdPartyCheckout
    @useTaxTable = useTaxTable
    @getItFast = getItFast
    @buyerResponsibleForShipping = buyerResponsibleForShipping
    @limitedWarrantyEligible = limitedWarrantyEligible
    @eBayNotes = eBayNotes
    @questionCount = questionCount
    @relisted = relisted
    @quantityAvailable = quantityAvailable
    @sKU = sKU
    @categoryBasedAttributesPrefill = categoryBasedAttributesPrefill
    @searchDetails = searchDetails
    @postalCode = postalCode
    @shippingTermsInDescription = shippingTermsInDescription
    @externalProductID = externalProductID
    @sellerInventoryID = sellerInventoryID
    @pictureDetails = pictureDetails
    @dispatchTimeMax = dispatchTimeMax
    @skypeEnabled = skypeEnabled
    @skypeID = skypeID
    @skypeContactOption = skypeContactOption
    @bestOfferEnabled = bestOfferEnabled
    @localListing = localListing
    @thirdPartyCheckoutIntegration = thirdPartyCheckoutIntegration
    @listingCheckoutRedirectPreference = listingCheckoutRedirectPreference
    @sellerContactDetails = sellerContactDetails
    @totalQuestionCount = totalQuestionCount
    @proxyItem = proxyItem
    @extendedSellerContactDetails = extendedSellerContactDetails
    @leadCount = leadCount
    @newLeadCount = newLeadCount
    @itemSpecifics = itemSpecifics
    @groupCategoryID = groupCategoryID
    @classifiedAdPayPerLeadFee = classifiedAdPayPerLeadFee
    @bidGroupItem = bidGroupItem
    @applyBuyerProtection = applyBuyerProtection
    @listingSubtype2 = listingSubtype2
    @mechanicalCheckAccepted = mechanicalCheckAccepted
    @updateSellerInfo = updateSellerInfo
    @updateReturnPolicy = updateReturnPolicy
    @itemPolicyViolation = itemPolicyViolation
    @crossBorderTrade = crossBorderTrade
    @businessSellerDetails = businessSellerDetails
    @buyerGuaranteePrice = buyerGuaranteePrice
    @buyerRequirementDetails = buyerRequirementDetails
    @returnPolicy = returnPolicy
    @paymentAllowedSite = paymentAllowedSite
    @inventoryTrackingMethod = inventoryTrackingMethod
    @integratedMerchantCreditCardEnabled = integratedMerchantCreditCardEnabled
    @variations = variations
    @itemCompatibilityList = itemCompatibilityList
    @itemCompatibilityCount = itemCompatibilityCount
    @conditionID = conditionID
    @conditionDescription = conditionDescription
    @conditionDisplayName = conditionDisplayName
    @taxCategory = taxCategory
    @quantityAvailableHint = quantityAvailableHint
    @quantityThreshold = quantityThreshold
    @postCheckoutExperienceEnabled = postCheckoutExperienceEnabled
    @discountPriceInfo = discountPriceInfo
    @useRecommendedProduct = useRecommendedProduct
    @sellerProvidedTitle = sellerProvidedTitle
    @vIN = vIN
    @vINLink = vINLink
    @vRM = vRM
    @vRMLink = vRMLink
    @quantityInfo = quantityInfo
    @sellerProfiles = sellerProfiles
    @shippingServiceCostOverrideList = shippingServiceCostOverrideList
    @shippingPackageDetails = shippingPackageDetails
    @topRatedListing = topRatedListing
    @quantityRestrictionPerBuyer = quantityRestrictionPerBuyer
    @floorPrice = floorPrice
    @ceilingPrice = ceilingPrice
    @isIntermediatedShippingEligible = isIntermediatedShippingEligible
    @unitInfo = unitInfo
    @relistParentID = relistParentID
    @conditionDefinition = conditionDefinition
    @hideFromSearch = hideFromSearch
    @reasonHideFromSearch = reasonHideFromSearch
    @includeRecommendations = includeRecommendations
    @pickupInStoreDetails = pickupInStoreDetails
    @eBayNowEligible = eBayNowEligible
    @eBayNowAvailable = eBayNowAvailable
    @ignoreQuantity = ignoreQuantity
    @availableForPickupDropOff = availableForPickupDropOff
    @eligibleForPickupDropOff = eligibleForPickupDropOff
    @liveAuction = liveAuction
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LabelType
#   name - SOAP::SOAPString
#   xmlattr_visible - SOAP::SOAPBoolean
class LabelType
  AttrVisible = XSD::QName.new(nil, "visible")

  attr_accessor :name
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_visible
    __xmlattr[AttrVisible]
  end

  def xmlattr_visible=(value)
    __xmlattr[AttrVisible] = value
  end

  def initialize(name = nil)
    @name = name
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}LineItemType
#   quantity - SOAP::SOAPInt
#   countryOfOrigin - SOAP::SOAPString
#   description - SOAP::SOAPString
#   itemID - (any)
#   transactionID - SOAP::SOAPString
class LineItemType
  attr_accessor :quantity
  attr_accessor :countryOfOrigin
  attr_accessor :description
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(quantity = nil, countryOfOrigin = nil, description = nil, itemID = nil, transactionID = nil)
    @quantity = quantity
    @countryOfOrigin = countryOfOrigin
    @description = description
    @itemID = itemID
    @transactionID = transactionID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingAnalyzerRecommendationsType
#   listingTipArray - EBay::ListingTipArrayType
class ListingAnalyzerRecommendationsType
  attr_accessor :listingTipArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipArray = nil)
    @listingTipArray = listingTipArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingCheckoutRedirectPreferenceType
#   proStoresStoreName - SOAP::SOAPString
#   sellerThirdPartyUsername - SOAP::SOAPString
class ListingCheckoutRedirectPreferenceType
  attr_accessor :proStoresStoreName
  attr_accessor :sellerThirdPartyUsername
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(proStoresStoreName = nil, sellerThirdPartyUsername = nil)
    @proStoresStoreName = proStoresStoreName
    @sellerThirdPartyUsername = sellerThirdPartyUsername
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDesignerType
#   layoutID - SOAP::SOAPInt
#   optimalPictureSize - SOAP::SOAPBoolean
#   themeID - SOAP::SOAPInt
class ListingDesignerType
  attr_accessor :layoutID
  attr_accessor :optimalPictureSize
  attr_accessor :themeID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(layoutID = nil, optimalPictureSize = nil, themeID = nil)
    @layoutID = layoutID
    @optimalPictureSize = optimalPictureSize
    @themeID = themeID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDetailsType
#   adult - SOAP::SOAPBoolean
#   bindingAuction - SOAP::SOAPBoolean
#   checkoutEnabled - SOAP::SOAPBoolean
#   convertedBuyItNowPrice - EBay::AmountType
#   convertedStartPrice - EBay::AmountType
#   convertedReservePrice - EBay::AmountType
#   hasReservePrice - SOAP::SOAPBoolean
#   relistedItemID - (any)
#   secondChanceOriginalItemID - (any)
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   viewItemURL - SOAP::SOAPAnyURI
#   hasUnansweredQuestions - SOAP::SOAPBoolean
#   hasPublicMessages - SOAP::SOAPBoolean
#   buyItNowAvailable - SOAP::SOAPBoolean
#   sellerBusinessType - EBay::SellerBusinessCodeType
#   minimumBestOfferPrice - EBay::AmountType
#   minimumBestOfferMessage - SOAP::SOAPString
#   localListingDistance - SOAP::SOAPString
#   tCROriginalItemID - (any)
#   viewItemURLForNaturalSearch - SOAP::SOAPAnyURI
#   payPerLeadEnabled - SOAP::SOAPBoolean
#   bestOfferAutoAcceptPrice - EBay::AmountType
#   endingReason - EBay::EndReasonCodeType
class ListingDetailsType
  attr_accessor :adult
  attr_accessor :bindingAuction
  attr_accessor :checkoutEnabled
  attr_accessor :convertedBuyItNowPrice
  attr_accessor :convertedStartPrice
  attr_accessor :convertedReservePrice
  attr_accessor :hasReservePrice
  attr_accessor :relistedItemID
  attr_accessor :secondChanceOriginalItemID
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :viewItemURL
  attr_accessor :hasUnansweredQuestions
  attr_accessor :hasPublicMessages
  attr_accessor :buyItNowAvailable
  attr_accessor :sellerBusinessType
  attr_accessor :minimumBestOfferPrice
  attr_accessor :minimumBestOfferMessage
  attr_accessor :localListingDistance
  attr_accessor :tCROriginalItemID
  attr_accessor :viewItemURLForNaturalSearch
  attr_accessor :payPerLeadEnabled
  attr_accessor :bestOfferAutoAcceptPrice
  attr_accessor :endingReason
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(adult = nil, bindingAuction = nil, checkoutEnabled = nil, convertedBuyItNowPrice = nil, convertedStartPrice = nil, convertedReservePrice = nil, hasReservePrice = nil, relistedItemID = nil, secondChanceOriginalItemID = nil, startTime = nil, endTime = nil, viewItemURL = nil, hasUnansweredQuestions = nil, hasPublicMessages = nil, buyItNowAvailable = nil, sellerBusinessType = nil, minimumBestOfferPrice = nil, minimumBestOfferMessage = nil, localListingDistance = nil, tCROriginalItemID = nil, viewItemURLForNaturalSearch = nil, payPerLeadEnabled = nil, bestOfferAutoAcceptPrice = nil, endingReason = nil)
    @adult = adult
    @bindingAuction = bindingAuction
    @checkoutEnabled = checkoutEnabled
    @convertedBuyItNowPrice = convertedBuyItNowPrice
    @convertedStartPrice = convertedStartPrice
    @convertedReservePrice = convertedReservePrice
    @hasReservePrice = hasReservePrice
    @relistedItemID = relistedItemID
    @secondChanceOriginalItemID = secondChanceOriginalItemID
    @startTime = startTime
    @endTime = endTime
    @viewItemURL = viewItemURL
    @hasUnansweredQuestions = hasUnansweredQuestions
    @hasPublicMessages = hasPublicMessages
    @buyItNowAvailable = buyItNowAvailable
    @sellerBusinessType = sellerBusinessType
    @minimumBestOfferPrice = minimumBestOfferPrice
    @minimumBestOfferMessage = minimumBestOfferMessage
    @localListingDistance = localListingDistance
    @tCROriginalItemID = tCROriginalItemID
    @viewItemURLForNaturalSearch = viewItemURLForNaturalSearch
    @payPerLeadEnabled = payPerLeadEnabled
    @bestOfferAutoAcceptPrice = bestOfferAutoAcceptPrice
    @endingReason = endingReason
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationDefinitionType
#   duration - SOAP::SOAPToken
#   xmlattr_durationSetID - SOAP::SOAPInt
class ListingDurationDefinitionType
  AttrDurationSetID = XSD::QName.new(nil, "durationSetID")

  attr_accessor :duration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_durationSetID
    __xmlattr[AttrDurationSetID]
  end

  def xmlattr_durationSetID=(value)
    __xmlattr[AttrDurationSetID] = value
  end

  def initialize(duration = [])
    @duration = duration
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationDefinitionsType
#   listingDuration - EBay::ListingDurationDefinitionType
#   xmlattr_Version - SOAP::SOAPInt
class ListingDurationDefinitionsType
  AttrVersion = XSD::QName.new(nil, "Version")

  attr_accessor :listingDuration

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_Version
    __xmlattr[AttrVersion]
  end

  def xmlattr_Version=(value)
    __xmlattr[AttrVersion] = value
  end

  def initialize(listingDuration = [])
    @listingDuration = listingDuration
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationReferenceType
#   xmlattr_type - SOAP::SOAPToken
class ListingDurationReferenceType < ::String
  AttrType = XSD::QName.new(nil, "type")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingEnhancementDurationDefinitionType
class ListingEnhancementDurationDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingEnhancementDurationReferenceType
#   duration - SOAP::SOAPToken
class ListingEnhancementDurationReferenceType
  attr_accessor :duration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(duration = [])
    @duration = duration
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingFeatureDetailsType
#   boldTitle - EBay::BoldTitleCodeType
#   border - EBay::BorderCodeType
#   highlight - EBay::HighlightCodeType
#   giftIcon - EBay::GiftIconCodeType
#   homePageFeatured - EBay::HomePageFeaturedCodeType
#   featuredFirst - EBay::FeaturedFirstCodeType
#   featuredPlus - EBay::FeaturedPlusCodeType
#   proPack - EBay::ProPackCodeType
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class ListingFeatureDetailsType
  attr_accessor :boldTitle
  attr_accessor :border
  attr_accessor :highlight
  attr_accessor :giftIcon
  attr_accessor :homePageFeatured
  attr_accessor :featuredFirst
  attr_accessor :featuredPlus
  attr_accessor :proPack
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(boldTitle = nil, border = nil, highlight = nil, giftIcon = nil, homePageFeatured = nil, featuredFirst = nil, featuredPlus = nil, proPack = nil, detailVersion = nil, updateTime = nil)
    @boldTitle = boldTitle
    @border = border
    @highlight = highlight
    @giftIcon = giftIcon
    @homePageFeatured = homePageFeatured
    @featuredFirst = featuredFirst
    @featuredPlus = featuredPlus
    @proPack = proPack
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingRecommendationType
#   type - SOAP::SOAPString
#   group - SOAP::SOAPString
#   fieldName - SOAP::SOAPString
#   code - SOAP::SOAPString
#   value - SOAP::SOAPString
#   message - SOAP::SOAPString
#   metadata - EBay::MetadataType
class ListingRecommendationType
  attr_accessor :type
  attr_accessor :group
  attr_accessor :fieldName
  attr_accessor :code
  attr_accessor :value
  attr_accessor :message
  attr_accessor :metadata
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(type = nil, group = nil, fieldName = nil, code = nil, value = [], message = nil, metadata = [])
    @type = type
    @group = group
    @fieldName = fieldName
    @code = code
    @value = value
    @message = message
    @metadata = metadata
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingRecommendationsType
#   recommendation - EBay::ListingRecommendationType
class ListingRecommendationsType
  attr_accessor :recommendation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(recommendation = [])
    @recommendation = recommendation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingStartPriceDetailsType
#   description - SOAP::SOAPString
#   listingType - EBay::ListingTypeCodeType
#   startPrice - EBay::AmountType
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
#   minBuyItNowPricePercent - SOAP::SOAPFloat
class ListingStartPriceDetailsType
  attr_accessor :description
  attr_accessor :listingType
  attr_accessor :startPrice
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_accessor :minBuyItNowPricePercent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(description = nil, listingType = nil, startPrice = nil, detailVersion = nil, updateTime = nil, minBuyItNowPricePercent = nil)
    @description = description
    @listingType = listingType
    @startPrice = startPrice
    @detailVersion = detailVersion
    @updateTime = updateTime
    @minBuyItNowPricePercent = minBuyItNowPricePercent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipArrayType
class ListingTipArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipFieldType
#   listingTipFieldID - SOAP::SOAPString
#   fieldTip - SOAP::SOAPString
#   currentFieldText - SOAP::SOAPString
#   currentFieldValue - SOAP::SOAPString
class ListingTipFieldType
  attr_accessor :listingTipFieldID
  attr_accessor :fieldTip
  attr_accessor :currentFieldText
  attr_accessor :currentFieldValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipFieldID = nil, fieldTip = nil, currentFieldText = nil, currentFieldValue = nil)
    @listingTipFieldID = listingTipFieldID
    @fieldTip = fieldTip
    @currentFieldText = currentFieldText
    @currentFieldValue = currentFieldValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipMessageType
#   listingTipMessageID - SOAP::SOAPString
#   shortMessage - SOAP::SOAPString
#   longMessage - SOAP::SOAPString
#   helpURLPath - SOAP::SOAPString
class ListingTipMessageType
  attr_accessor :listingTipMessageID
  attr_accessor :shortMessage
  attr_accessor :longMessage
  attr_accessor :helpURLPath
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipMessageID = nil, shortMessage = nil, longMessage = nil, helpURLPath = nil)
    @listingTipMessageID = listingTipMessageID
    @shortMessage = shortMessage
    @longMessage = longMessage
    @helpURLPath = helpURLPath
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ListingTipType
#   listingTipID - SOAP::SOAPString
#   priority - SOAP::SOAPInt
#   message - EBay::ListingTipMessageType
#   field - EBay::ListingTipFieldType
class ListingTipType
  attr_accessor :listingTipID
  attr_accessor :priority
  attr_accessor :message
  attr_accessor :field
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingTipID = nil, priority = nil, message = nil, field = nil)
    @listingTipID = listingTipID
    @priority = priority
    @message = message
    @field = field
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalListingDistancesNonSubscriptionDefinitionType
class LocalListingDistancesNonSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalListingDistancesRegularDefinitionType
class LocalListingDistancesRegularDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalListingDistancesSpecialtyDefinitionType
class LocalListingDistancesSpecialtyDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketAdFormatEnabledDefinitionType
class LocalMarketAdFormatEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketAutoAcceptEnabledDefinitionType
class LocalMarketAutoAcceptEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketAutoDeclineEnabledDefinitionType
class LocalMarketAutoDeclineEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketBestOfferEnabledDefinitionType
class LocalMarketBestOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketCompanyNameEnabledDefinitionType
class LocalMarketCompanyNameEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketContactByAddressEnabledDefinitionType
class LocalMarketContactByAddressEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketContactByEmailEnabledDefinitionType
class LocalMarketContactByEmailEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketContactByPhoneEnabledDefinitionType
class LocalMarketContactByPhoneEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketCounterOfferEnabledDefinitionType
class LocalMarketCounterOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketNonSubscriptionDefinitionType
class LocalMarketNonSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketPaymentMethodCheckOutEnabledDefinitionType
class LocalMarketPaymentMethodCheckOutEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketPhoneCountDefinitionType
class LocalMarketPhoneCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketPremiumSubscriptionDefinitionType
class LocalMarketPremiumSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketRegularSubscriptionDefinitionType
class LocalMarketRegularSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketSellerContactDetailsEnabledDefinitionType
class LocalMarketSellerContactDetailsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketShippingMethodEnabledDefinitionType
class LocalMarketShippingMethodEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketSpecialitySubscriptionDefinitionType
class LocalMarketSpecialitySubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalMarketStreetCountDefinitionType
class LocalMarketStreetCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LocalSearchType
#   maxDistance - SOAP::SOAPInt
#   postalCode - SOAP::SOAPString
class LocalSearchType
  attr_accessor :maxDistance
  attr_accessor :postalCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxDistance = nil, postalCode = nil)
    @maxDistance = maxDistance
    @postalCode = postalCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}LookupAttributeArrayType
class LookupAttributeArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}LookupAttributeType
#   name - SOAP::SOAPString
#   value - SOAP::SOAPString
class LookupAttributeType
  attr_accessor :name
  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, value = nil)
    @name = name
    @value = value
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MarkUpMarkDownEventType
#   type - EBay::MarkUpMarkDownEventTypeCodeType
#   time - SOAP::SOAPDateTime
#   reason - SOAP::SOAPString
class MarkUpMarkDownEventType
  attr_accessor :type
  attr_accessor :time
  attr_accessor :reason
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(type = nil, time = nil, reason = nil)
    @type = type
    @time = time
    @reason = reason
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MarkUpMarkDownHistoryType
class MarkUpMarkDownHistoryType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MaxFlatShippingCostCBTExemptDefinitionType
class MaxFlatShippingCostCBTExemptDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaxFlatShippingCostDefinitionType
class MaxFlatShippingCostDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaxGranularFitmentCountDefinitionType
class MaxGranularFitmentCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaxItemCompatibilityDefinitionType
class MaxItemCompatibilityDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaximumBuyerPolicyViolationsDetailsType
#   numberOfPolicyViolations - EBay::NumberOfPolicyViolationsDetailsType
#   policyViolationDuration - EBay::PolicyViolationDurationDetailsType
class MaximumBuyerPolicyViolationsDetailsType
  attr_accessor :numberOfPolicyViolations
  attr_accessor :policyViolationDuration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(numberOfPolicyViolations = nil, policyViolationDuration = [])
    @numberOfPolicyViolations = numberOfPolicyViolations
    @policyViolationDuration = policyViolationDuration
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaximumBuyerPolicyViolationsType
#   count - SOAP::SOAPInt
#   period - EBay::PeriodCodeType
class MaximumBuyerPolicyViolationsType
  attr_accessor :count
  attr_accessor :period
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(count = nil, period = nil)
    @count = count
    @period = period
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaximumItemRequirementsDetailsType
#   maximumItemCount - SOAP::SOAPInt
#   minimumFeedbackScore - SOAP::SOAPInt
class MaximumItemRequirementsDetailsType
  attr_accessor :maximumItemCount
  attr_accessor :minimumFeedbackScore
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maximumItemCount = [], minimumFeedbackScore = [])
    @maximumItemCount = maximumItemCount
    @minimumFeedbackScore = minimumFeedbackScore
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaximumItemRequirementsType
#   maximumItemCount - SOAP::SOAPInt
#   minimumFeedbackScore - SOAP::SOAPInt
class MaximumItemRequirementsType
  attr_accessor :maximumItemCount
  attr_accessor :minimumFeedbackScore

  def initialize(maximumItemCount = nil, minimumFeedbackScore = nil)
    @maximumItemCount = maximumItemCount
    @minimumFeedbackScore = minimumFeedbackScore
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaximumUnpaidItemStrikesCountDetailsType
#   count - SOAP::SOAPInt
class MaximumUnpaidItemStrikesCountDetailsType
  attr_accessor :count
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(count = [])
    @count = count
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaximumUnpaidItemStrikesDurationDetailsType
#   period - EBay::PeriodCodeType
#   description - SOAP::SOAPString
class MaximumUnpaidItemStrikesDurationDetailsType
  attr_accessor :period
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(period = nil, description = nil)
    @period = period
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaximumUnpaidItemStrikesInfoDetailsType
#   maximumUnpaidItemStrikesCount - EBay::MaximumUnpaidItemStrikesCountDetailsType
#   maximumUnpaidItemStrikesDuration - EBay::MaximumUnpaidItemStrikesDurationDetailsType
class MaximumUnpaidItemStrikesInfoDetailsType
  attr_accessor :maximumUnpaidItemStrikesCount
  attr_accessor :maximumUnpaidItemStrikesDuration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maximumUnpaidItemStrikesCount = nil, maximumUnpaidItemStrikesDuration = [])
    @maximumUnpaidItemStrikesCount = maximumUnpaidItemStrikesCount
    @maximumUnpaidItemStrikesDuration = maximumUnpaidItemStrikesDuration
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MaximumUnpaidItemStrikesInfoType
#   count - SOAP::SOAPInt
#   period - EBay::PeriodCodeType
class MaximumUnpaidItemStrikesInfoType
  attr_accessor :count
  attr_accessor :period
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(count = nil, period = nil)
    @count = count
    @period = period
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageExchangeArrayType
class MemberMessageExchangeArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageExchangeType
#   item - EBay::ItemType
#   question - EBay::MemberMessageType
#   response - SOAP::SOAPString
#   messageStatus - EBay::MessageStatusTypeCodeType
#   creationDate - SOAP::SOAPDateTime
#   lastModifiedDate - SOAP::SOAPDateTime
#   messageMedia - EBay::MessageMediaType
class MemberMessageExchangeType
  attr_accessor :item
  attr_accessor :question
  attr_accessor :response
  attr_accessor :messageStatus
  attr_accessor :creationDate
  attr_accessor :lastModifiedDate
  attr_accessor :messageMedia
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(item = nil, question = nil, response = [], messageStatus = nil, creationDate = nil, lastModifiedDate = nil, messageMedia = [])
    @item = item
    @question = question
    @response = response
    @messageStatus = messageStatus
    @creationDate = creationDate
    @lastModifiedDate = lastModifiedDate
    @messageMedia = messageMedia
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MemberMessageType
#   messageType - EBay::MessageTypeCodeType
#   questionType - EBay::QuestionTypeCodeType
#   emailCopyToSender - SOAP::SOAPBoolean
#   hideSendersEmailAddress - SOAP::SOAPBoolean
#   displayToPublic - SOAP::SOAPBoolean
#   senderID - SOAP::SOAPString
#   senderEmail - SOAP::SOAPString
#   recipientID - SOAP::SOAPString
#   subject - SOAP::SOAPString
#   body - SOAP::SOAPString
#   messageID - SOAP::SOAPString
#   parentMessageID - SOAP::SOAPString
#   messageMedia - EBay::MessageMediaType
class MemberMessageType
  attr_accessor :messageType
  attr_accessor :questionType
  attr_accessor :emailCopyToSender
  attr_accessor :hideSendersEmailAddress
  attr_accessor :displayToPublic
  attr_accessor :senderID
  attr_accessor :senderEmail
  attr_accessor :recipientID
  attr_accessor :subject
  attr_accessor :body
  attr_accessor :messageID
  attr_accessor :parentMessageID
  attr_accessor :messageMedia
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(messageType = nil, questionType = nil, emailCopyToSender = nil, hideSendersEmailAddress = nil, displayToPublic = nil, senderID = nil, senderEmail = nil, recipientID = [], subject = nil, body = nil, messageID = nil, parentMessageID = nil, messageMedia = [])
    @messageType = messageType
    @questionType = questionType
    @emailCopyToSender = emailCopyToSender
    @hideSendersEmailAddress = hideSendersEmailAddress
    @displayToPublic = displayToPublic
    @senderID = senderID
    @senderEmail = senderEmail
    @recipientID = recipientID
    @subject = subject
    @body = body
    @messageID = messageID
    @parentMessageID = parentMessageID
    @messageMedia = messageMedia
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MessageMediaType
#   mediaURL - SOAP::SOAPAnyURI
#   mediaName - SOAP::SOAPString
class MessageMediaType
  attr_accessor :mediaURL
  attr_accessor :mediaName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(mediaURL = nil, mediaName = nil)
    @mediaURL = mediaURL
    @mediaName = mediaName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MetadataType
#   name - SOAP::SOAPString
#   value - SOAP::SOAPString
class MetadataType
  attr_accessor :name
  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, value = [])
    @name = name
    @value = value
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MinItemCompatibilityDefinitionType
class MinItemCompatibilityDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MinimumFeedbackScoreDetailsType
#   feedbackScore - SOAP::SOAPInt
class MinimumFeedbackScoreDetailsType
  attr_accessor :feedbackScore
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(feedbackScore = [])
    @feedbackScore = feedbackScore
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MinimumReservePriceDefinitionType
class MinimumReservePriceDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ModifyNameArrayType
class ModifyNameArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ModifyNameType
#   name - SOAP::SOAPString
#   newName - SOAP::SOAPString
class ModifyNameType
  attr_accessor :name
  attr_accessor :newName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, newName = nil)
    @name = name
    @newName = newName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MotorsLocalMarketEnabledDefinitionType
class MotorsLocalMarketEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MultiLegShipmentType
#   shippingServiceDetails - EBay::MultiLegShippingServiceType
#   shipToAddress - EBay::AddressType
#   shippingTimeMin - SOAP::SOAPInt
#   shippingTimeMax - SOAP::SOAPInt
class MultiLegShipmentType
  attr_accessor :shippingServiceDetails
  attr_accessor :shipToAddress
  attr_accessor :shippingTimeMin
  attr_accessor :shippingTimeMax
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingServiceDetails = nil, shipToAddress = nil, shippingTimeMin = nil, shippingTimeMax = nil)
    @shippingServiceDetails = shippingServiceDetails
    @shipToAddress = shipToAddress
    @shippingTimeMin = shippingTimeMin
    @shippingTimeMax = shippingTimeMax
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MultiLegShippingDetailsType
#   sellerShipmentToLogisticsProvider - EBay::MultiLegShipmentType
#   logisticsProviderShipmentToBuyer - EBay::MultiLegShipmentType
class MultiLegShippingDetailsType
  attr_accessor :sellerShipmentToLogisticsProvider
  attr_accessor :logisticsProviderShipmentToBuyer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sellerShipmentToLogisticsProvider = nil, logisticsProviderShipmentToBuyer = nil)
    @sellerShipmentToLogisticsProvider = sellerShipmentToLogisticsProvider
    @logisticsProviderShipmentToBuyer = logisticsProviderShipmentToBuyer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MultiLegShippingServiceType
#   shippingService - SOAP::SOAPToken
#   totalShippingCost - EBay::AmountType
class MultiLegShippingServiceType
  attr_accessor :shippingService
  attr_accessor :totalShippingCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingService = nil, totalShippingCost = nil)
    @shippingService = shippingService
    @totalShippingCost = totalShippingCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertArrayType
class MyMessagesAlertArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertIDArrayType
class MyMessagesAlertIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertType
#   sender - SOAP::SOAPString
#   recipientUserID - SOAP::SOAPString
#   subject - SOAP::SOAPString
#   priority - SOAP::SOAPString
#   alertID - (any)
#   externalAlertID - SOAP::SOAPString
#   contentType - SOAP::SOAPString
#   text - SOAP::SOAPString
#   resolutionStatus - EBay::MyMessagesAlertResolutionStatusCode
#   read - SOAP::SOAPBoolean
#   creationDate - SOAP::SOAPDateTime
#   receiveDate - SOAP::SOAPDateTime
#   expirationDate - SOAP::SOAPDateTime
#   resolutionDate - SOAP::SOAPDateTime
#   lastReadDate - SOAP::SOAPDateTime
#   itemID - (any)
#   isTimedResolution - SOAP::SOAPBoolean
#   actionURL - SOAP::SOAPString
#   responseDetails - EBay::MyMessagesResponseDetailsType
#   forwardDetails - EBay::MyMessagesForwardDetailsType
#   folder - EBay::MyMessagesFolderType
class MyMessagesAlertType
  attr_accessor :sender
  attr_accessor :recipientUserID
  attr_accessor :subject
  attr_accessor :priority
  attr_accessor :alertID
  attr_accessor :externalAlertID
  attr_accessor :contentType
  attr_accessor :text
  attr_accessor :resolutionStatus
  attr_accessor :read
  attr_accessor :creationDate
  attr_accessor :receiveDate
  attr_accessor :expirationDate
  attr_accessor :resolutionDate
  attr_accessor :lastReadDate
  attr_accessor :itemID
  attr_accessor :isTimedResolution
  attr_accessor :actionURL
  attr_accessor :responseDetails
  attr_accessor :forwardDetails
  attr_accessor :folder
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sender = nil, recipientUserID = nil, subject = nil, priority = nil, alertID = nil, externalAlertID = nil, contentType = nil, text = nil, resolutionStatus = nil, read = nil, creationDate = nil, receiveDate = nil, expirationDate = nil, resolutionDate = nil, lastReadDate = nil, itemID = nil, isTimedResolution = nil, actionURL = nil, responseDetails = nil, forwardDetails = nil, folder = nil)
    @sender = sender
    @recipientUserID = recipientUserID
    @subject = subject
    @priority = priority
    @alertID = alertID
    @externalAlertID = externalAlertID
    @contentType = contentType
    @text = text
    @resolutionStatus = resolutionStatus
    @read = read
    @creationDate = creationDate
    @receiveDate = receiveDate
    @expirationDate = expirationDate
    @resolutionDate = resolutionDate
    @lastReadDate = lastReadDate
    @itemID = itemID
    @isTimedResolution = isTimedResolution
    @actionURL = actionURL
    @responseDetails = responseDetails
    @forwardDetails = forwardDetails
    @folder = folder
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesExternalMessageIDArrayType
class MyMessagesExternalMessageIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderSummaryType
#   folderID - SOAP::SOAPLong
#   folderName - SOAP::SOAPString
#   newAlertCount - SOAP::SOAPInt
#   newMessageCount - SOAP::SOAPInt
#   totalAlertCount - SOAP::SOAPInt
#   totalMessageCount - SOAP::SOAPInt
#   newHighPriorityCount - SOAP::SOAPInt
#   totalHighPriorityCount - SOAP::SOAPInt
class MyMessagesFolderSummaryType
  attr_accessor :folderID
  attr_accessor :folderName
  attr_accessor :newAlertCount
  attr_accessor :newMessageCount
  attr_accessor :totalAlertCount
  attr_accessor :totalMessageCount
  attr_accessor :newHighPriorityCount
  attr_accessor :totalHighPriorityCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, folderName = nil, newAlertCount = nil, newMessageCount = nil, totalAlertCount = nil, totalMessageCount = nil, newHighPriorityCount = nil, totalHighPriorityCount = nil)
    @folderID = folderID
    @folderName = folderName
    @newAlertCount = newAlertCount
    @newMessageCount = newMessageCount
    @totalAlertCount = totalAlertCount
    @totalMessageCount = totalMessageCount
    @newHighPriorityCount = newHighPriorityCount
    @totalHighPriorityCount = totalHighPriorityCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderType
#   folderID - SOAP::SOAPLong
#   folderName - SOAP::SOAPString
class MyMessagesFolderType
  attr_accessor :folderID
  attr_accessor :folderName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, folderName = nil)
    @folderID = folderID
    @folderName = folderName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesForwardDetailsType
#   userForwardDate - SOAP::SOAPDateTime
#   forwardMessageEncoding - SOAP::SOAPString
class MyMessagesForwardDetailsType
  attr_accessor :userForwardDate
  attr_accessor :forwardMessageEncoding
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userForwardDate = nil, forwardMessageEncoding = nil)
    @userForwardDate = userForwardDate
    @forwardMessageEncoding = forwardMessageEncoding
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageArrayType
class MyMessagesMessageArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageIDArrayType
class MyMessagesMessageIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesMessageType
#   sender - SOAP::SOAPString
#   recipientUserID - SOAP::SOAPString
#   sendToName - SOAP::SOAPString
#   subject - SOAP::SOAPString
#   messageID - (any)
#   externalMessageID - SOAP::SOAPString
#   contentType - SOAP::SOAPString
#   text - SOAP::SOAPString
#   flagged - SOAP::SOAPBoolean
#   read - SOAP::SOAPBoolean
#   creationDate - SOAP::SOAPDateTime
#   receiveDate - SOAP::SOAPDateTime
#   expirationDate - SOAP::SOAPDateTime
#   itemID - (any)
#   responseDetails - EBay::MyMessagesResponseDetailsType
#   forwardDetails - EBay::MyMessagesForwardDetailsType
#   folder - EBay::MyMessagesFolderType
#   content - SOAP::SOAPString
#   messageType - EBay::MessageTypeCodeType
#   listingStatus - EBay::ListingStatusCodeType
#   questionType - EBay::QuestionTypeCodeType
#   replied - SOAP::SOAPBoolean
#   highPriority - SOAP::SOAPBoolean
#   itemEndTime - SOAP::SOAPDateTime
#   itemTitle - SOAP::SOAPString
#   messageMedia - EBay::MessageMediaType
class MyMessagesMessageType
  attr_accessor :sender
  attr_accessor :recipientUserID
  attr_accessor :sendToName
  attr_accessor :subject
  attr_accessor :messageID
  attr_accessor :externalMessageID
  attr_accessor :contentType
  attr_accessor :text
  attr_accessor :flagged
  attr_accessor :read
  attr_accessor :creationDate
  attr_accessor :receiveDate
  attr_accessor :expirationDate
  attr_accessor :itemID
  attr_accessor :responseDetails
  attr_accessor :forwardDetails
  attr_accessor :folder
  attr_accessor :content
  attr_accessor :messageType
  attr_accessor :listingStatus
  attr_accessor :questionType
  attr_accessor :replied
  attr_accessor :highPriority
  attr_accessor :itemEndTime
  attr_accessor :itemTitle
  attr_accessor :messageMedia
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sender = nil, recipientUserID = nil, sendToName = nil, subject = nil, messageID = nil, externalMessageID = nil, contentType = nil, text = nil, flagged = nil, read = nil, creationDate = nil, receiveDate = nil, expirationDate = nil, itemID = nil, responseDetails = nil, forwardDetails = nil, folder = nil, content = nil, messageType = nil, listingStatus = nil, questionType = nil, replied = nil, highPriority = nil, itemEndTime = nil, itemTitle = nil, messageMedia = [])
    @sender = sender
    @recipientUserID = recipientUserID
    @sendToName = sendToName
    @subject = subject
    @messageID = messageID
    @externalMessageID = externalMessageID
    @contentType = contentType
    @text = text
    @flagged = flagged
    @read = read
    @creationDate = creationDate
    @receiveDate = receiveDate
    @expirationDate = expirationDate
    @itemID = itemID
    @responseDetails = responseDetails
    @forwardDetails = forwardDetails
    @folder = folder
    @content = content
    @messageType = messageType
    @listingStatus = listingStatus
    @questionType = questionType
    @replied = replied
    @highPriority = highPriority
    @itemEndTime = itemEndTime
    @itemTitle = itemTitle
    @messageMedia = messageMedia
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesResponseDetailsType
#   responseEnabled - SOAP::SOAPBoolean
#   responseURL - SOAP::SOAPAnyURI
#   userResponseDate - SOAP::SOAPDateTime
class MyMessagesResponseDetailsType
  attr_accessor :responseEnabled
  attr_accessor :responseURL
  attr_accessor :userResponseDate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(responseEnabled = nil, responseURL = nil, userResponseDate = nil)
    @responseEnabled = responseEnabled
    @responseURL = responseURL
    @userResponseDate = userResponseDate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesSummaryType
#   folderSummary - EBay::MyMessagesFolderSummaryType
#   newAlertCount - SOAP::SOAPInt
#   newMessageCount - SOAP::SOAPInt
#   unresolvedAlertCount - SOAP::SOAPInt
#   flaggedMessageCount - SOAP::SOAPInt
#   totalAlertCount - SOAP::SOAPInt
#   totalMessageCount - SOAP::SOAPInt
#   newHighPriorityCount - SOAP::SOAPInt
#   totalHighPriorityCount - SOAP::SOAPInt
class MyMessagesSummaryType
  attr_accessor :folderSummary
  attr_accessor :newAlertCount
  attr_accessor :newMessageCount
  attr_accessor :unresolvedAlertCount
  attr_accessor :flaggedMessageCount
  attr_accessor :totalAlertCount
  attr_accessor :totalMessageCount
  attr_accessor :newHighPriorityCount
  attr_accessor :totalHighPriorityCount

  def initialize(folderSummary = [], newAlertCount = nil, newMessageCount = nil, unresolvedAlertCount = nil, flaggedMessageCount = nil, totalAlertCount = nil, totalMessageCount = nil, newHighPriorityCount = nil, totalHighPriorityCount = nil)
    @folderSummary = folderSummary
    @newAlertCount = newAlertCount
    @newMessageCount = newMessageCount
    @unresolvedAlertCount = unresolvedAlertCount
    @flaggedMessageCount = flaggedMessageCount
    @totalAlertCount = totalAlertCount
    @totalMessageCount = totalMessageCount
    @newHighPriorityCount = newHighPriorityCount
    @totalHighPriorityCount = totalHighPriorityCount
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSearchListType
#   totalAvailable - SOAP::SOAPInt
#   favoriteSearch - EBay::MyeBayFavoriteSearchType
class MyeBayFavoriteSearchListType
  attr_accessor :totalAvailable
  attr_accessor :favoriteSearch
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, favoriteSearch = [])
    @totalAvailable = totalAvailable
    @favoriteSearch = favoriteSearch
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSearchType
#   searchName - SOAP::SOAPString
#   searchQuery - SOAP::SOAPString
#   queryKeywords - SOAP::SOAPString
#   categoryID - SOAP::SOAPString
#   itemSort - EBay::SimpleItemSortCodeType
#   sortOrder - EBay::SortOrderCodeType
#   endTimeFrom - SOAP::SOAPDateTime
#   endTimeTo - SOAP::SOAPDateTime
#   maxDistance - SOAP::SOAPInt
#   postalCode - SOAP::SOAPString
#   itemType - EBay::ItemTypeCodeType
#   priceMax - EBay::AmountType
#   priceMin - EBay::AmountType
#   currency - EBay::CurrencyCodeType
#   bidCountMax - SOAP::SOAPInt
#   bidCountMin - SOAP::SOAPInt
#   searchFlag - EBay::SearchFlagCodeType
#   paymentMethod - EBay::PaymentMethodSearchCodeType
#   preferredLocation - EBay::PreferredLocationCodeType
#   sellerID - SOAP::SOAPString
#   sellerIDExclude - SOAP::SOAPString
#   itemsAvailableTo - EBay::CountryCodeType
#   itemsLocatedIn - EBay::CountryCodeType
#   sellerBusinessType - EBay::SellerBusinessCodeType
#   condition - EBay::ItemConditionCodeType
#   quantity - SOAP::SOAPInt
#   quantityOperator - EBay::QuantityOperatorCodeType
class MyeBayFavoriteSearchType
  attr_accessor :searchName
  attr_accessor :searchQuery
  attr_accessor :queryKeywords
  attr_accessor :categoryID
  attr_accessor :itemSort
  attr_accessor :sortOrder
  attr_accessor :endTimeFrom
  attr_accessor :endTimeTo
  attr_accessor :maxDistance
  attr_accessor :postalCode
  attr_accessor :itemType
  attr_accessor :priceMax
  attr_accessor :priceMin
  attr_accessor :currency
  attr_accessor :bidCountMax
  attr_accessor :bidCountMin
  attr_accessor :searchFlag
  attr_accessor :paymentMethod
  attr_accessor :preferredLocation
  attr_accessor :sellerID
  attr_accessor :sellerIDExclude
  attr_accessor :itemsAvailableTo
  attr_accessor :itemsLocatedIn
  attr_accessor :sellerBusinessType
  attr_accessor :condition
  attr_accessor :quantity
  attr_accessor :quantityOperator
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchName = nil, searchQuery = nil, queryKeywords = nil, categoryID = nil, itemSort = nil, sortOrder = nil, endTimeFrom = nil, endTimeTo = nil, maxDistance = nil, postalCode = nil, itemType = nil, priceMax = nil, priceMin = nil, currency = nil, bidCountMax = nil, bidCountMin = nil, searchFlag = [], paymentMethod = nil, preferredLocation = nil, sellerID = [], sellerIDExclude = [], itemsAvailableTo = nil, itemsLocatedIn = nil, sellerBusinessType = nil, condition = nil, quantity = nil, quantityOperator = nil)
    @searchName = searchName
    @searchQuery = searchQuery
    @queryKeywords = queryKeywords
    @categoryID = categoryID
    @itemSort = itemSort
    @sortOrder = sortOrder
    @endTimeFrom = endTimeFrom
    @endTimeTo = endTimeTo
    @maxDistance = maxDistance
    @postalCode = postalCode
    @itemType = itemType
    @priceMax = priceMax
    @priceMin = priceMin
    @currency = currency
    @bidCountMax = bidCountMax
    @bidCountMin = bidCountMin
    @searchFlag = searchFlag
    @paymentMethod = paymentMethod
    @preferredLocation = preferredLocation
    @sellerID = sellerID
    @sellerIDExclude = sellerIDExclude
    @itemsAvailableTo = itemsAvailableTo
    @itemsLocatedIn = itemsLocatedIn
    @sellerBusinessType = sellerBusinessType
    @condition = condition
    @quantity = quantity
    @quantityOperator = quantityOperator
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSellerListType
#   totalAvailable - SOAP::SOAPInt
#   favoriteSeller - EBay::MyeBayFavoriteSellerType
class MyeBayFavoriteSellerListType
  attr_accessor :totalAvailable
  attr_accessor :favoriteSeller
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, favoriteSeller = [])
    @totalAvailable = totalAvailable
    @favoriteSeller = favoriteSeller
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBayFavoriteSellerType
#   userID - SOAP::SOAPString
#   storeName - SOAP::SOAPString
class MyeBayFavoriteSellerType
  attr_accessor :userID
  attr_accessor :storeName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = nil, storeName = nil)
    @userID = userID
    @storeName = storeName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBaySecondChanceOfferListType
#   totalAvailable - SOAP::SOAPInt
#   secondChanceOffer - EBay::ItemType
class MyeBaySecondChanceOfferListType
  attr_accessor :totalAvailable
  attr_accessor :secondChanceOffer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalAvailable = nil, secondChanceOffer = [])
    @totalAvailable = totalAvailable
    @secondChanceOffer = secondChanceOffer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBaySelectionType
#   include - SOAP::SOAPBoolean
#   includeItemCount - SOAP::SOAPBoolean
#   includeFavoriteSearcheCount - SOAP::SOAPBoolean
#   includeFavoriteSellerCount - SOAP::SOAPBoolean
#   sort - EBay::SortOrderCodeType
#   maxResults - SOAP::SOAPInt
#   userDefinedListName - SOAP::SOAPString
#   includeListContents - SOAP::SOAPBoolean
class MyeBaySelectionType
  attr_accessor :include
  attr_accessor :includeItemCount
  attr_accessor :includeFavoriteSearcheCount
  attr_accessor :includeFavoriteSellerCount
  attr_accessor :sort
  attr_accessor :maxResults
  attr_accessor :userDefinedListName
  attr_accessor :includeListContents
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(include = nil, includeItemCount = nil, includeFavoriteSearcheCount = nil, includeFavoriteSellerCount = nil, sort = nil, maxResults = nil, userDefinedListName = nil, includeListContents = nil)
    @include = include
    @includeItemCount = includeItemCount
    @includeFavoriteSearcheCount = includeFavoriteSearcheCount
    @includeFavoriteSellerCount = includeFavoriteSellerCount
    @sort = sort
    @maxResults = maxResults
    @userDefinedListName = userDefinedListName
    @includeListContents = includeListContents
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}MyeBaySellingSummaryType
#   activeAuctionCount - SOAP::SOAPInt
#   auctionSellingCount - SOAP::SOAPInt
#   auctionBidCount - SOAP::SOAPInt
#   totalAuctionSellingValue - EBay::AmountType
#   totalSoldCount - SOAP::SOAPInt
#   totalSoldValue - EBay::AmountType
#   soldDurationInDays - SOAP::SOAPInt
#   classifiedAdCount - SOAP::SOAPInt
#   totalLeadCount - SOAP::SOAPInt
#   classifiedAdOfferCount - SOAP::SOAPInt
#   totalListingsWithLeads - SOAP::SOAPInt
#   quantityLimitRemaining - SOAP::SOAPLong
#   amountLimitRemaining - EBay::AmountType
class MyeBaySellingSummaryType
  attr_accessor :activeAuctionCount
  attr_accessor :auctionSellingCount
  attr_accessor :auctionBidCount
  attr_accessor :totalAuctionSellingValue
  attr_accessor :totalSoldCount
  attr_accessor :totalSoldValue
  attr_accessor :soldDurationInDays
  attr_accessor :classifiedAdCount
  attr_accessor :totalLeadCount
  attr_accessor :classifiedAdOfferCount
  attr_accessor :totalListingsWithLeads
  attr_accessor :quantityLimitRemaining
  attr_accessor :amountLimitRemaining
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(activeAuctionCount = nil, auctionSellingCount = nil, auctionBidCount = nil, totalAuctionSellingValue = nil, totalSoldCount = nil, totalSoldValue = nil, soldDurationInDays = nil, classifiedAdCount = nil, totalLeadCount = nil, classifiedAdOfferCount = nil, totalListingsWithLeads = nil, quantityLimitRemaining = nil, amountLimitRemaining = nil)
    @activeAuctionCount = activeAuctionCount
    @auctionSellingCount = auctionSellingCount
    @auctionBidCount = auctionBidCount
    @totalAuctionSellingValue = totalAuctionSellingValue
    @totalSoldCount = totalSoldCount
    @totalSoldValue = totalSoldValue
    @soldDurationInDays = soldDurationInDays
    @classifiedAdCount = classifiedAdCount
    @totalLeadCount = totalLeadCount
    @classifiedAdOfferCount = classifiedAdOfferCount
    @totalListingsWithLeads = totalListingsWithLeads
    @quantityLimitRemaining = quantityLimitRemaining
    @amountLimitRemaining = amountLimitRemaining
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NameRecommendationType
#   name - SOAP::SOAPString
#   validationRules - EBay::RecommendationValidationRulesType
#   valueRecommendation - EBay::ValueRecommendationType
#   helpURL - SOAP::SOAPAnyURI
#   source - EBay::ItemSpecificSourceCodeType
#   helpText - SOAP::SOAPString
class NameRecommendationType
  attr_accessor :name
  attr_accessor :validationRules
  attr_accessor :valueRecommendation
  attr_accessor :helpURL
  attr_accessor :source
  attr_accessor :helpText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, validationRules = nil, valueRecommendation = [], helpURL = nil, source = nil, helpText = nil)
    @name = name
    @validationRules = validationRules
    @valueRecommendation = valueRecommendation
    @helpURL = helpURL
    @source = source
    @helpText = helpText
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NameValueListArrayType
class NameValueListArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}NameValueListType
#   name - SOAP::SOAPString
#   value - SOAP::SOAPString
#   source - EBay::ItemSpecificSourceCodeType
class NameValueListType
  attr_accessor :name
  attr_accessor :value
  attr_accessor :source
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, value = [], source = nil)
    @name = name
    @value = value
    @source = source
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NameValueRelationshipType
#   parentName - SOAP::SOAPString
#   parentValue - SOAP::SOAPString
class NameValueRelationshipType
  attr_accessor :parentName
  attr_accessor :parentValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(parentName = nil, parentValue = nil)
    @parentName = parentName
    @parentValue = parentValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NonProfitAddressType
#   addressLine1 - SOAP::SOAPString
#   addressLine2 - SOAP::SOAPString
#   city - SOAP::SOAPString
#   state - SOAP::SOAPString
#   zipCode - SOAP::SOAPString
#   latitude - SOAP::SOAPDecimal
#   longitude - SOAP::SOAPDecimal
#   addressType - EBay::AddressTypeCodeType
class NonProfitAddressType
  attr_accessor :addressLine1
  attr_accessor :addressLine2
  attr_accessor :city
  attr_accessor :state
  attr_accessor :zipCode
  attr_accessor :latitude
  attr_accessor :longitude
  attr_accessor :addressType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(addressLine1 = nil, addressLine2 = nil, city = nil, state = nil, zipCode = nil, latitude = nil, longitude = nil, addressType = nil)
    @addressLine1 = addressLine1
    @addressLine2 = addressLine2
    @city = city
    @state = state
    @zipCode = zipCode
    @latitude = latitude
    @longitude = longitude
    @addressType = addressType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NonSubscriptionDefinitionType
class NonSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationDetailsArrayType
class NotificationDetailsArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}NotificationDetailsType
#   deliveryURL - SOAP::SOAPAnyURI
#   referenceID - SOAP::SOAPString
#   expirationTime - SOAP::SOAPDateTime
#   type - EBay::NotificationEventTypeCodeType
#   retries - SOAP::SOAPInt
#   deliveryStatus - EBay::NotificationEventStateCodeType
#   nextRetryTime - SOAP::SOAPDateTime
#   deliveryTime - SOAP::SOAPDateTime
#   errorMessage - SOAP::SOAPString
#   deliveryURLName - SOAP::SOAPString
class NotificationDetailsType
  attr_accessor :deliveryURL
  attr_accessor :referenceID
  attr_accessor :expirationTime
  attr_accessor :type
  attr_accessor :retries
  attr_accessor :deliveryStatus
  attr_accessor :nextRetryTime
  attr_accessor :deliveryTime
  attr_accessor :errorMessage
  attr_accessor :deliveryURLName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(deliveryURL = nil, referenceID = nil, expirationTime = nil, type = nil, retries = nil, deliveryStatus = nil, nextRetryTime = nil, deliveryTime = nil, errorMessage = nil, deliveryURLName = nil)
    @deliveryURL = deliveryURL
    @referenceID = referenceID
    @expirationTime = expirationTime
    @type = type
    @retries = retries
    @deliveryStatus = deliveryStatus
    @nextRetryTime = nextRetryTime
    @deliveryTime = deliveryTime
    @errorMessage = errorMessage
    @deliveryURLName = deliveryURLName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEnableArrayType
class NotificationEnableArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEnableType
#   eventType - EBay::NotificationEventTypeCodeType
#   eventEnable - EBay::EnableCodeType
class NotificationEnableType
  attr_accessor :eventType
  attr_accessor :eventEnable
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, eventEnable = nil)
    @eventType = eventType
    @eventEnable = eventEnable
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventPropertyType
#   eventType - EBay::NotificationEventTypeCodeType
#   name - EBay::NotificationEventPropertyNameCodeType
#   value - SOAP::SOAPString
class NotificationEventPropertyType
  attr_accessor :eventType
  attr_accessor :name
  attr_accessor :value
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, name = nil, value = nil)
    @eventType = eventType
    @name = name
    @value = value
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationStatisticsType
#   deliveredCount - SOAP::SOAPInt
#   queuedNewCount - SOAP::SOAPInt
#   queuedPendingCount - SOAP::SOAPInt
#   expiredCount - SOAP::SOAPInt
#   errorCount - SOAP::SOAPInt
class NotificationStatisticsType
  attr_accessor :deliveredCount
  attr_accessor :queuedNewCount
  attr_accessor :queuedPendingCount
  attr_accessor :expiredCount
  attr_accessor :errorCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(deliveredCount = nil, queuedNewCount = nil, queuedPendingCount = nil, expiredCount = nil, errorCount = nil)
    @deliveredCount = deliveredCount
    @queuedNewCount = queuedNewCount
    @queuedPendingCount = queuedPendingCount
    @expiredCount = expiredCount
    @errorCount = errorCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NotificationUserDataType
#   sMSSubscription - EBay::SMSSubscriptionType
#   summarySchedule - EBay::SummaryEventScheduleType
#   externalUserData - SOAP::SOAPString
class NotificationUserDataType
  attr_accessor :sMSSubscription
  attr_accessor :summarySchedule
  attr_accessor :externalUserData
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sMSSubscription = nil, summarySchedule = [], externalUserData = nil)
    @sMSSubscription = sMSSubscription
    @summarySchedule = summarySchedule
    @externalUserData = externalUserData
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}NumberOfPolicyViolationsDetailsType
#   count - SOAP::SOAPInt
class NumberOfPolicyViolationsDetailsType
  attr_accessor :count
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(count = [])
    @count = count
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OfferArrayType
class OfferArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}OfferType
#   action - EBay::BidActionCodeType
#   currency - EBay::CurrencyCodeType
#   itemID - (any)
#   maxBid - EBay::AmountType
#   quantity - SOAP::SOAPInt
#   secondChanceEnabled - SOAP::SOAPBoolean
#   siteCurrency - EBay::CurrencyCodeType
#   timeBid - SOAP::SOAPDateTime
#   highestBid - EBay::AmountType
#   convertedPrice - EBay::AmountType
#   transactionID - SOAP::SOAPString
#   user - EBay::UserType
#   userConsent - SOAP::SOAPBoolean
#   bidCount - SOAP::SOAPInt
#   message - SOAP::SOAPString
#   bestOfferID - (any)
#   myMaxBid - EBay::AmountType
class OfferType
  attr_accessor :action
  attr_accessor :currency
  attr_accessor :itemID
  attr_accessor :maxBid
  attr_accessor :quantity
  attr_accessor :secondChanceEnabled
  attr_accessor :siteCurrency
  attr_accessor :timeBid
  attr_accessor :highestBid
  attr_accessor :convertedPrice
  attr_accessor :transactionID
  attr_accessor :user
  attr_accessor :userConsent
  attr_accessor :bidCount
  attr_accessor :message
  attr_accessor :bestOfferID
  attr_accessor :myMaxBid
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(action = nil, currency = nil, itemID = nil, maxBid = nil, quantity = nil, secondChanceEnabled = nil, siteCurrency = nil, timeBid = nil, highestBid = nil, convertedPrice = nil, transactionID = nil, user = nil, userConsent = nil, bidCount = nil, message = nil, bestOfferID = nil, myMaxBid = nil)
    @action = action
    @currency = currency
    @itemID = itemID
    @maxBid = maxBid
    @quantity = quantity
    @secondChanceEnabled = secondChanceEnabled
    @siteCurrency = siteCurrency
    @timeBid = timeBid
    @highestBid = highestBid
    @convertedPrice = convertedPrice
    @transactionID = transactionID
    @user = user
    @userConsent = userConsent
    @bidCount = bidCount
    @message = message
    @bestOfferID = bestOfferID
    @myMaxBid = myMaxBid
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OrderArrayType
class OrderArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}OrderIDArrayType
class OrderIDArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}OrderTransactionArrayType
class OrderTransactionArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}OrderTransactionType
#   order - EBay::OrderType
#   transaction - EBay::TransactionType
class OrderTransactionType
  attr_accessor :order
  attr_accessor :transaction
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(order = nil, transaction = nil)
    @order = order
    @transaction = transaction
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}OrderType
#   orderID - (any)
#   orderStatus - EBay::OrderStatusCodeType
#   adjustmentAmount - EBay::AmountType
#   amountPaid - EBay::AmountType
#   amountSaved - EBay::AmountType
#   checkoutStatus - EBay::CheckoutStatusType
#   shippingDetails - EBay::ShippingDetailsType
#   creatingUserRole - EBay::TradingRoleCodeType
#   createdTime - SOAP::SOAPDateTime
#   paymentMethods - EBay::BuyerPaymentMethodCodeType
#   sellerEmail - SOAP::SOAPString
#   shippingAddress - EBay::AddressType
#   shippingServiceSelected - EBay::ShippingServiceOptionsType
#   subtotal - EBay::AmountType
#   total - EBay::AmountType
#   externalTransaction - EBay::ExternalTransactionType
#   transactionArray - EBay::TransactionArrayType
#   buyerUserID - (any)
#   paidTime - SOAP::SOAPDateTime
#   shippedTime - SOAP::SOAPDateTime
#   integratedMerchantCreditCardEnabled - SOAP::SOAPBoolean
#   bundlePurchase - SOAP::SOAPBoolean
#   buyerCheckoutMessage - SOAP::SOAPString
#   eIASToken - SOAP::SOAPString
#   paymentHoldStatus - EBay::PaymentHoldStatusCodeType
#   paymentHoldDetails - EBay::PaymentHoldDetailType
#   refundAmount - EBay::AmountType
#   refundStatus - SOAP::SOAPString
#   refundArray - EBay::RefundArrayType
#   isMultiLegShipping - SOAP::SOAPBoolean
#   multiLegShippingDetails - EBay::MultiLegShippingDetailsType
#   monetaryDetails - EBay::PaymentsInformationType
#   pickupDetails - EBay::PickupDetailsType
#   pickupMethodSelected - EBay::PickupMethodSelectedType
#   sellerUserID - (any)
#   sellerEIASToken - SOAP::SOAPString
#   cancelReason - SOAP::SOAPToken
#   cancelStatus - EBay::CancelStatusCodeType
#   cancelReasonDetails - SOAP::SOAPString
#   shippingConvenienceCharge - EBay::AmountType
#   cancelDetail - EBay::CancelDetailType
#   logisticsPlanType - SOAP::SOAPToken
#   buyerTaxIdentifier - EBay::TaxIdentifierType
#   buyerPackageEnclosures - EBay::BuyerPackageEnclosuresType
#   extendedOrderID - SOAP::SOAPString
class OrderType
  attr_accessor :orderID
  attr_accessor :orderStatus
  attr_accessor :adjustmentAmount
  attr_accessor :amountPaid
  attr_accessor :amountSaved
  attr_accessor :checkoutStatus
  attr_accessor :shippingDetails
  attr_accessor :creatingUserRole
  attr_accessor :createdTime
  attr_accessor :paymentMethods
  attr_accessor :sellerEmail
  attr_accessor :shippingAddress
  attr_accessor :shippingServiceSelected
  attr_accessor :subtotal
  attr_accessor :total
  attr_accessor :externalTransaction
  attr_accessor :transactionArray
  attr_accessor :buyerUserID
  attr_accessor :paidTime
  attr_accessor :shippedTime
  attr_accessor :integratedMerchantCreditCardEnabled
  attr_accessor :bundlePurchase
  attr_accessor :buyerCheckoutMessage
  attr_accessor :eIASToken
  attr_accessor :paymentHoldStatus
  attr_accessor :paymentHoldDetails
  attr_accessor :refundAmount
  attr_accessor :refundStatus
  attr_accessor :refundArray
  attr_accessor :isMultiLegShipping
  attr_accessor :multiLegShippingDetails
  attr_accessor :monetaryDetails
  attr_accessor :pickupDetails
  attr_accessor :pickupMethodSelected
  attr_accessor :sellerUserID
  attr_accessor :sellerEIASToken
  attr_accessor :cancelReason
  attr_accessor :cancelStatus
  attr_accessor :cancelReasonDetails
  attr_accessor :shippingConvenienceCharge
  attr_accessor :cancelDetail
  attr_accessor :logisticsPlanType
  attr_accessor :buyerTaxIdentifier
  attr_accessor :buyerPackageEnclosures
  attr_accessor :extendedOrderID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(orderID = nil, orderStatus = nil, adjustmentAmount = nil, amountPaid = nil, amountSaved = nil, checkoutStatus = nil, shippingDetails = nil, creatingUserRole = nil, createdTime = nil, paymentMethods = [], sellerEmail = nil, shippingAddress = nil, shippingServiceSelected = nil, subtotal = nil, total = nil, externalTransaction = [], transactionArray = nil, buyerUserID = nil, paidTime = nil, shippedTime = nil, integratedMerchantCreditCardEnabled = nil, bundlePurchase = nil, buyerCheckoutMessage = nil, eIASToken = nil, paymentHoldStatus = nil, paymentHoldDetails = nil, refundAmount = nil, refundStatus = nil, refundArray = nil, isMultiLegShipping = nil, multiLegShippingDetails = nil, monetaryDetails = nil, pickupDetails = nil, pickupMethodSelected = nil, sellerUserID = nil, sellerEIASToken = nil, cancelReason = nil, cancelStatus = nil, cancelReasonDetails = nil, shippingConvenienceCharge = nil, cancelDetail = [], logisticsPlanType = nil, buyerTaxIdentifier = [], buyerPackageEnclosures = nil, extendedOrderID = nil)
    @orderID = orderID
    @orderStatus = orderStatus
    @adjustmentAmount = adjustmentAmount
    @amountPaid = amountPaid
    @amountSaved = amountSaved
    @checkoutStatus = checkoutStatus
    @shippingDetails = shippingDetails
    @creatingUserRole = creatingUserRole
    @createdTime = createdTime
    @paymentMethods = paymentMethods
    @sellerEmail = sellerEmail
    @shippingAddress = shippingAddress
    @shippingServiceSelected = shippingServiceSelected
    @subtotal = subtotal
    @total = total
    @externalTransaction = externalTransaction
    @transactionArray = transactionArray
    @buyerUserID = buyerUserID
    @paidTime = paidTime
    @shippedTime = shippedTime
    @integratedMerchantCreditCardEnabled = integratedMerchantCreditCardEnabled
    @bundlePurchase = bundlePurchase
    @buyerCheckoutMessage = buyerCheckoutMessage
    @eIASToken = eIASToken
    @paymentHoldStatus = paymentHoldStatus
    @paymentHoldDetails = paymentHoldDetails
    @refundAmount = refundAmount
    @refundStatus = refundStatus
    @refundArray = refundArray
    @isMultiLegShipping = isMultiLegShipping
    @multiLegShippingDetails = multiLegShippingDetails
    @monetaryDetails = monetaryDetails
    @pickupDetails = pickupDetails
    @pickupMethodSelected = pickupMethodSelected
    @sellerUserID = sellerUserID
    @sellerEIASToken = sellerEIASToken
    @cancelReason = cancelReason
    @cancelStatus = cancelStatus
    @cancelReasonDetails = cancelReasonDetails
    @shippingConvenienceCharge = shippingConvenienceCharge
    @cancelDetail = cancelDetail
    @logisticsPlanType = logisticsPlanType
    @buyerTaxIdentifier = buyerTaxIdentifier
    @buyerPackageEnclosures = buyerPackageEnclosures
    @extendedOrderID = extendedOrderID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedItemArrayType
#   itemArray - EBay::ItemArrayType
#   paginationResult - EBay::PaginationResultType
class PaginatedItemArrayType
  attr_accessor :itemArray
  attr_accessor :paginationResult
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemArray = nil, paginationResult = nil)
    @itemArray = itemArray
    @paginationResult = paginationResult
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedOrderTransactionArrayType
#   orderTransactionArray - EBay::OrderTransactionArrayType
#   paginationResult - EBay::PaginationResultType
class PaginatedOrderTransactionArrayType
  attr_accessor :orderTransactionArray
  attr_accessor :paginationResult
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(orderTransactionArray = nil, paginationResult = nil)
    @orderTransactionArray = orderTransactionArray
    @paginationResult = paginationResult
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginatedTransactionArrayType
#   transactionArray - EBay::TransactionArrayType
#   paginationResult - EBay::PaginationResultType
class PaginatedTransactionArrayType
  attr_accessor :transactionArray
  attr_accessor :paginationResult

  def initialize(transactionArray = nil, paginationResult = nil)
    @transactionArray = transactionArray
    @paginationResult = paginationResult
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaginationResultType
#   totalNumberOfPages - SOAP::SOAPInt
#   totalNumberOfEntries - SOAP::SOAPInt
class PaginationResultType
  attr_accessor :totalNumberOfPages
  attr_accessor :totalNumberOfEntries
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalNumberOfPages = nil, totalNumberOfEntries = nil)
    @totalNumberOfPages = totalNumberOfPages
    @totalNumberOfEntries = totalNumberOfEntries
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaisaPayFullEscrowEnabledDefinitionType
class PaisaPayFullEscrowEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PayPalBuyerProtectionEnabledDefinitionType
class PayPalBuyerProtectionEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PayPalRequiredDefinitionType
class PayPalRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PayPalRequiredForStoreOwnerDefinitionType
class PayPalRequiredForStoreOwnerDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentDetailsType
#   hoursToDeposit - SOAP::SOAPInt
#   daysToFullPayment - SOAP::SOAPInt
#   depositAmount - EBay::AmountType
#   depositType - EBay::DepositTypeCodeType
class PaymentDetailsType
  attr_accessor :hoursToDeposit
  attr_accessor :daysToFullPayment
  attr_accessor :depositAmount
  attr_accessor :depositType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(hoursToDeposit = nil, daysToFullPayment = nil, depositAmount = nil, depositType = nil)
    @hoursToDeposit = hoursToDeposit
    @daysToFullPayment = daysToFullPayment
    @depositAmount = depositAmount
    @depositType = depositType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentHoldDetailType
#   expectedReleaseDate - SOAP::SOAPDateTime
#   requiredSellerActionArray - EBay::RequiredSellerActionArrayType
#   numOfReqSellerActions - SOAP::SOAPInt
#   paymentHoldReason - EBay::PaymentHoldReasonCodeType
class PaymentHoldDetailType
  attr_accessor :expectedReleaseDate
  attr_accessor :requiredSellerActionArray
  attr_accessor :numOfReqSellerActions
  attr_accessor :paymentHoldReason
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(expectedReleaseDate = nil, requiredSellerActionArray = nil, numOfReqSellerActions = nil, paymentHoldReason = nil)
    @expectedReleaseDate = expectedReleaseDate
    @requiredSellerActionArray = requiredSellerActionArray
    @numOfReqSellerActions = numOfReqSellerActions
    @paymentHoldReason = paymentHoldReason
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentInformationCodeType
#   payment - EBay::PaymentTransactionCodeType
class PaymentInformationCodeType
  attr_accessor :payment
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(payment = [])
    @payment = payment
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentInformationType
#   payment - EBay::PaymentTransactionType
class PaymentInformationType
  attr_accessor :payment
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(payment = [])
    @payment = payment
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentMethodDefinitionType
class PaymentMethodDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentOptionDetailsType
#   paymentOption - EBay::BuyerPaymentMethodCodeType
#   description - SOAP::SOAPString
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class PaymentOptionDetailsType
  attr_accessor :paymentOption
  attr_accessor :description
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paymentOption = nil, description = nil, detailVersion = nil, updateTime = nil)
    @paymentOption = paymentOption
    @description = description
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentOptionsGroupEnabledDefinitionType
class PaymentOptionsGroupEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentTransactionCodeType
#   paymentStatus - EBay::PaymentTransactionStatusCodeType
#   payer - EBay::UserIdentityType
#   payee - EBay::UserIdentityType
#   paymentTime - SOAP::SOAPDateTime
#   paymentAmount - EBay::AmountType
#   referenceID - EBay::TransactionReferenceType
#   feeOrCreditAmount - EBay::AmountType
#   paymentReferenceID - EBay::TransactionReferenceType
class PaymentTransactionCodeType
  attr_accessor :paymentStatus
  attr_accessor :payer
  attr_accessor :payee
  attr_accessor :paymentTime
  attr_accessor :paymentAmount
  attr_accessor :referenceID
  attr_accessor :feeOrCreditAmount
  attr_accessor :paymentReferenceID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paymentStatus = nil, payer = nil, payee = nil, paymentTime = nil, paymentAmount = nil, referenceID = nil, feeOrCreditAmount = nil, paymentReferenceID = [])
    @paymentStatus = paymentStatus
    @payer = payer
    @payee = payee
    @paymentTime = paymentTime
    @paymentAmount = paymentAmount
    @referenceID = referenceID
    @feeOrCreditAmount = feeOrCreditAmount
    @paymentReferenceID = paymentReferenceID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentTransactionType
#   paymentStatus - EBay::PaymentTransactionStatusCodeType
#   payer - EBay::UserIdentityType
#   payee - EBay::UserIdentityType
#   paymentTime - SOAP::SOAPDateTime
#   paymentAmount - EBay::AmountType
#   referenceID - EBay::TransactionReferenceType
#   feeOrCreditAmount - EBay::AmountType
#   paymentReferenceID - EBay::TransactionReferenceType
class PaymentTransactionType
  attr_accessor :paymentStatus
  attr_accessor :payer
  attr_accessor :payee
  attr_accessor :paymentTime
  attr_accessor :paymentAmount
  attr_accessor :referenceID
  attr_accessor :feeOrCreditAmount
  attr_accessor :paymentReferenceID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paymentStatus = nil, payer = nil, payee = nil, paymentTime = nil, paymentAmount = nil, referenceID = nil, feeOrCreditAmount = nil, paymentReferenceID = [])
    @paymentStatus = paymentStatus
    @payer = payer
    @payee = payee
    @paymentTime = paymentTime
    @paymentAmount = paymentAmount
    @referenceID = referenceID
    @feeOrCreditAmount = feeOrCreditAmount
    @paymentReferenceID = paymentReferenceID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentsInformationCodeType
#   payments - EBay::PaymentInformationCodeType
class PaymentsInformationCodeType
  attr_accessor :payments
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(payments = nil)
    @payments = payments
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PaymentsInformationType
#   payments - EBay::PaymentInformationType
#   refunds - EBay::RefundInformationType
class PaymentsInformationType
  attr_accessor :payments
  attr_accessor :refunds
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(payments = nil, refunds = nil)
    @payments = payments
    @refunds = refunds
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PerformanceDashboardType
#   site - EBay::SiteCodeType
#   status - EBay::PerformanceStatusCodeType
#   alert - EBay::SellerDashboardAlertType
class PerformanceDashboardType
  attr_accessor :site
  attr_accessor :status
  attr_accessor :alert
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(site = [], status = nil, alert = nil)
    @site = site
    @status = status
    @alert = alert
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PickupDetailsType
#   pickupOptions - EBay::PickupOptionsType
class PickupDetailsType
  attr_accessor :pickupOptions
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pickupOptions = [])
    @pickupOptions = pickupOptions
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PickupDropOffEnabledDefinitionType
class PickupDropOffEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PickupInStoreDetailsType
#   eligibleForPickupInStore - SOAP::SOAPBoolean
#   eligibleForPickupDropOff - SOAP::SOAPBoolean
class PickupInStoreDetailsType
  attr_accessor :eligibleForPickupInStore
  attr_accessor :eligibleForPickupDropOff
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eligibleForPickupInStore = nil, eligibleForPickupDropOff = nil)
    @eligibleForPickupInStore = eligibleForPickupInStore
    @eligibleForPickupDropOff = eligibleForPickupDropOff
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PickupMethodSelectedType
#   pickupMethod - SOAP::SOAPToken
#   pickupStoreID - SOAP::SOAPString
#   pickupStatus - EBay::PickupStatusCodeType
#   merchantPickupCode - SOAP::SOAPString
#   pickupFulfillmentTime - SOAP::SOAPDateTime
#   pickupLocationUUID - SOAP::SOAPString
class PickupMethodSelectedType
  attr_accessor :pickupMethod
  attr_accessor :pickupStoreID
  attr_accessor :pickupStatus
  attr_accessor :merchantPickupCode
  attr_accessor :pickupFulfillmentTime
  attr_accessor :pickupLocationUUID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pickupMethod = nil, pickupStoreID = nil, pickupStatus = nil, merchantPickupCode = nil, pickupFulfillmentTime = nil, pickupLocationUUID = nil)
    @pickupMethod = pickupMethod
    @pickupStoreID = pickupStoreID
    @pickupStatus = pickupStatus
    @merchantPickupCode = merchantPickupCode
    @pickupFulfillmentTime = pickupFulfillmentTime
    @pickupLocationUUID = pickupLocationUUID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PickupOptionsType
#   pickupMethod - SOAP::SOAPToken
#   pickupPriority - SOAP::SOAPInt
class PickupOptionsType
  attr_accessor :pickupMethod
  attr_accessor :pickupPriority
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pickupMethod = nil, pickupPriority = nil)
    @pickupMethod = pickupMethod
    @pickupPriority = pickupPriority
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureDetailsType
#   galleryType - EBay::GalleryTypeCodeType
#   galleryURL - SOAP::SOAPAnyURI
#   photoDisplay - EBay::PhotoDisplayCodeType
#   pictureURL - SOAP::SOAPAnyURI
#   pictureSource - EBay::PictureSourceCodeType
#   galleryDuration - SOAP::SOAPToken
#   galleryStatus - EBay::GalleryStatusCodeType
#   galleryErrorInfo - SOAP::SOAPString
#   externalPictureURL - SOAP::SOAPAnyURI
#   extendedPictureDetails - EBay::ExtendedPictureDetailsType
class PictureDetailsType
  attr_accessor :galleryType
  attr_accessor :galleryURL
  attr_accessor :photoDisplay
  attr_accessor :pictureURL
  attr_accessor :pictureSource
  attr_accessor :galleryDuration
  attr_accessor :galleryStatus
  attr_accessor :galleryErrorInfo
  attr_accessor :externalPictureURL
  attr_accessor :extendedPictureDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(galleryType = nil, galleryURL = nil, photoDisplay = nil, pictureURL = [], pictureSource = nil, galleryDuration = nil, galleryStatus = nil, galleryErrorInfo = nil, externalPictureURL = [], extendedPictureDetails = nil)
    @galleryType = galleryType
    @galleryURL = galleryURL
    @photoDisplay = photoDisplay
    @pictureURL = pictureURL
    @pictureSource = pictureSource
    @galleryDuration = galleryDuration
    @galleryStatus = galleryStatus
    @galleryErrorInfo = galleryErrorInfo
    @externalPictureURL = externalPictureURL
    @extendedPictureDetails = extendedPictureDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerDetailsType
#   subscriptionLevel - EBay::PictureManagerSubscriptionLevelCodeType
#   storageUsed - SOAP::SOAPInt
#   totalStorageAvailable - SOAP::SOAPInt
#   keepOriginal - SOAP::SOAPBoolean
#   watermarkEPS - SOAP::SOAPBoolean
#   watermarkUserID - SOAP::SOAPBoolean
#   folder - EBay::PictureManagerFolderType
class PictureManagerDetailsType
  attr_accessor :subscriptionLevel
  attr_accessor :storageUsed
  attr_accessor :totalStorageAvailable
  attr_accessor :keepOriginal
  attr_accessor :watermarkEPS
  attr_accessor :watermarkUserID
  attr_accessor :folder
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(subscriptionLevel = nil, storageUsed = nil, totalStorageAvailable = nil, keepOriginal = nil, watermarkEPS = nil, watermarkUserID = nil, folder = [])
    @subscriptionLevel = subscriptionLevel
    @storageUsed = storageUsed
    @totalStorageAvailable = totalStorageAvailable
    @keepOriginal = keepOriginal
    @watermarkEPS = watermarkEPS
    @watermarkUserID = watermarkUserID
    @folder = folder
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerFolderType
#   folderID - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   picture - EBay::PictureManagerPictureType
class PictureManagerFolderType
  attr_accessor :folderID
  attr_accessor :name
  attr_accessor :picture
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, name = nil, picture = [])
    @folderID = folderID
    @name = name
    @picture = picture
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureDisplayType
#   displayType - EBay::PictureManagerPictureDisplayTypeCodeType
#   uRL - SOAP::SOAPAnyURI
#   size - SOAP::SOAPInt
#   height - SOAP::SOAPInt
#   width - SOAP::SOAPInt
class PictureManagerPictureDisplayType
  attr_accessor :displayType
  attr_accessor :uRL
  attr_accessor :size
  attr_accessor :height
  attr_accessor :width
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayType = nil, uRL = nil, size = nil, height = nil, width = nil)
    @displayType = displayType
    @uRL = uRL
    @size = size
    @height = height
    @width = width
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureType
#   pictureURL - SOAP::SOAPAnyURI
#   name - SOAP::SOAPString
#   date - SOAP::SOAPDateTime
#   displayFormat - EBay::PictureManagerPictureDisplayType
class PictureManagerPictureType
  attr_accessor :pictureURL
  attr_accessor :name
  attr_accessor :date
  attr_accessor :displayFormat
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureURL = nil, name = nil, date = nil, displayFormat = [])
    @pictureURL = pictureURL
    @name = name
    @date = date
    @displayFormat = displayFormat
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerSubscriptionType
#   subscriptionLevel - EBay::PictureManagerSubscriptionLevelCodeType
#   fee - EBay::AmountType
#   storageSize - SOAP::SOAPInt
class PictureManagerSubscriptionType
  attr_accessor :subscriptionLevel
  attr_accessor :fee
  attr_accessor :storageSize
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(subscriptionLevel = nil, fee = nil, storageSize = nil)
    @subscriptionLevel = subscriptionLevel
    @fee = fee
    @storageSize = storageSize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureSetMemberType
#   memberURL - SOAP::SOAPAnyURI
#   pictureHeight - SOAP::SOAPInt
#   pictureWidth - SOAP::SOAPInt
class PictureSetMemberType
  attr_accessor :memberURL
  attr_accessor :pictureHeight
  attr_accessor :pictureWidth
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(memberURL = nil, pictureHeight = nil, pictureWidth = nil)
    @memberURL = memberURL
    @pictureHeight = pictureHeight
    @pictureWidth = pictureWidth
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PictureURLsType
#   eBayPictureURL - SOAP::SOAPAnyURI
#   externalPictureURL - SOAP::SOAPAnyURI
class PictureURLsType
  attr_accessor :eBayPictureURL
  attr_accessor :externalPictureURL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayPictureURL = nil, externalPictureURL = nil)
    @eBayPictureURL = eBayPictureURL
    @externalPictureURL = externalPictureURL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PicturesType
#   variationSpecificName - SOAP::SOAPString
#   variationSpecificPictureSet - EBay::VariationSpecificPictureSetType
class PicturesType
  attr_accessor :variationSpecificName
  attr_accessor :variationSpecificPictureSet
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(variationSpecificName = nil, variationSpecificPictureSet = [])
    @variationSpecificName = variationSpecificName
    @variationSpecificPictureSet = variationSpecificPictureSet
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PolicyComplianceDashboardType
#   status - EBay::PolicyComplianceStatusCodeType
#   alert - EBay::SellerDashboardAlertType
class PolicyComplianceDashboardType
  attr_accessor :status
  attr_accessor :alert
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil, alert = [])
    @status = status
    @alert = alert
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PolicyViolationDurationDetailsType
#   period - EBay::PeriodCodeType
#   description - SOAP::SOAPString
class PolicyViolationDurationDetailsType
  attr_accessor :period
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(period = nil, description = nil)
    @period = period
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PowerSellerDashboardType
#   level - EBay::SellerLevelCodeType
#   alert - EBay::SellerDashboardAlertType
class PowerSellerDashboardType
  attr_accessor :level
  attr_accessor :alert
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(level = nil, alert = [])
    @level = level
    @alert = alert
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PremiumSubscriptionDefinitionType
class PremiumSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PricingRecommendationsType
#   productInfo - EBay::ProductInfoType
class PricingRecommendationsType
  attr_accessor :productInfo

  def initialize(productInfo = nil)
    @productInfo = productInfo
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProPackEnabledDefinitionType
class ProPackEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProPackPlusEnabledDefinitionType
class ProPackPlusEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProStoresCheckoutPreferenceType
#   checkoutRedirectProStores - SOAP::SOAPBoolean
#   proStoresDetails - EBay::ProStoresDetailsType
class ProStoresCheckoutPreferenceType
  attr_accessor :checkoutRedirectProStores
  attr_accessor :proStoresDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(checkoutRedirectProStores = nil, proStoresDetails = [])
    @checkoutRedirectProStores = checkoutRedirectProStores
    @proStoresDetails = proStoresDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProStoresDetailsType
#   sellerThirdPartyUsername - SOAP::SOAPString
#   storeName - SOAP::SOAPString
#   status - EBay::EnableCodeType
class ProStoresDetailsType
  attr_accessor :sellerThirdPartyUsername
  attr_accessor :storeName
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sellerThirdPartyUsername = nil, storeName = nil, status = nil)
    @sellerThirdPartyUsername = sellerThirdPartyUsername
    @storeName = storeName
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductCreationEnabledDefinitionType
class ProductCreationEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductDetailsType
#   productIdentifierUnavailableText - SOAP::SOAPString
class ProductDetailsType
  attr_accessor :productIdentifierUnavailableText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productIdentifierUnavailableText = nil)
    @productIdentifierUnavailableText = productIdentifierUnavailableText
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductFamilyType
#   parentProduct - EBay::ProductType
#   familyMembers - EBay::ProductType
#   xmlattr_hasMoreChildren - SOAP::SOAPBoolean
class ProductFamilyType
  AttrHasMoreChildren = XSD::QName.new(nil, "hasMoreChildren")

  attr_accessor :parentProduct
  attr_accessor :familyMembers
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_hasMoreChildren
    __xmlattr[AttrHasMoreChildren]
  end

  def xmlattr_hasMoreChildren=(value)
    __xmlattr[AttrHasMoreChildren] = value
  end

  def initialize(parentProduct = nil, familyMembers = [])
    @parentProduct = parentProduct
    @familyMembers = familyMembers
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductFinderConstraintType
#   displayName - SOAP::SOAPString
#   displayValue - SOAP::SOAPString
class ProductFinderConstraintType
  attr_accessor :displayName
  attr_accessor :displayValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayName = nil, displayValue = nil)
    @displayName = displayName
    @displayValue = displayValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductInfoType
#   averageStartPrice - EBay::AmountType
#   averageSoldPrice - EBay::AmountType
#   title - SOAP::SOAPString
#   productState - EBay::ProductStateCodeType
#   xmlattr_productInfoID - SOAP::SOAPString
class ProductInfoType
  AttrProductInfoID = XSD::QName.new(nil, "productInfoID")

  attr_accessor :averageStartPrice
  attr_accessor :averageSoldPrice
  attr_accessor :title
  attr_accessor :productState

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_productInfoID
    __xmlattr[AttrProductInfoID]
  end

  def xmlattr_productInfoID=(value)
    __xmlattr[AttrProductInfoID] = value
  end

  def initialize(averageStartPrice = nil, averageSoldPrice = nil, title = nil, productState = nil)
    @averageStartPrice = averageStartPrice
    @averageSoldPrice = averageSoldPrice
    @title = title
    @productState = productState
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductListingDetailsType
#   productID - SOAP::SOAPString
#   includeStockPhotoURL - SOAP::SOAPBoolean
#   includePrefilledItemInformation - SOAP::SOAPBoolean
#   useStockPhotoURLAsGallery - SOAP::SOAPBoolean
#   stockPhotoURL - SOAP::SOAPAnyURI
#   copyright - SOAP::SOAPString
#   productReferenceID - SOAP::SOAPString
#   detailsURL - SOAP::SOAPAnyURI
#   productDetailsURL - SOAP::SOAPAnyURI
#   returnSearchResultOnDuplicates - SOAP::SOAPBoolean
#   iSBN - SOAP::SOAPString
#   uPC - SOAP::SOAPString
#   eAN - SOAP::SOAPString
#   brandMPN - EBay::BrandMPNType
#   ticketListingDetails - EBay::TicketListingDetailsType
#   useFirstProduct - SOAP::SOAPBoolean
class ProductListingDetailsType
  attr_accessor :productID
  attr_accessor :includeStockPhotoURL
  attr_accessor :includePrefilledItemInformation
  attr_accessor :useStockPhotoURLAsGallery
  attr_accessor :stockPhotoURL
  attr_accessor :copyright
  attr_accessor :productReferenceID
  attr_accessor :detailsURL
  attr_accessor :productDetailsURL
  attr_accessor :returnSearchResultOnDuplicates
  attr_accessor :iSBN
  attr_accessor :uPC
  attr_accessor :eAN
  attr_accessor :brandMPN
  attr_accessor :ticketListingDetails
  attr_accessor :useFirstProduct
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productID = nil, includeStockPhotoURL = nil, includePrefilledItemInformation = nil, useStockPhotoURLAsGallery = nil, stockPhotoURL = nil, copyright = [], productReferenceID = nil, detailsURL = nil, productDetailsURL = nil, returnSearchResultOnDuplicates = nil, iSBN = nil, uPC = nil, eAN = nil, brandMPN = nil, ticketListingDetails = nil, useFirstProduct = nil)
    @productID = productID
    @includeStockPhotoURL = includeStockPhotoURL
    @includePrefilledItemInformation = includePrefilledItemInformation
    @useStockPhotoURLAsGallery = useStockPhotoURLAsGallery
    @stockPhotoURL = stockPhotoURL
    @copyright = copyright
    @productReferenceID = productReferenceID
    @detailsURL = detailsURL
    @productDetailsURL = productDetailsURL
    @returnSearchResultOnDuplicates = returnSearchResultOnDuplicates
    @iSBN = iSBN
    @uPC = uPC
    @eAN = eAN
    @brandMPN = brandMPN
    @ticketListingDetails = ticketListingDetails
    @useFirstProduct = useFirstProduct
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductRecommendationsType
class ProductRecommendationsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchPageType
#   searchCharacteristicsSet - EBay::CharacteristicsSetType
#   searchType - EBay::CharacteristicsSearchCodeType
#   sortCharacteristics - EBay::CharacteristicType
#   dataElementSet - EBay::DataElementSetType
class ProductSearchPageType
  attr_accessor :searchCharacteristicsSet
  attr_accessor :searchType
  attr_accessor :sortCharacteristics
  attr_accessor :dataElementSet
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchCharacteristicsSet = nil, searchType = nil, sortCharacteristics = [], dataElementSet = [])
    @searchCharacteristicsSet = searchCharacteristicsSet
    @searchType = searchType
    @sortCharacteristics = sortCharacteristics
    @dataElementSet = dataElementSet
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchResultType
#   iD - SOAP::SOAPString
#   numProducts - SOAP::SOAPString
#   attributeSet - EBay::ResponseAttributeSetType
#   displayStockPhotos - SOAP::SOAPBoolean
class ProductSearchResultType
  attr_accessor :iD
  attr_accessor :numProducts
  attr_accessor :attributeSet
  attr_accessor :displayStockPhotos
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(iD = nil, numProducts = nil, attributeSet = [], displayStockPhotos = nil)
    @iD = iD
    @numProducts = numProducts
    @attributeSet = attributeSet
    @displayStockPhotos = displayStockPhotos
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductSearchType
#   productSearchID - SOAP::SOAPString
#   attributeSetID - SOAP::SOAPInt
#   productFinderID - SOAP::SOAPInt
#   productID - SOAP::SOAPString
#   sortAttributeID - SOAP::SOAPInt
#   maxChildrenPerFamily - SOAP::SOAPInt
#   searchAttributes - EBay::SearchAttributesType
#   pagination - EBay::PaginationType
#   availableItemsOnly - SOAP::SOAPBoolean
#   queryKeywords - SOAP::SOAPString
#   characteristicSetIDs - EBay::CharacteristicSetIDsType
#   productReferenceID - SOAP::SOAPString
#   externalProductID - EBay::ExternalProductIDType
class ProductSearchType
  attr_accessor :productSearchID
  attr_accessor :attributeSetID
  attr_accessor :productFinderID
  attr_accessor :productID
  attr_accessor :sortAttributeID
  attr_accessor :maxChildrenPerFamily
  attr_accessor :searchAttributes
  attr_accessor :pagination
  attr_accessor :availableItemsOnly
  attr_accessor :queryKeywords
  attr_accessor :characteristicSetIDs
  attr_accessor :productReferenceID
  attr_accessor :externalProductID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productSearchID = nil, attributeSetID = nil, productFinderID = nil, productID = nil, sortAttributeID = nil, maxChildrenPerFamily = nil, searchAttributes = [], pagination = nil, availableItemsOnly = nil, queryKeywords = nil, characteristicSetIDs = nil, productReferenceID = nil, externalProductID = nil)
    @productSearchID = productSearchID
    @attributeSetID = attributeSetID
    @productFinderID = productFinderID
    @productID = productID
    @sortAttributeID = sortAttributeID
    @maxChildrenPerFamily = maxChildrenPerFamily
    @searchAttributes = searchAttributes
    @pagination = pagination
    @availableItemsOnly = availableItemsOnly
    @queryKeywords = queryKeywords
    @characteristicSetIDs = characteristicSetIDs
    @productReferenceID = productReferenceID
    @externalProductID = externalProductID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductSuggestionType
#   title - SOAP::SOAPString
#   ePID - SOAP::SOAPString
#   stockPhoto - SOAP::SOAPString
#   recommended - SOAP::SOAPBoolean
class ProductSuggestionType
  attr_accessor :title
  attr_accessor :ePID
  attr_accessor :stockPhoto
  attr_accessor :recommended
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(title = nil, ePID = nil, stockPhoto = nil, recommended = nil)
    @title = title
    @ePID = ePID
    @stockPhoto = stockPhoto
    @recommended = recommended
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductSuggestionsType
#   productSuggestion - EBay::ProductSuggestionType
class ProductSuggestionsType
  attr_accessor :productSuggestion
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productSuggestion = [])
    @productSuggestion = productSuggestion
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProductType
#   characteristicsSet - EBay::CharacteristicsSetType
#   detailsURL - SOAP::SOAPAnyURI
#   numItems - SOAP::SOAPInt
#   minPrice - EBay::AmountType
#   maxPrice - EBay::AmountType
#   productReferenceID - SOAP::SOAPString
#   xmlattr_productID - SOAP::SOAPString
#   xmlattr_stockPhotoURL - SOAP::SOAPAnyURI
#   xmlattr_title - SOAP::SOAPString
class ProductType
  AttrProductID = XSD::QName.new(nil, "productID")
  AttrStockPhotoURL = XSD::QName.new(nil, "stockPhotoURL")
  AttrTitle = XSD::QName.new(nil, "title")

  attr_accessor :characteristicsSet
  attr_accessor :detailsURL
  attr_accessor :numItems
  attr_accessor :minPrice
  attr_accessor :maxPrice
  attr_accessor :productReferenceID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_productID
    __xmlattr[AttrProductID]
  end

  def xmlattr_productID=(value)
    __xmlattr[AttrProductID] = value
  end

  def xmlattr_stockPhotoURL
    __xmlattr[AttrStockPhotoURL]
  end

  def xmlattr_stockPhotoURL=(value)
    __xmlattr[AttrStockPhotoURL] = value
  end

  def xmlattr_title
    __xmlattr[AttrTitle]
  end

  def xmlattr_title=(value)
    __xmlattr[AttrTitle] = value
  end

  def initialize(characteristicsSet = nil, detailsURL = nil, numItems = nil, minPrice = nil, maxPrice = nil, productReferenceID = nil)
    @characteristicsSet = characteristicsSet
    @detailsURL = detailsURL
    @numItems = numItems
    @minPrice = minPrice
    @maxPrice = maxPrice
    @productReferenceID = productReferenceID
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}ProfileCategoryGroupDefinitionType
class ProfileCategoryGroupDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotedItemType
#   itemID - (any)
#   pictureURL - SOAP::SOAPString
#   position - SOAP::SOAPInt
#   selectionType - EBay::PromotionItemSelectionCodeType
#   title - SOAP::SOAPString
#   listingType - EBay::ListingTypeCodeType
#   promotionDetails - EBay::PromotionDetailsType
#   timeLeft - SOAP::SOAPDuration
class PromotedItemType
  attr_accessor :itemID
  attr_accessor :pictureURL
  attr_accessor :position
  attr_accessor :selectionType
  attr_accessor :title
  attr_accessor :listingType
  attr_accessor :promotionDetails
  attr_accessor :timeLeft
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, pictureURL = nil, position = nil, selectionType = nil, title = nil, listingType = nil, promotionDetails = [], timeLeft = nil)
    @itemID = itemID
    @pictureURL = pictureURL
    @position = position
    @selectionType = selectionType
    @title = title
    @listingType = listingType
    @promotionDetails = promotionDetails
    @timeLeft = timeLeft
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionDetailsType
#   promotionPrice - EBay::AmountType
#   promotionPriceType - EBay::PromotionItemPriceTypeCodeType
#   bidCount - SOAP::SOAPInt
#   convertedPromotionPrice - EBay::AmountType
class PromotionDetailsType
  attr_accessor :promotionPrice
  attr_accessor :promotionPriceType
  attr_accessor :bidCount
  attr_accessor :convertedPromotionPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(promotionPrice = nil, promotionPriceType = nil, bidCount = nil, convertedPromotionPrice = nil)
    @promotionPrice = promotionPrice
    @promotionPriceType = promotionPriceType
    @bidCount = bidCount
    @convertedPromotionPrice = convertedPromotionPrice
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionRuleArrayType
class PromotionRuleArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}PromotionRuleType
#   promotedStoreCategoryID - SOAP::SOAPLong
#   promotedeBayCategoryID - SOAP::SOAPString
#   promotedKeywords - SOAP::SOAPString
#   referringItemID - (any)
#   referringStoreCategoryID - SOAP::SOAPLong
#   referringeBayCategoryID - SOAP::SOAPString
#   referringKeywords - SOAP::SOAPString
#   promotionScheme - EBay::PromotionSchemeCodeType
#   promotionMethod - EBay::PromotionMethodCodeType
class PromotionRuleType
  attr_accessor :promotedStoreCategoryID
  attr_accessor :promotedeBayCategoryID
  attr_accessor :promotedKeywords
  attr_accessor :referringItemID
  attr_accessor :referringStoreCategoryID
  attr_accessor :referringeBayCategoryID
  attr_accessor :referringKeywords
  attr_accessor :promotionScheme
  attr_accessor :promotionMethod
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(promotedStoreCategoryID = nil, promotedeBayCategoryID = nil, promotedKeywords = nil, referringItemID = nil, referringStoreCategoryID = nil, referringeBayCategoryID = nil, referringKeywords = nil, promotionScheme = nil, promotionMethod = nil)
    @promotedStoreCategoryID = promotedStoreCategoryID
    @promotedeBayCategoryID = promotedeBayCategoryID
    @promotedKeywords = promotedKeywords
    @referringItemID = referringItemID
    @referringStoreCategoryID = referringStoreCategoryID
    @referringeBayCategoryID = referringeBayCategoryID
    @referringKeywords = referringKeywords
    @promotionScheme = promotionScheme
    @promotionMethod = promotionMethod
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalSaleArrayType
class PromotionalSaleArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalSaleDetailsType
#   originalPrice - EBay::AmountType
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
class PromotionalSaleDetailsType
  attr_accessor :originalPrice
  attr_accessor :startTime
  attr_accessor :endTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(originalPrice = nil, startTime = nil, endTime = nil)
    @originalPrice = originalPrice
    @startTime = startTime
    @endTime = endTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalSaleType
#   promotionalSaleID - SOAP::SOAPLong
#   promotionalSaleName - SOAP::SOAPString
#   promotionalSaleItemIDArray - EBay::ItemIDArrayType
#   status - EBay::PromotionalSaleStatusCodeType
#   discountType - EBay::DiscountCodeType
#   discountValue - SOAP::SOAPDouble
#   promotionalSaleStartTime - SOAP::SOAPDateTime
#   promotionalSaleEndTime - SOAP::SOAPDateTime
#   promotionalSaleType - EBay::PromotionalSaleTypeCodeType
class PromotionalSaleType
  attr_accessor :promotionalSaleID
  attr_accessor :promotionalSaleName
  attr_accessor :promotionalSaleItemIDArray
  attr_accessor :status
  attr_accessor :discountType
  attr_accessor :discountValue
  attr_accessor :promotionalSaleStartTime
  attr_accessor :promotionalSaleEndTime
  attr_accessor :promotionalSaleType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(promotionalSaleID = nil, promotionalSaleName = nil, promotionalSaleItemIDArray = nil, status = nil, discountType = nil, discountValue = nil, promotionalSaleStartTime = nil, promotionalSaleEndTime = nil, promotionalSaleType = nil)
    @promotionalSaleID = promotionalSaleID
    @promotionalSaleName = promotionalSaleName
    @promotionalSaleItemIDArray = promotionalSaleItemIDArray
    @status = status
    @discountType = discountType
    @discountValue = discountValue
    @promotionalSaleStartTime = promotionalSaleStartTime
    @promotionalSaleEndTime = promotionalSaleEndTime
    @promotionalSaleType = promotionalSaleType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalShippingDiscountDetailsType
#   discountName - EBay::DiscountNameCodeType
#   shippingCost - EBay::AmountType
#   orderAmount - EBay::AmountType
#   itemCount - SOAP::SOAPInt
class PromotionalShippingDiscountDetailsType
  attr_accessor :discountName
  attr_accessor :shippingCost
  attr_accessor :orderAmount
  attr_accessor :itemCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(discountName = nil, shippingCost = nil, orderAmount = nil, itemCount = nil)
    @discountName = discountName
    @shippingCost = shippingCost
    @orderAmount = orderAmount
    @itemCount = itemCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}PurchaseReminderEmailPreferencesType
#   purchaseReminderEmailPreferences - SOAP::SOAPBoolean
class PurchaseReminderEmailPreferencesType
  attr_accessor :purchaseReminderEmailPreferences
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(purchaseReminderEmailPreferences = nil)
    @purchaseReminderEmailPreferences = purchaseReminderEmailPreferences
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}QuantityInfoType
#   minimumRemnantSet - SOAP::SOAPInt
class QuantityInfoType
  attr_accessor :minimumRemnantSet
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(minimumRemnantSet = nil)
    @minimumRemnantSet = minimumRemnantSet
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}QuantityRestrictionPerBuyerInfoType
#   maximumQuantity - SOAP::SOAPInt
class QuantityRestrictionPerBuyerInfoType
  attr_accessor :maximumQuantity

  def initialize(maximumQuantity = nil)
    @maximumQuantity = maximumQuantity
  end
end

# {urn:ebay:apis:eBLBaseComponents}RateTableDetailsType
#   domesticRateTable - SOAP::SOAPString
#   internationalRateTable - SOAP::SOAPString
class RateTableDetailsType
  attr_accessor :domesticRateTable
  attr_accessor :internationalRateTable
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(domesticRateTable = nil, internationalRateTable = nil)
    @domesticRateTable = domesticRateTable
    @internationalRateTable = internationalRateTable
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReasonCodeDetailType
#   briefText - SOAP::SOAPString
#   detailedText - SOAP::SOAPString
#   xmlattr_codeID - SOAP::SOAPLong
class ReasonCodeDetailType
  AttrCodeID = XSD::QName.new(nil, "codeID")

  attr_accessor :briefText
  attr_accessor :detailedText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_codeID
    __xmlattr[AttrCodeID]
  end

  def xmlattr_codeID=(value)
    __xmlattr[AttrCodeID] = value
  end

  def initialize(briefText = nil, detailedText = nil)
    @briefText = briefText
    @detailedText = detailedText
    @__xmlele_any = nil
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}RecommendationType
#   fieldGroup - SOAP::SOAPString
#   fieldName - SOAP::SOAPString
#   recommendationCode - SOAP::SOAPString
#   recommendedValue - SOAP::SOAPString
#   message - SOAP::SOAPString
class RecommendationType
  attr_accessor :fieldGroup
  attr_accessor :fieldName
  attr_accessor :recommendationCode
  attr_accessor :recommendedValue
  attr_accessor :message
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(fieldGroup = nil, fieldName = nil, recommendationCode = nil, recommendedValue = [], message = nil)
    @fieldGroup = fieldGroup
    @fieldName = fieldName
    @recommendationCode = recommendationCode
    @recommendedValue = recommendedValue
    @message = message
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RecommendationValidationRulesType
#   valueType - EBay::ValueTypeCodeType
#   minValues - SOAP::SOAPInt
#   maxValues - SOAP::SOAPInt
#   selectionMode - EBay::SelectionModeCodeType
#   confidence - SOAP::SOAPInt
#   relationship - EBay::NameValueRelationshipType
#   variationPicture - EBay::VariationPictureRuleCodeType
#   variationSpecifics - EBay::VariationSpecificsRuleCodeType
#   valueFormat - EBay::ValueFormatCodeType
class RecommendationValidationRulesType
  attr_accessor :valueType
  attr_accessor :minValues
  attr_accessor :maxValues
  attr_accessor :selectionMode
  attr_accessor :confidence
  attr_accessor :relationship
  attr_accessor :variationPicture
  attr_accessor :variationSpecifics
  attr_accessor :valueFormat
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(valueType = nil, minValues = nil, maxValues = nil, selectionMode = nil, confidence = nil, relationship = [], variationPicture = nil, variationSpecifics = nil, valueFormat = nil)
    @valueType = valueType
    @minValues = minValues
    @maxValues = maxValues
    @selectionMode = selectionMode
    @confidence = confidence
    @relationship = relationship
    @variationPicture = variationPicture
    @variationSpecifics = variationSpecifics
    @valueFormat = valueFormat
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RecommendationsType
#   categoryID - SOAP::SOAPString
#   nameRecommendation - EBay::NameRecommendationType
#   updated - SOAP::SOAPBoolean
class RecommendationsType
  attr_accessor :categoryID
  attr_accessor :nameRecommendation
  attr_accessor :updated
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, nameRecommendation = [], updated = nil)
    @categoryID = categoryID
    @nameRecommendation = nameRecommendation
    @updated = updated
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RecoupmentPolicyConsentType
#   site - EBay::SiteCodeType
class RecoupmentPolicyConsentType
  attr_accessor :site
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(site = [])
    @site = site
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundArrayType
class RefundArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}RefundDetailsType
#   refundOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class RefundDetailsType
  attr_accessor :refundOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundOption = nil, description = nil)
    @refundOption = refundOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundFailureReasonType
#   refundFailureCode - EBay::RefundFailureCodeType
class RefundFailureReasonType
  attr_accessor :refundFailureCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundFailureCode = nil)
    @refundFailureCode = refundFailureCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundFundingSourceArrayType
#   refundFundingSource - EBay::RefundFundingSourceType
class RefundFundingSourceArrayType
  attr_accessor :refundFundingSource
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundFundingSource = [])
    @refundFundingSource = refundFundingSource
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundFundingSourceType
#   refundingSourceType - EBay::RefundingSourceTypeCodeType
#   accountNumber - SOAP::SOAPString
#   refundAmount - EBay::AmountType
#   sellerExternalTransactionID - SOAP::SOAPString
#   buyerExternalTransactionID - SOAP::SOAPString
class RefundFundingSourceType
  attr_accessor :refundingSourceType
  attr_accessor :accountNumber
  attr_accessor :refundAmount
  attr_accessor :sellerExternalTransactionID
  attr_accessor :buyerExternalTransactionID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundingSourceType = nil, accountNumber = nil, refundAmount = nil, sellerExternalTransactionID = nil, buyerExternalTransactionID = nil)
    @refundingSourceType = refundingSourceType
    @accountNumber = accountNumber
    @refundAmount = refundAmount
    @sellerExternalTransactionID = sellerExternalTransactionID
    @buyerExternalTransactionID = buyerExternalTransactionID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundInformationType
#   refund - EBay::RefundTransactionInfoType
class RefundInformationType
  attr_accessor :refund
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refund = [])
    @refund = refund
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundLineArrayType
#   refundLine - EBay::RefundLineType
class RefundLineArrayType
  attr_accessor :refundLine
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundLine = [])
    @refundLine = refundLine
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundLineType
#   xmlattr_type - SOAP::SOAPToken
class RefundLineType < ::String
  AttrType = XSD::QName.new(nil, "type")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundTransactionArrayType
#   refundTransaction - EBay::RefundTransactionType
class RefundTransactionArrayType
  attr_accessor :refundTransaction
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundTransaction = [])
    @refundTransaction = refundTransaction
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundTransactionInfoType
#   refundStatus - EBay::PaymentTransactionStatusCodeType
#   refundType - EBay::RefundSourceTypeCodeType
#   refundTo - EBay::UserIdentityType
#   refundTime - SOAP::SOAPDateTime
#   refundAmount - EBay::AmountType
#   referenceID - EBay::TransactionReferenceType
#   feeOrCreditAmount - EBay::AmountType
class RefundTransactionInfoType
  attr_accessor :refundStatus
  attr_accessor :refundType
  attr_accessor :refundTo
  attr_accessor :refundTime
  attr_accessor :refundAmount
  attr_accessor :referenceID
  attr_accessor :feeOrCreditAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundStatus = nil, refundType = nil, refundTo = nil, refundTime = nil, refundAmount = nil, referenceID = nil, feeOrCreditAmount = nil)
    @refundStatus = refundStatus
    @refundType = refundType
    @refundTo = refundTo
    @refundTime = refundTime
    @refundAmount = refundAmount
    @referenceID = referenceID
    @feeOrCreditAmount = feeOrCreditAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundTransactionType
#   orderID - SOAP::SOAPString
#   itemID - SOAP::SOAPString
#   transactionID - SOAP::SOAPString
#   refundLineArray - EBay::RefundLineArrayType
class RefundTransactionType
  attr_accessor :orderID
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :refundLineArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(orderID = nil, itemID = nil, transactionID = nil, refundLineArray = nil)
    @orderID = orderID
    @itemID = itemID
    @transactionID = transactionID
    @refundLineArray = refundLineArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RefundType
#   refundFromSeller - EBay::AmountType
#   totalRefundToBuyer - EBay::AmountType
#   refundTime - SOAP::SOAPDateTime
#   refundID - SOAP::SOAPString
#   refundTransactionArray - EBay::RefundTransactionArrayType
#   refundAmount - EBay::AmountType
#   refundStatus - EBay::RefundStatusCodeType
#   refundFailureReason - EBay::RefundFailureReasonType
#   refundFundingSourceArray - EBay::RefundFundingSourceArrayType
#   externalReferenceID - SOAP::SOAPString
#   refundRequestedTime - SOAP::SOAPDateTime
#   refundCompletionTime - SOAP::SOAPDateTime
#   estimatedRefundCompletionTime - SOAP::SOAPDateTime
#   sellerNoteToBuyer - SOAP::SOAPString
class RefundType
  attr_accessor :refundFromSeller
  attr_accessor :totalRefundToBuyer
  attr_accessor :refundTime
  attr_accessor :refundID
  attr_accessor :refundTransactionArray
  attr_accessor :refundAmount
  attr_accessor :refundStatus
  attr_accessor :refundFailureReason
  attr_accessor :refundFundingSourceArray
  attr_accessor :externalReferenceID
  attr_accessor :refundRequestedTime
  attr_accessor :refundCompletionTime
  attr_accessor :estimatedRefundCompletionTime
  attr_accessor :sellerNoteToBuyer
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundFromSeller = nil, totalRefundToBuyer = nil, refundTime = nil, refundID = nil, refundTransactionArray = nil, refundAmount = nil, refundStatus = nil, refundFailureReason = nil, refundFundingSourceArray = nil, externalReferenceID = nil, refundRequestedTime = nil, refundCompletionTime = nil, estimatedRefundCompletionTime = nil, sellerNoteToBuyer = nil)
    @refundFromSeller = refundFromSeller
    @totalRefundToBuyer = totalRefundToBuyer
    @refundTime = refundTime
    @refundID = refundID
    @refundTransactionArray = refundTransactionArray
    @refundAmount = refundAmount
    @refundStatus = refundStatus
    @refundFailureReason = refundFailureReason
    @refundFundingSourceArray = refundFundingSourceArray
    @externalReferenceID = externalReferenceID
    @refundRequestedTime = refundRequestedTime
    @refundCompletionTime = refundCompletionTime
    @estimatedRefundCompletionTime = estimatedRefundCompletionTime
    @sellerNoteToBuyer = sellerNoteToBuyer
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RegionDetailsType
#   regionID - SOAP::SOAPString
#   description - SOAP::SOAPString
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class RegionDetailsType
  attr_accessor :regionID
  attr_accessor :description
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(regionID = nil, description = nil, detailVersion = nil, updateTime = nil)
    @regionID = regionID
    @description = description
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RegionOfOriginDetailsType
#   regionOfOrigin - SOAP::SOAPString
#   description - SOAP::SOAPString
#   status - EBay::StatusCodeType
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class RegionOfOriginDetailsType
  attr_accessor :regionOfOrigin
  attr_accessor :description
  attr_accessor :status
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(regionOfOrigin = nil, description = nil, status = nil, detailVersion = nil, updateTime = nil)
    @regionOfOrigin = regionOfOrigin
    @description = description
    @status = status
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RegularSubscriptionDefinitionType
class RegularSubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReminderCustomizationType
#   durationInDays - SOAP::SOAPInt
#   include - SOAP::SOAPBoolean
class ReminderCustomizationType
  attr_accessor :durationInDays
  attr_accessor :include

  def initialize(durationInDays = nil, include = nil)
    @durationInDays = durationInDays
    @include = include
  end
end

# {urn:ebay:apis:eBLBaseComponents}RemindersType
#   paymentToSendCount - SOAP::SOAPInt
#   feedbackToReceiveCount - SOAP::SOAPInt
#   feedbackToSendCount - SOAP::SOAPInt
#   outbidCount - SOAP::SOAPInt
#   paymentToReceiveCount - SOAP::SOAPInt
#   secondChanceOfferCount - SOAP::SOAPInt
#   shippingNeededCount - SOAP::SOAPInt
#   relistingNeededCount - SOAP::SOAPInt
#   totalNewLeadsCount - SOAP::SOAPInt
#   docsForCCProcessingToSendCount - SOAP::SOAPInt
#   rTEToProcessCount - SOAP::SOAPInt
#   itemReceiptToConfirmCount - SOAP::SOAPInt
#   refundOnHoldCount - SOAP::SOAPInt
#   refundCancelledCount - SOAP::SOAPInt
#   shippingDetailsToBeProvidedCount - SOAP::SOAPInt
#   itemReceiptConfirmationToReceiveCount - SOAP::SOAPInt
#   refundInitiatedCount - SOAP::SOAPInt
#   pendingRTERequestCount - SOAP::SOAPInt
#   declinedRTERequestCount - SOAP::SOAPInt
class RemindersType
  attr_accessor :paymentToSendCount
  attr_accessor :feedbackToReceiveCount
  attr_accessor :feedbackToSendCount
  attr_accessor :outbidCount
  attr_accessor :paymentToReceiveCount
  attr_accessor :secondChanceOfferCount
  attr_accessor :shippingNeededCount
  attr_accessor :relistingNeededCount
  attr_accessor :totalNewLeadsCount
  attr_accessor :docsForCCProcessingToSendCount
  attr_accessor :rTEToProcessCount
  attr_accessor :itemReceiptToConfirmCount
  attr_accessor :refundOnHoldCount
  attr_accessor :refundCancelledCount
  attr_accessor :shippingDetailsToBeProvidedCount
  attr_accessor :itemReceiptConfirmationToReceiveCount
  attr_accessor :refundInitiatedCount
  attr_accessor :pendingRTERequestCount
  attr_accessor :declinedRTERequestCount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paymentToSendCount = nil, feedbackToReceiveCount = nil, feedbackToSendCount = nil, outbidCount = nil, paymentToReceiveCount = nil, secondChanceOfferCount = nil, shippingNeededCount = nil, relistingNeededCount = nil, totalNewLeadsCount = nil, docsForCCProcessingToSendCount = nil, rTEToProcessCount = nil, itemReceiptToConfirmCount = nil, refundOnHoldCount = nil, refundCancelledCount = nil, shippingDetailsToBeProvidedCount = nil, itemReceiptConfirmationToReceiveCount = nil, refundInitiatedCount = nil, pendingRTERequestCount = nil, declinedRTERequestCount = nil)
    @paymentToSendCount = paymentToSendCount
    @feedbackToReceiveCount = feedbackToReceiveCount
    @feedbackToSendCount = feedbackToSendCount
    @outbidCount = outbidCount
    @paymentToReceiveCount = paymentToReceiveCount
    @secondChanceOfferCount = secondChanceOfferCount
    @shippingNeededCount = shippingNeededCount
    @relistingNeededCount = relistingNeededCount
    @totalNewLeadsCount = totalNewLeadsCount
    @docsForCCProcessingToSendCount = docsForCCProcessingToSendCount
    @rTEToProcessCount = rTEToProcessCount
    @itemReceiptToConfirmCount = itemReceiptToConfirmCount
    @refundOnHoldCount = refundOnHoldCount
    @refundCancelledCount = refundCancelledCount
    @shippingDetailsToBeProvidedCount = shippingDetailsToBeProvidedCount
    @itemReceiptConfirmationToReceiveCount = itemReceiptConfirmationToReceiveCount
    @refundInitiatedCount = refundInitiatedCount
    @pendingRTERequestCount = pendingRTERequestCount
    @declinedRTERequestCount = declinedRTERequestCount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RequiredSellerActionArrayType
class RequiredSellerActionArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}ResponseAttributeSetType
#   approximatePages - SOAP::SOAPInt
#   attributeSetID - SOAP::SOAPInt
#   hasMore - SOAP::SOAPBoolean
#   productFamilies - EBay::ProductFamilyType
#   productFinderConstraints - EBay::ProductFinderConstraintType
#   tooManyMatchesFound - SOAP::SOAPBoolean
#   totalProducts - SOAP::SOAPInt
class ResponseAttributeSetType
  attr_accessor :approximatePages
  attr_accessor :attributeSetID
  attr_accessor :hasMore
  attr_accessor :productFamilies
  attr_accessor :productFinderConstraints
  attr_accessor :tooManyMatchesFound
  attr_accessor :totalProducts
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(approximatePages = nil, attributeSetID = nil, hasMore = nil, productFamilies = [], productFinderConstraints = [], tooManyMatchesFound = nil, totalProducts = nil)
    @approximatePages = approximatePages
    @attributeSetID = attributeSetID
    @hasMore = hasMore
    @productFamilies = productFamilies
    @productFinderConstraints = productFinderConstraints
    @tooManyMatchesFound = tooManyMatchesFound
    @totalProducts = totalProducts
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RestockingFeeValueDetailsType
#   restockingFeeValueOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class RestockingFeeValueDetailsType
  attr_accessor :restockingFeeValueOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(restockingFeeValueOption = nil, description = nil)
    @restockingFeeValueOption = restockingFeeValueOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReturnPolicyDetailsType
#   refund - EBay::RefundDetailsType
#   returnsWithin - EBay::ReturnsWithinDetailsType
#   returnsAccepted - EBay::ReturnsAcceptedDetailsType
#   description - SOAP::SOAPBoolean
#   warrantyOffered - EBay::WarrantyOfferedDetailsType
#   warrantyType - EBay::WarrantyTypeDetailsType
#   warrantyDuration - EBay::WarrantyDurationDetailsType
#   eAN - SOAP::SOAPBoolean
#   shippingCostPaidBy - EBay::ShippingCostPaidByDetailsType
#   restockingFeeValue - EBay::RestockingFeeValueDetailsType
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class ReturnPolicyDetailsType
  attr_accessor :refund
  attr_accessor :returnsWithin
  attr_accessor :returnsAccepted
  attr_accessor :description
  attr_accessor :warrantyOffered
  attr_accessor :warrantyType
  attr_accessor :warrantyDuration
  attr_accessor :eAN
  attr_accessor :shippingCostPaidBy
  attr_accessor :restockingFeeValue
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refund = [], returnsWithin = [], returnsAccepted = [], description = nil, warrantyOffered = [], warrantyType = [], warrantyDuration = [], eAN = nil, shippingCostPaidBy = [], restockingFeeValue = [], detailVersion = nil, updateTime = nil)
    @refund = refund
    @returnsWithin = returnsWithin
    @returnsAccepted = returnsAccepted
    @description = description
    @warrantyOffered = warrantyOffered
    @warrantyType = warrantyType
    @warrantyDuration = warrantyDuration
    @eAN = eAN
    @shippingCostPaidBy = shippingCostPaidBy
    @restockingFeeValue = restockingFeeValue
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReturnPolicyEnabledDefinitionType
class ReturnPolicyEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReturnPolicyType
#   refundOption - SOAP::SOAPToken
#   refund - SOAP::SOAPString
#   returnsWithinOption - SOAP::SOAPToken
#   returnsWithin - SOAP::SOAPString
#   returnsAcceptedOption - SOAP::SOAPToken
#   returnsAccepted - SOAP::SOAPString
#   description - SOAP::SOAPString
#   warrantyOfferedOption - SOAP::SOAPToken
#   warrantyOffered - SOAP::SOAPString
#   warrantyTypeOption - SOAP::SOAPToken
#   warrantyType - SOAP::SOAPString
#   warrantyDurationOption - SOAP::SOAPToken
#   warrantyDuration - SOAP::SOAPString
#   eAN - SOAP::SOAPString
#   shippingCostPaidByOption - SOAP::SOAPToken
#   shippingCostPaidBy - SOAP::SOAPString
#   restockingFeeValue - SOAP::SOAPToken
#   restockingFeeValueOption - SOAP::SOAPToken
#   extendedHolidayReturns - SOAP::SOAPBoolean
class ReturnPolicyType
  attr_accessor :refundOption
  attr_accessor :refund
  attr_accessor :returnsWithinOption
  attr_accessor :returnsWithin
  attr_accessor :returnsAcceptedOption
  attr_accessor :returnsAccepted
  attr_accessor :description
  attr_accessor :warrantyOfferedOption
  attr_accessor :warrantyOffered
  attr_accessor :warrantyTypeOption
  attr_accessor :warrantyType
  attr_accessor :warrantyDurationOption
  attr_accessor :warrantyDuration
  attr_accessor :eAN
  attr_accessor :shippingCostPaidByOption
  attr_accessor :shippingCostPaidBy
  attr_accessor :restockingFeeValue
  attr_accessor :restockingFeeValueOption
  attr_accessor :extendedHolidayReturns
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(refundOption = nil, refund = nil, returnsWithinOption = nil, returnsWithin = nil, returnsAcceptedOption = nil, returnsAccepted = nil, description = nil, warrantyOfferedOption = nil, warrantyOffered = nil, warrantyTypeOption = nil, warrantyType = nil, warrantyDurationOption = nil, warrantyDuration = nil, eAN = nil, shippingCostPaidByOption = nil, shippingCostPaidBy = nil, restockingFeeValue = nil, restockingFeeValueOption = nil, extendedHolidayReturns = nil)
    @refundOption = refundOption
    @refund = refund
    @returnsWithinOption = returnsWithinOption
    @returnsWithin = returnsWithin
    @returnsAcceptedOption = returnsAcceptedOption
    @returnsAccepted = returnsAccepted
    @description = description
    @warrantyOfferedOption = warrantyOfferedOption
    @warrantyOffered = warrantyOffered
    @warrantyTypeOption = warrantyTypeOption
    @warrantyType = warrantyType
    @warrantyDurationOption = warrantyDurationOption
    @warrantyDuration = warrantyDuration
    @eAN = eAN
    @shippingCostPaidByOption = shippingCostPaidByOption
    @shippingCostPaidBy = shippingCostPaidBy
    @restockingFeeValue = restockingFeeValue
    @restockingFeeValueOption = restockingFeeValueOption
    @extendedHolidayReturns = extendedHolidayReturns
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReturnsAcceptedDetailsType
#   returnsAcceptedOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class ReturnsAcceptedDetailsType
  attr_accessor :returnsAcceptedOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(returnsAcceptedOption = nil, description = nil)
    @returnsAcceptedOption = returnsAcceptedOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReturnsWithinDetailsType
#   returnsWithinOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class ReturnsWithinDetailsType
  attr_accessor :returnsWithinOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(returnsWithinOption = nil, description = nil)
    @returnsWithinOption = returnsWithinOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviewDetailsType
#   averageRating - SOAP::SOAPFloat
#   review - EBay::ReviewType
class ReviewDetailsType
  attr_accessor :averageRating
  attr_accessor :review
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(averageRating = nil, review = [])
    @averageRating = averageRating
    @review = review
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviewType
#   uRL - SOAP::SOAPAnyURI
#   title - SOAP::SOAPString
#   rating - SOAP::SOAPInt
#   text - SOAP::SOAPString
#   userID - (any)
#   creationTime - SOAP::SOAPDateTime
class ReviewType
  attr_accessor :uRL
  attr_accessor :title
  attr_accessor :rating
  attr_accessor :text
  attr_accessor :userID
  attr_accessor :creationTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(uRL = nil, title = nil, rating = nil, text = nil, userID = nil, creationTime = nil)
    @uRL = uRL
    @title = title
    @rating = rating
    @text = text
    @userID = userID
    @creationTime = creationTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}RevisePriceAllowedDefinitionType
class RevisePriceAllowedDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseQuantityAllowedDefinitionType
class ReviseQuantityAllowedDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ReviseStatusType
#   itemRevised - SOAP::SOAPBoolean
#   buyItNowAdded - SOAP::SOAPBoolean
#   buyItNowLowered - SOAP::SOAPBoolean
#   reserveLowered - SOAP::SOAPBoolean
#   reserveRemoved - SOAP::SOAPBoolean
class ReviseStatusType
  attr_accessor :itemRevised
  attr_accessor :buyItNowAdded
  attr_accessor :buyItNowLowered
  attr_accessor :reserveLowered
  attr_accessor :reserveRemoved
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemRevised = nil, buyItNowAdded = nil, buyItNowLowered = nil, reserveLowered = nil, reserveRemoved = nil)
    @itemRevised = itemRevised
    @buyItNowAdded = buyItNowAdded
    @buyItNowLowered = buyItNowLowered
    @reserveLowered = reserveLowered
    @reserveRemoved = reserveRemoved
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SIFFTASRecommendationsType
#   attributeSetArray - EBay::AttributeSetArrayType
class SIFFTASRecommendationsType
  attr_accessor :attributeSetArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeSetArray = nil)
    @attributeSetArray = attributeSetArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SKUArrayType
class SKUArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}SMSSubscriptionType
#   sMSPhone - SOAP::SOAPString
#   userStatus - EBay::SMSSubscriptionUserStatusCodeType
#   carrierID - EBay::WirelessCarrierIDCodeType
#   errorCode - EBay::SMSSubscriptionErrorCodeCodeType
#   itemToUnsubscribe - (any)
class SMSSubscriptionType
  attr_accessor :sMSPhone
  attr_accessor :userStatus
  attr_accessor :carrierID
  attr_accessor :errorCode
  attr_accessor :itemToUnsubscribe
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sMSPhone = nil, userStatus = nil, carrierID = nil, errorCode = nil, itemToUnsubscribe = nil)
    @sMSPhone = sMSPhone
    @userStatus = userStatus
    @carrierID = carrierID
    @errorCode = errorCode
    @itemToUnsubscribe = itemToUnsubscribe
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SafePaymentRequiredDefinitionType
class SafePaymentRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SalesTaxType
#   salesTaxPercent - SOAP::SOAPFloat
#   salesTaxState - SOAP::SOAPString
#   shippingIncludedInTax - SOAP::SOAPBoolean
#   salesTaxAmount - EBay::AmountType
class SalesTaxType
  attr_accessor :salesTaxPercent
  attr_accessor :salesTaxState
  attr_accessor :shippingIncludedInTax
  attr_accessor :salesTaxAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(salesTaxPercent = nil, salesTaxState = nil, shippingIncludedInTax = nil, salesTaxAmount = nil)
    @salesTaxPercent = salesTaxPercent
    @salesTaxState = salesTaxState
    @shippingIncludedInTax = shippingIncludedInTax
    @salesTaxAmount = salesTaxAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ScheduleType
#   scheduleID - SOAP::SOAPInt
#   scheduleTime - SOAP::SOAPDateTime
class ScheduleType
  attr_accessor :scheduleID
  attr_accessor :scheduleTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(scheduleID = nil, scheduleTime = nil)
    @scheduleID = scheduleID
    @scheduleTime = scheduleTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SchedulingInfoType
#   maxScheduledMinutes - SOAP::SOAPInt
#   minScheduledMinutes - SOAP::SOAPInt
#   maxScheduledItems - SOAP::SOAPInt
class SchedulingInfoType
  attr_accessor :maxScheduledMinutes
  attr_accessor :minScheduledMinutes
  attr_accessor :maxScheduledItems
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxScheduledMinutes = nil, minScheduledMinutes = nil, maxScheduledItems = nil)
    @maxScheduledMinutes = maxScheduledMinutes
    @minScheduledMinutes = minScheduledMinutes
    @maxScheduledItems = maxScheduledItems
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchAttributesType
#   attributeID - SOAP::SOAPInt
#   dateSpecifier - EBay::DateSpecifierCodeType
#   rangeSpecifier - EBay::RangeCodeType
#   valueList - EBay::ValType
class SearchAttributesType
  attr_accessor :attributeID
  attr_accessor :dateSpecifier
  attr_accessor :rangeSpecifier
  attr_accessor :valueList
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(attributeID = nil, dateSpecifier = nil, rangeSpecifier = nil, valueList = [])
    @attributeID = attributeID
    @dateSpecifier = dateSpecifier
    @rangeSpecifier = rangeSpecifier
    @valueList = valueList
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchDetailsType
#   buyItNowEnabled - SOAP::SOAPBoolean
#   picture - SOAP::SOAPBoolean
#   recentListing - SOAP::SOAPBoolean
class SearchDetailsType
  attr_accessor :buyItNowEnabled
  attr_accessor :picture
  attr_accessor :recentListing
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(buyItNowEnabled = nil, picture = nil, recentListing = nil)
    @buyItNowEnabled = buyItNowEnabled
    @picture = picture
    @recentListing = recentListing
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SearchStandingDashboardType
#   status - EBay::SearchStandingStatusCodeType
class SearchStandingDashboardType
  attr_accessor :status
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil)
    @status = status
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerAccountDashboardType
#   status - EBay::SellerAccountStatusCodeType
#   alert - EBay::SellerDashboardAlertType
class SellerAccountDashboardType
  attr_accessor :status
  attr_accessor :alert
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil, alert = [])
    @status = status
    @alert = alert
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerContactDetailsEnabledDefinitionType
class SellerContactDetailsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerDashboardAlertType
#   severity - EBay::SellerDashboardAlertSeverityCodeType
#   text - SOAP::SOAPString
class SellerDashboardAlertType
  attr_accessor :severity
  attr_accessor :text
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(severity = nil, text = nil)
    @severity = severity
    @text = text
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerDiscountsType
#   originalItemPrice - EBay::AmountType
#   originalItemShippingCost - EBay::AmountType
#   originalShippingService - SOAP::SOAPToken
#   sellerDiscount - EBay::SellerDiscountType
class SellerDiscountsType
  attr_accessor :originalItemPrice
  attr_accessor :originalItemShippingCost
  attr_accessor :originalShippingService
  attr_accessor :sellerDiscount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(originalItemPrice = nil, originalItemShippingCost = nil, originalShippingService = nil, sellerDiscount = [])
    @originalItemPrice = originalItemPrice
    @originalItemShippingCost = originalItemShippingCost
    @originalShippingService = originalShippingService
    @sellerDiscount = sellerDiscount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerDiscountType
#   campaignID - SOAP::SOAPLong
#   campaignDisplayName - SOAP::SOAPString
#   itemDiscountAmount - EBay::AmountType
#   shippingDiscountAmount - EBay::AmountType
class SellerDiscountType
  attr_accessor :campaignID
  attr_accessor :campaignDisplayName
  attr_accessor :itemDiscountAmount
  attr_accessor :shippingDiscountAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(campaignID = nil, campaignDisplayName = nil, itemDiscountAmount = nil, shippingDiscountAmount = nil)
    @campaignID = campaignID
    @campaignDisplayName = campaignDisplayName
    @itemDiscountAmount = itemDiscountAmount
    @shippingDiscountAmount = shippingDiscountAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerExcludeShipToLocationPreferencesType
#   excludeShipToLocation - SOAP::SOAPString
class SellerExcludeShipToLocationPreferencesType
  attr_accessor :excludeShipToLocation
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(excludeShipToLocation = [])
    @excludeShipToLocation = excludeShipToLocation
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerFavoriteItemPreferencesType
#   searchKeywords - SOAP::SOAPString
#   storeCategoryID - SOAP::SOAPLong
#   listingType - EBay::ListingTypeCodeType
#   searchSortOrder - EBay::StoreItemListSortOrderCodeType
#   minPrice - EBay::AmountType
#   maxPrice - EBay::AmountType
#   favoriteItemID - (any)
class SellerFavoriteItemPreferencesType
  attr_accessor :searchKeywords
  attr_accessor :storeCategoryID
  attr_accessor :listingType
  attr_accessor :searchSortOrder
  attr_accessor :minPrice
  attr_accessor :maxPrice
  attr_accessor :favoriteItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchKeywords = nil, storeCategoryID = nil, listingType = nil, searchSortOrder = nil, minPrice = nil, maxPrice = nil, favoriteItemID = [])
    @searchKeywords = searchKeywords
    @storeCategoryID = storeCategoryID
    @listingType = listingType
    @searchSortOrder = searchSortOrder
    @minPrice = minPrice
    @maxPrice = maxPrice
    @favoriteItemID = favoriteItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerFeeDiscountDashboardType
#   percent - SOAP::SOAPFloat
class SellerFeeDiscountDashboardType
  attr_accessor :percent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(percent = nil)
    @percent = percent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentPreferencesType
#   alwaysUseThisPaymentAddress - SOAP::SOAPBoolean
#   displayPayNowButton - EBay::DisplayPayNowButtonCodeType
#   payPalPreferred - SOAP::SOAPBoolean
#   defaultPayPalEmailAddress - SOAP::SOAPString
#   payPalAlwaysOn - SOAP::SOAPBoolean
#   sellerPaymentAddress - EBay::AddressType
#   uPSRateOption - EBay::UPSRateOptionCodeType
#   fedExRateOption - EBay::FedExRateOptionCodeType
#   uSPSRateOption - EBay::USPSRateOptionCodeType
class SellerPaymentPreferencesType
  attr_accessor :alwaysUseThisPaymentAddress
  attr_accessor :displayPayNowButton
  attr_accessor :payPalPreferred
  attr_accessor :defaultPayPalEmailAddress
  attr_accessor :payPalAlwaysOn
  attr_accessor :sellerPaymentAddress
  attr_accessor :uPSRateOption
  attr_accessor :fedExRateOption
  attr_accessor :uSPSRateOption
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(alwaysUseThisPaymentAddress = nil, displayPayNowButton = nil, payPalPreferred = nil, defaultPayPalEmailAddress = nil, payPalAlwaysOn = nil, sellerPaymentAddress = nil, uPSRateOption = nil, fedExRateOption = nil, uSPSRateOption = nil)
    @alwaysUseThisPaymentAddress = alwaysUseThisPaymentAddress
    @displayPayNowButton = displayPayNowButton
    @payPalPreferred = payPalPreferred
    @defaultPayPalEmailAddress = defaultPayPalEmailAddress
    @payPalAlwaysOn = payPalAlwaysOn
    @sellerPaymentAddress = sellerPaymentAddress
    @uPSRateOption = uPSRateOption
    @fedExRateOption = fedExRateOption
    @uSPSRateOption = uSPSRateOption
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentProfileType
#   paymentProfileID - SOAP::SOAPLong
#   paymentProfileName - SOAP::SOAPString
class SellerPaymentProfileType
  attr_accessor :paymentProfileID
  attr_accessor :paymentProfileName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paymentProfileID = nil, paymentProfileName = nil)
    @paymentProfileID = paymentProfileID
    @paymentProfileName = paymentProfileName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   orderID - (any)
#   sellerInventoryID - SOAP::SOAPString
#   privateNotes - SOAP::SOAPString
#   externalProductID - EBay::ExternalProductIDType
#   title - SOAP::SOAPString
#   paymentType - EBay::PaymentTypeCodeType
#   transactionPrice - EBay::AmountType
#   shippingReimbursement - EBay::AmountType
#   commission - EBay::AmountType
#   amountPaid - EBay::AmountType
#   paidTime - SOAP::SOAPDateTime
#   orderLineItemID - SOAP::SOAPString
class SellerPaymentType
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :orderID
  attr_accessor :sellerInventoryID
  attr_accessor :privateNotes
  attr_accessor :externalProductID
  attr_accessor :title
  attr_accessor :paymentType
  attr_accessor :transactionPrice
  attr_accessor :shippingReimbursement
  attr_accessor :commission
  attr_accessor :amountPaid
  attr_accessor :paidTime
  attr_accessor :orderLineItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, transactionID = nil, orderID = nil, sellerInventoryID = nil, privateNotes = nil, externalProductID = nil, title = nil, paymentType = nil, transactionPrice = nil, shippingReimbursement = nil, commission = nil, amountPaid = nil, paidTime = nil, orderLineItemID = nil)
    @itemID = itemID
    @transactionID = transactionID
    @orderID = orderID
    @sellerInventoryID = sellerInventoryID
    @privateNotes = privateNotes
    @externalProductID = externalProductID
    @title = title
    @paymentType = paymentType
    @transactionPrice = transactionPrice
    @shippingReimbursement = shippingReimbursement
    @commission = commission
    @amountPaid = amountPaid
    @paidTime = paidTime
    @orderLineItemID = orderLineItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerProfilePreferencesType
#   sellerProfileOptedIn - SOAP::SOAPBoolean
#   supportedSellerProfiles - EBay::SupportedSellerProfilesType
class SellerProfilePreferencesType
  attr_accessor :sellerProfileOptedIn
  attr_accessor :supportedSellerProfiles

  def initialize(sellerProfileOptedIn = nil, supportedSellerProfiles = nil)
    @sellerProfileOptedIn = sellerProfileOptedIn
    @supportedSellerProfiles = supportedSellerProfiles
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerProfilesType
#   sellerShippingProfile - EBay::SellerShippingProfileType
#   sellerReturnProfile - EBay::SellerReturnProfileType
#   sellerPaymentProfile - EBay::SellerPaymentProfileType
class SellerProfilesType
  attr_accessor :sellerShippingProfile
  attr_accessor :sellerReturnProfile
  attr_accessor :sellerPaymentProfile
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sellerShippingProfile = nil, sellerReturnProfile = nil, sellerPaymentProfile = nil)
    @sellerShippingProfile = sellerShippingProfile
    @sellerReturnProfile = sellerReturnProfile
    @sellerPaymentProfile = sellerPaymentProfile
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerProvidedTitleSupportedDefinitionType
class SellerProvidedTitleSupportedDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerRatingSummaryArrayType
class SellerRatingSummaryArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}RecoupmentPolicyDetailsType
#   enforcedOnListingSite - SOAP::SOAPBoolean
#   enforcedOnRegistrationSite - SOAP::SOAPBoolean
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class RecoupmentPolicyDetailsType
  attr_accessor :enforcedOnListingSite
  attr_accessor :enforcedOnRegistrationSite
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(enforcedOnListingSite = nil, enforcedOnRegistrationSite = nil, detailVersion = nil, updateTime = nil)
    @enforcedOnListingSite = enforcedOnListingSite
    @enforcedOnRegistrationSite = enforcedOnRegistrationSite
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerReturnPreferencesType
#   optedIn - SOAP::SOAPBoolean
class SellerReturnPreferencesType
  attr_accessor :optedIn
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(optedIn = nil)
    @optedIn = optedIn
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerReturnProfileType
#   returnProfileID - SOAP::SOAPLong
#   returnProfileName - SOAP::SOAPString
class SellerReturnProfileType
  attr_accessor :returnProfileID
  attr_accessor :returnProfileName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(returnProfileID = nil, returnProfileName = nil)
    @returnProfileID = returnProfileID
    @returnProfileName = returnProfileName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerRoleMetricsType
#   positiveFeedbackLeftCount - SOAP::SOAPInt
#   negativeFeedbackLeftCount - SOAP::SOAPInt
#   neutralFeedbackLeftCount - SOAP::SOAPInt
#   feedbackLeftPercent - SOAP::SOAPFloat
#   repeatBuyerCount - SOAP::SOAPInt
#   repeatBuyerPercent - SOAP::SOAPFloat
#   uniqueBuyerCount - SOAP::SOAPInt
#   transactionPercent - SOAP::SOAPFloat
#   crossBorderTransactionCount - SOAP::SOAPInt
#   crossBorderTransactionPercent - SOAP::SOAPFloat
class SellerRoleMetricsType
  attr_accessor :positiveFeedbackLeftCount
  attr_accessor :negativeFeedbackLeftCount
  attr_accessor :neutralFeedbackLeftCount
  attr_accessor :feedbackLeftPercent
  attr_accessor :repeatBuyerCount
  attr_accessor :repeatBuyerPercent
  attr_accessor :uniqueBuyerCount
  attr_accessor :transactionPercent
  attr_accessor :crossBorderTransactionCount
  attr_accessor :crossBorderTransactionPercent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(positiveFeedbackLeftCount = nil, negativeFeedbackLeftCount = nil, neutralFeedbackLeftCount = nil, feedbackLeftPercent = nil, repeatBuyerCount = nil, repeatBuyerPercent = nil, uniqueBuyerCount = nil, transactionPercent = nil, crossBorderTransactionCount = nil, crossBorderTransactionPercent = nil)
    @positiveFeedbackLeftCount = positiveFeedbackLeftCount
    @negativeFeedbackLeftCount = negativeFeedbackLeftCount
    @neutralFeedbackLeftCount = neutralFeedbackLeftCount
    @feedbackLeftPercent = feedbackLeftPercent
    @repeatBuyerCount = repeatBuyerCount
    @repeatBuyerPercent = repeatBuyerPercent
    @uniqueBuyerCount = uniqueBuyerCount
    @transactionPercent = transactionPercent
    @crossBorderTransactionCount = crossBorderTransactionCount
    @crossBorderTransactionPercent = crossBorderTransactionPercent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerShippingProfileType
#   shippingProfileID - SOAP::SOAPLong
#   shippingProfileName - SOAP::SOAPString
class SellerShippingProfileType
  attr_accessor :shippingProfileID
  attr_accessor :shippingProfileName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingProfileID = nil, shippingProfileName = nil)
    @shippingProfileID = shippingProfileID
    @shippingProfileName = shippingProfileName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellerType
#   paisaPayStatus - SOAP::SOAPInt
#   allowPaymentEdit - SOAP::SOAPBoolean
#   billingCurrency - EBay::CurrencyCodeType
#   checkoutEnabled - SOAP::SOAPBoolean
#   cIPBankAccountStored - SOAP::SOAPBoolean
#   goodStanding - SOAP::SOAPBoolean
#   merchandizingPref - EBay::MerchandizingPrefCodeType
#   qualifiesForB2BVAT - SOAP::SOAPBoolean
#   sellerGuaranteeLevel - EBay::SellerGuaranteeLevelCodeType
#   sellerLevel - EBay::SellerLevelCodeType
#   sellerPaymentAddress - EBay::AddressType
#   schedulingInfo - EBay::SchedulingInfoType
#   storeOwner - SOAP::SOAPBoolean
#   storeURL - SOAP::SOAPAnyURI
#   sellerBusinessType - EBay::SellerBusinessCodeType
#   registeredBusinessSeller - SOAP::SOAPBoolean
#   storeSite - EBay::SiteCodeType
#   paymentMethod - EBay::SellerPaymentMethodCodeType
#   proStoresPreference - EBay::ProStoresCheckoutPreferenceType
#   charityRegistered - SOAP::SOAPBoolean
#   safePaymentExempt - SOAP::SOAPBoolean
#   paisaPayEscrowEMIStatus - SOAP::SOAPInt
#   charityAffiliationDetails - EBay::CharityAffiliationDetailsType
#   transactionPercent - SOAP::SOAPFloat
#   integratedMerchantCreditCardInfo - EBay::IntegratedMerchantCreditCardInfoType
#   featureEligibility - EBay::FeatureEligibilityType
#   topRatedSeller - SOAP::SOAPBoolean
#   topRatedSellerDetails - EBay::TopRatedSellerDetailsType
#   recoupmentPolicyConsent - EBay::RecoupmentPolicyConsentType
#   domesticRateTable - SOAP::SOAPBoolean
#   internationalRateTable - SOAP::SOAPBoolean
#   sellereBayPaymentProcessStatus - EBay::SellereBayPaymentProcessStatusCodeType
#   sellereBayPaymentProcessConsent - EBay::SellereBayPaymentProcessConsentCodeType
class SellerType
  attr_accessor :paisaPayStatus
  attr_accessor :allowPaymentEdit
  attr_accessor :billingCurrency
  attr_accessor :checkoutEnabled
  attr_accessor :cIPBankAccountStored
  attr_accessor :goodStanding
  attr_accessor :merchandizingPref
  attr_accessor :qualifiesForB2BVAT
  attr_accessor :sellerGuaranteeLevel
  attr_accessor :sellerLevel
  attr_accessor :sellerPaymentAddress
  attr_accessor :schedulingInfo
  attr_accessor :storeOwner
  attr_accessor :storeURL
  attr_accessor :sellerBusinessType
  attr_accessor :registeredBusinessSeller
  attr_accessor :storeSite
  attr_accessor :paymentMethod
  attr_accessor :proStoresPreference
  attr_accessor :charityRegistered
  attr_accessor :safePaymentExempt
  attr_accessor :paisaPayEscrowEMIStatus
  attr_accessor :charityAffiliationDetails
  attr_accessor :transactionPercent
  attr_accessor :integratedMerchantCreditCardInfo
  attr_accessor :featureEligibility
  attr_accessor :topRatedSeller
  attr_accessor :topRatedSellerDetails
  attr_accessor :recoupmentPolicyConsent
  attr_accessor :domesticRateTable
  attr_accessor :internationalRateTable
  attr_accessor :sellereBayPaymentProcessStatus
  attr_accessor :sellereBayPaymentProcessConsent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(paisaPayStatus = nil, allowPaymentEdit = nil, billingCurrency = nil, checkoutEnabled = nil, cIPBankAccountStored = nil, goodStanding = nil, merchandizingPref = nil, qualifiesForB2BVAT = nil, sellerGuaranteeLevel = nil, sellerLevel = nil, sellerPaymentAddress = nil, schedulingInfo = nil, storeOwner = nil, storeURL = nil, sellerBusinessType = nil, registeredBusinessSeller = nil, storeSite = nil, paymentMethod = nil, proStoresPreference = nil, charityRegistered = nil, safePaymentExempt = nil, paisaPayEscrowEMIStatus = nil, charityAffiliationDetails = nil, transactionPercent = nil, integratedMerchantCreditCardInfo = nil, featureEligibility = nil, topRatedSeller = nil, topRatedSellerDetails = nil, recoupmentPolicyConsent = nil, domesticRateTable = nil, internationalRateTable = nil, sellereBayPaymentProcessStatus = nil, sellereBayPaymentProcessConsent = nil)
    @paisaPayStatus = paisaPayStatus
    @allowPaymentEdit = allowPaymentEdit
    @billingCurrency = billingCurrency
    @checkoutEnabled = checkoutEnabled
    @cIPBankAccountStored = cIPBankAccountStored
    @goodStanding = goodStanding
    @merchandizingPref = merchandizingPref
    @qualifiesForB2BVAT = qualifiesForB2BVAT
    @sellerGuaranteeLevel = sellerGuaranteeLevel
    @sellerLevel = sellerLevel
    @sellerPaymentAddress = sellerPaymentAddress
    @schedulingInfo = schedulingInfo
    @storeOwner = storeOwner
    @storeURL = storeURL
    @sellerBusinessType = sellerBusinessType
    @registeredBusinessSeller = registeredBusinessSeller
    @storeSite = storeSite
    @paymentMethod = paymentMethod
    @proStoresPreference = proStoresPreference
    @charityRegistered = charityRegistered
    @safePaymentExempt = safePaymentExempt
    @paisaPayEscrowEMIStatus = paisaPayEscrowEMIStatus
    @charityAffiliationDetails = charityAffiliationDetails
    @transactionPercent = transactionPercent
    @integratedMerchantCreditCardInfo = integratedMerchantCreditCardInfo
    @featureEligibility = featureEligibility
    @topRatedSeller = topRatedSeller
    @topRatedSellerDetails = topRatedSellerDetails
    @recoupmentPolicyConsent = recoupmentPolicyConsent
    @domesticRateTable = domesticRateTable
    @internationalRateTable = internationalRateTable
    @sellereBayPaymentProcessStatus = sellereBayPaymentProcessStatus
    @sellereBayPaymentProcessConsent = sellereBayPaymentProcessConsent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellereBayPaymentProcessConsentCodeType
#   payoutMethodSet - SOAP::SOAPBoolean
#   payoutMethod - EBay::PayoutMethodType
#   userAgreementInfo - EBay::UserAgreementInfoType
class SellereBayPaymentProcessConsentCodeType
  attr_accessor :payoutMethodSet
  attr_accessor :payoutMethod
  attr_accessor :userAgreementInfo
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(payoutMethodSet = nil, payoutMethod = nil, userAgreementInfo = [])
    @payoutMethodSet = payoutMethodSet
    @payoutMethod = payoutMethod
    @userAgreementInfo = userAgreementInfo
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAlertType
#   alertType - EBay::SellingManagerAlertTypeCodeType
#   soldAlert - EBay::SellingManagerSoldListingsPropertyTypeCodeType
#   inventoryAlert - EBay::SellingManagerInventoryPropertyTypeCodeType
#   automationAlert - EBay::SellingManagerAutomationPropertyTypeCodeType
#   paisaPayAlert - EBay::SellingManagerPaisaPayPropertyTypeCodeType
#   generalAlert - EBay::SellingManagerGeneralPropertyTypeCodeType
#   durationInDays - SOAP::SOAPInt
#   count - SOAP::SOAPLong
class SellingManagerAlertType
  attr_accessor :alertType
  attr_accessor :soldAlert
  attr_accessor :inventoryAlert
  attr_accessor :automationAlert
  attr_accessor :paisaPayAlert
  attr_accessor :generalAlert
  attr_accessor :durationInDays
  attr_accessor :count
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(alertType = nil, soldAlert = nil, inventoryAlert = nil, automationAlert = nil, paisaPayAlert = nil, generalAlert = nil, durationInDays = nil, count = nil)
    @alertType = alertType
    @soldAlert = soldAlert
    @inventoryAlert = inventoryAlert
    @automationAlert = automationAlert
    @paisaPayAlert = paisaPayAlert
    @generalAlert = generalAlert
    @durationInDays = durationInDays
    @count = count
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAutoListAccordingToScheduleType
#   dayOfWeek - EBay::DayOfWeekCodeType
#   listingPeriodInWeeks - SOAP::SOAPInt
#   listAtSpecificTimeOfDay - SOAP::SOAPTime
#   startTime - SOAP::SOAPDateTime
#   endTime - SOAP::SOAPDateTime
#   maxActiveItemCount - SOAP::SOAPInt
#   listingHoldInventoryLevel - SOAP::SOAPInt
class SellingManagerAutoListAccordingToScheduleType
  attr_accessor :dayOfWeek
  attr_accessor :listingPeriodInWeeks
  attr_accessor :listAtSpecificTimeOfDay
  attr_accessor :startTime
  attr_accessor :endTime
  attr_accessor :maxActiveItemCount
  attr_accessor :listingHoldInventoryLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(dayOfWeek = [], listingPeriodInWeeks = nil, listAtSpecificTimeOfDay = nil, startTime = nil, endTime = nil, maxActiveItemCount = nil, listingHoldInventoryLevel = nil)
    @dayOfWeek = dayOfWeek
    @listingPeriodInWeeks = listingPeriodInWeeks
    @listAtSpecificTimeOfDay = listAtSpecificTimeOfDay
    @startTime = startTime
    @endTime = endTime
    @maxActiveItemCount = maxActiveItemCount
    @listingHoldInventoryLevel = listingHoldInventoryLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAutoListMinActiveItemsType
#   minActiveItemCount - SOAP::SOAPInt
#   listTimeFrom - SOAP::SOAPTime
#   listTimeTo - SOAP::SOAPTime
#   spacingIntervalInMinutes - SOAP::SOAPInt
#   listingHoldInventoryLevel - SOAP::SOAPInt
class SellingManagerAutoListMinActiveItemsType
  attr_accessor :minActiveItemCount
  attr_accessor :listTimeFrom
  attr_accessor :listTimeTo
  attr_accessor :spacingIntervalInMinutes
  attr_accessor :listingHoldInventoryLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(minActiveItemCount = nil, listTimeFrom = nil, listTimeTo = nil, spacingIntervalInMinutes = nil, listingHoldInventoryLevel = nil)
    @minActiveItemCount = minActiveItemCount
    @listTimeFrom = listTimeFrom
    @listTimeTo = listTimeTo
    @spacingIntervalInMinutes = spacingIntervalInMinutes
    @listingHoldInventoryLevel = listingHoldInventoryLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAutoListType
#   sourceSaleTemplateID - SOAP::SOAPLong
#   keepMinActive - EBay::SellingManagerAutoListMinActiveItemsType
#   listAccordingToSchedule - EBay::SellingManagerAutoListAccordingToScheduleType
class SellingManagerAutoListType
  attr_accessor :sourceSaleTemplateID
  attr_accessor :keepMinActive
  attr_accessor :listAccordingToSchedule
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sourceSaleTemplateID = nil, keepMinActive = nil, listAccordingToSchedule = nil)
    @sourceSaleTemplateID = sourceSaleTemplateID
    @keepMinActive = keepMinActive
    @listAccordingToSchedule = listAccordingToSchedule
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAutoRelistType
#   type - EBay::SellingManagerAutoRelistTypeCodeType
#   relistCondition - EBay::SellingManagerAutoRelistOptionCodeType
#   relistAfterDays - SOAP::SOAPInt
#   relistAfterHours - SOAP::SOAPInt
#   relistAtSpecificTimeOfDay - SOAP::SOAPTime
#   bestOfferDetails - EBay::BestOfferDetailsType
#   listingHoldInventoryLevel - SOAP::SOAPInt
class SellingManagerAutoRelistType
  attr_accessor :type
  attr_accessor :relistCondition
  attr_accessor :relistAfterDays
  attr_accessor :relistAfterHours
  attr_accessor :relistAtSpecificTimeOfDay
  attr_accessor :bestOfferDetails
  attr_accessor :listingHoldInventoryLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(type = nil, relistCondition = nil, relistAfterDays = nil, relistAfterHours = nil, relistAtSpecificTimeOfDay = nil, bestOfferDetails = nil, listingHoldInventoryLevel = nil)
    @type = type
    @relistCondition = relistCondition
    @relistAfterDays = relistAfterDays
    @relistAfterHours = relistAfterHours
    @relistAtSpecificTimeOfDay = relistAtSpecificTimeOfDay
    @bestOfferDetails = bestOfferDetails
    @listingHoldInventoryLevel = listingHoldInventoryLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAutoSecondChanceOfferType
#   secondChanceOfferCondition - EBay::SellingManagerAutoSecondChanceOfferTypeCodeType
#   amount - EBay::AmountType
#   profitPercent - SOAP::SOAPFloat
#   duration - EBay::SecondChanceOfferDurationCodeType
#   listingHoldInventoryLevel - SOAP::SOAPInt
class SellingManagerAutoSecondChanceOfferType
  attr_accessor :secondChanceOfferCondition
  attr_accessor :amount
  attr_accessor :profitPercent
  attr_accessor :duration
  attr_accessor :listingHoldInventoryLevel
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(secondChanceOfferCondition = nil, amount = nil, profitPercent = nil, duration = nil, listingHoldInventoryLevel = nil)
    @secondChanceOfferCondition = secondChanceOfferCondition
    @amount = amount
    @profitPercent = profitPercent
    @duration = duration
    @listingHoldInventoryLevel = listingHoldInventoryLevel
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerEmailLogType
#   emailType - EBay::SellingManagerEmailTypeCodeType
#   customEmailName - SOAP::SOAPString
#   emailState - EBay::SellingManagerEmailSentStatusCodeType
#   eventTime - SOAP::SOAPDateTime
class SellingManagerEmailLogType
  attr_accessor :emailType
  attr_accessor :customEmailName
  attr_accessor :emailState
  attr_accessor :eventTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(emailType = nil, customEmailName = nil, emailState = nil, eventTime = nil)
    @emailType = emailType
    @customEmailName = customEmailName
    @emailState = emailState
    @eventTime = eventTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerFolderDetailsType
#   folderID - SOAP::SOAPLong
#   parentFolderID - SOAP::SOAPLong
#   folderLevel - SOAP::SOAPLong
#   folderName - SOAP::SOAPString
#   folderComment - SOAP::SOAPString
#   childFolder - EBay::SellingManagerFolderDetailsType
#   creationTime - SOAP::SOAPDateTime
class SellingManagerFolderDetailsType
  attr_accessor :folderID
  attr_accessor :parentFolderID
  attr_accessor :folderLevel
  attr_accessor :folderName
  attr_accessor :folderComment
  attr_accessor :childFolder
  attr_accessor :creationTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(folderID = nil, parentFolderID = nil, folderLevel = nil, folderName = nil, folderComment = nil, childFolder = [], creationTime = nil)
    @folderID = folderID
    @parentFolderID = parentFolderID
    @folderLevel = folderLevel
    @folderName = folderName
    @folderComment = folderComment
    @childFolder = childFolder
    @creationTime = creationTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerOrderStatusType
#   checkoutStatus - EBay::CheckoutStatusCodeType
#   paidStatus - EBay::SellingManagerPaidStatusCodeType
#   shippedStatus - EBay::SellingManagerShippedStatusCodeType
#   eBayPaymentStatus - EBay::PaymentStatusCodeType
#   payPalTransactionID - SOAP::SOAPString
#   paymentMethodUsed - EBay::BuyerPaymentMethodCodeType
#   feedbackReceived - EBay::CommentTypeCodeType
#   feedbackSent - SOAP::SOAPBoolean
#   totalEmailsSent - SOAP::SOAPInt
#   paymentHoldStatus - EBay::PaymentHoldStatusCodeType
#   sellerInvoiceNumber - SOAP::SOAPString
#   shippedTime - SOAP::SOAPDateTime
#   paidTime - SOAP::SOAPDateTime
#   lastEmailSentTime - SOAP::SOAPDateTime
#   sellerInvoiceTime - SOAP::SOAPDateTime
#   integratedMerchantCreditCardEnabled - SOAP::SOAPBoolean
class SellingManagerOrderStatusType
  attr_accessor :checkoutStatus
  attr_accessor :paidStatus
  attr_accessor :shippedStatus
  attr_accessor :eBayPaymentStatus
  attr_accessor :payPalTransactionID
  attr_accessor :paymentMethodUsed
  attr_accessor :feedbackReceived
  attr_accessor :feedbackSent
  attr_accessor :totalEmailsSent
  attr_accessor :paymentHoldStatus
  attr_accessor :sellerInvoiceNumber
  attr_accessor :shippedTime
  attr_accessor :paidTime
  attr_accessor :lastEmailSentTime
  attr_accessor :sellerInvoiceTime
  attr_accessor :integratedMerchantCreditCardEnabled
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(checkoutStatus = nil, paidStatus = nil, shippedStatus = nil, eBayPaymentStatus = nil, payPalTransactionID = nil, paymentMethodUsed = nil, feedbackReceived = nil, feedbackSent = nil, totalEmailsSent = nil, paymentHoldStatus = nil, sellerInvoiceNumber = nil, shippedTime = nil, paidTime = nil, lastEmailSentTime = nil, sellerInvoiceTime = nil, integratedMerchantCreditCardEnabled = nil)
    @checkoutStatus = checkoutStatus
    @paidStatus = paidStatus
    @shippedStatus = shippedStatus
    @eBayPaymentStatus = eBayPaymentStatus
    @payPalTransactionID = payPalTransactionID
    @paymentMethodUsed = paymentMethodUsed
    @feedbackReceived = feedbackReceived
    @feedbackSent = feedbackSent
    @totalEmailsSent = totalEmailsSent
    @paymentHoldStatus = paymentHoldStatus
    @sellerInvoiceNumber = sellerInvoiceNumber
    @shippedTime = shippedTime
    @paidTime = paidTime
    @lastEmailSentTime = lastEmailSentTime
    @sellerInvoiceTime = sellerInvoiceTime
    @integratedMerchantCreditCardEnabled = integratedMerchantCreditCardEnabled
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerProductDetailsType
#   productName - SOAP::SOAPString
#   productID - SOAP::SOAPLong
#   customLabel - SOAP::SOAPString
#   quantityAvailable - SOAP::SOAPInt
#   unitCost - EBay::AmountType
#   folderID - SOAP::SOAPLong
#   restockAlert - SOAP::SOAPBoolean
#   restockThreshold - SOAP::SOAPInt
#   vendorInfo - EBay::SellingManagerVendorDetailsType
#   note - SOAP::SOAPString
class SellingManagerProductDetailsType
  attr_accessor :productName
  attr_accessor :productID
  attr_accessor :customLabel
  attr_accessor :quantityAvailable
  attr_accessor :unitCost
  attr_accessor :folderID
  attr_accessor :restockAlert
  attr_accessor :restockThreshold
  attr_accessor :vendorInfo
  attr_accessor :note
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(productName = nil, productID = nil, customLabel = nil, quantityAvailable = nil, unitCost = nil, folderID = nil, restockAlert = nil, restockThreshold = nil, vendorInfo = nil, note = nil)
    @productName = productName
    @productID = productID
    @customLabel = customLabel
    @quantityAvailable = quantityAvailable
    @unitCost = unitCost
    @folderID = folderID
    @restockAlert = restockAlert
    @restockThreshold = restockThreshold
    @vendorInfo = vendorInfo
    @note = note
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerProductInventoryStatusType
#   quantityScheduled - SOAP::SOAPInt
#   quantityActive - SOAP::SOAPInt
#   quantitySold - SOAP::SOAPInt
#   quantityUnsold - SOAP::SOAPInt
#   successPercent - SOAP::SOAPFloat
#   averageSellingPrice - EBay::AmountType
class SellingManagerProductInventoryStatusType
  attr_accessor :quantityScheduled
  attr_accessor :quantityActive
  attr_accessor :quantitySold
  attr_accessor :quantityUnsold
  attr_accessor :successPercent
  attr_accessor :averageSellingPrice
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(quantityScheduled = nil, quantityActive = nil, quantitySold = nil, quantityUnsold = nil, successPercent = nil, averageSellingPrice = nil)
    @quantityScheduled = quantityScheduled
    @quantityActive = quantityActive
    @quantitySold = quantitySold
    @quantityUnsold = quantityUnsold
    @successPercent = successPercent
    @averageSellingPrice = averageSellingPrice
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerProductSpecificsType
#   primaryCategoryID - SOAP::SOAPString
#   variations - EBay::VariationsType
#   itemSpecifics - EBay::NameValueListArrayType
class SellingManagerProductSpecificsType
  attr_accessor :primaryCategoryID
  attr_accessor :variations
  attr_accessor :itemSpecifics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(primaryCategoryID = nil, variations = nil, itemSpecifics = nil)
    @primaryCategoryID = primaryCategoryID
    @variations = variations
    @itemSpecifics = itemSpecifics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerProductType
#   sellingManagerProductDetails - EBay::SellingManagerProductDetailsType
#   sellingManagerTemplateDetailsArray - EBay::SellingManagerTemplateDetailsArrayType
#   sellingManagerProductInventoryStatus - EBay::SellingManagerProductInventoryStatusType
#   sellingManagerProductSpecifics - EBay::SellingManagerProductSpecificsType
class SellingManagerProductType
  attr_accessor :sellingManagerProductDetails
  attr_accessor :sellingManagerTemplateDetailsArray
  attr_accessor :sellingManagerProductInventoryStatus
  attr_accessor :sellingManagerProductSpecifics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sellingManagerProductDetails = nil, sellingManagerTemplateDetailsArray = nil, sellingManagerProductInventoryStatus = nil, sellingManagerProductSpecifics = nil)
    @sellingManagerProductDetails = sellingManagerProductDetails
    @sellingManagerTemplateDetailsArray = sellingManagerTemplateDetailsArray
    @sellingManagerProductInventoryStatus = sellingManagerProductInventoryStatus
    @sellingManagerProductSpecifics = sellingManagerProductSpecifics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerSearchType
#   searchType - EBay::SellingManagerSearchTypeCodeType
#   searchValue - SOAP::SOAPString
class SellingManagerSearchType
  attr_accessor :searchType
  attr_accessor :searchValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(searchType = nil, searchValue = nil)
    @searchType = searchType
    @searchValue = searchValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerSoldOrderType
#   sellingManagerSoldTransaction - EBay::SellingManagerSoldTransactionType
#   shippingAddress - EBay::AddressType
#   shippingDetails - EBay::ShippingDetailsType
#   cashOnDeliveryCost - EBay::AmountType
#   totalAmount - EBay::AmountType
#   totalQuantity - SOAP::SOAPInt
#   itemCost - EBay::AmountType
#   vATRate - EBay::VATRateType
#   netInsuranceFee - EBay::AmountType
#   vATInsuranceFee - EBay::AmountType
#   vATShippingFee - EBay::AmountType
#   netShippingFee - EBay::AmountType
#   netTotalAmount - EBay::AmountType
#   vATTotalAmount - EBay::AmountType
#   actualShippingCost - EBay::AmountType
#   adjustmentAmount - EBay::AmountType
#   notesToBuyer - SOAP::SOAPString
#   notesFromBuyer - SOAP::SOAPString
#   notesToSeller - SOAP::SOAPString
#   orderStatus - EBay::SellingManagerOrderStatusType
#   unpaidItemStatus - EBay::UnpaidItemStatusTypeCodeType
#   salePrice - EBay::AmountType
#   emailsSent - SOAP::SOAPInt
#   daysSinceSale - SOAP::SOAPInt
#   buyerID - SOAP::SOAPString
#   buyerEmail - SOAP::SOAPString
#   saleRecordID - SOAP::SOAPLong
#   creationTime - SOAP::SOAPDateTime
#   refundAmount - EBay::AmountType
#   refundStatus - SOAP::SOAPString
class SellingManagerSoldOrderType
  attr_accessor :sellingManagerSoldTransaction
  attr_accessor :shippingAddress
  attr_accessor :shippingDetails
  attr_accessor :cashOnDeliveryCost
  attr_accessor :totalAmount
  attr_accessor :totalQuantity
  attr_accessor :itemCost
  attr_accessor :vATRate
  attr_accessor :netInsuranceFee
  attr_accessor :vATInsuranceFee
  attr_accessor :vATShippingFee
  attr_accessor :netShippingFee
  attr_accessor :netTotalAmount
  attr_accessor :vATTotalAmount
  attr_accessor :actualShippingCost
  attr_accessor :adjustmentAmount
  attr_accessor :notesToBuyer
  attr_accessor :notesFromBuyer
  attr_accessor :notesToSeller
  attr_accessor :orderStatus
  attr_accessor :unpaidItemStatus
  attr_accessor :salePrice
  attr_accessor :emailsSent
  attr_accessor :daysSinceSale
  attr_accessor :buyerID
  attr_accessor :buyerEmail
  attr_accessor :saleRecordID
  attr_accessor :creationTime
  attr_accessor :refundAmount
  attr_accessor :refundStatus
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sellingManagerSoldTransaction = [], shippingAddress = nil, shippingDetails = nil, cashOnDeliveryCost = nil, totalAmount = nil, totalQuantity = nil, itemCost = nil, vATRate = [], netInsuranceFee = nil, vATInsuranceFee = nil, vATShippingFee = nil, netShippingFee = nil, netTotalAmount = nil, vATTotalAmount = nil, actualShippingCost = nil, adjustmentAmount = nil, notesToBuyer = nil, notesFromBuyer = nil, notesToSeller = nil, orderStatus = nil, unpaidItemStatus = nil, salePrice = nil, emailsSent = nil, daysSinceSale = nil, buyerID = nil, buyerEmail = nil, saleRecordID = nil, creationTime = nil, refundAmount = nil, refundStatus = nil)
    @sellingManagerSoldTransaction = sellingManagerSoldTransaction
    @shippingAddress = shippingAddress
    @shippingDetails = shippingDetails
    @cashOnDeliveryCost = cashOnDeliveryCost
    @totalAmount = totalAmount
    @totalQuantity = totalQuantity
    @itemCost = itemCost
    @vATRate = vATRate
    @netInsuranceFee = netInsuranceFee
    @vATInsuranceFee = vATInsuranceFee
    @vATShippingFee = vATShippingFee
    @netShippingFee = netShippingFee
    @netTotalAmount = netTotalAmount
    @vATTotalAmount = vATTotalAmount
    @actualShippingCost = actualShippingCost
    @adjustmentAmount = adjustmentAmount
    @notesToBuyer = notesToBuyer
    @notesFromBuyer = notesFromBuyer
    @notesToSeller = notesToSeller
    @orderStatus = orderStatus
    @unpaidItemStatus = unpaidItemStatus
    @salePrice = salePrice
    @emailsSent = emailsSent
    @daysSinceSale = daysSinceSale
    @buyerID = buyerID
    @buyerEmail = buyerEmail
    @saleRecordID = saleRecordID
    @creationTime = creationTime
    @refundAmount = refundAmount
    @refundStatus = refundStatus
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerSoldTransactionType
#   invoiceNumber - SOAP::SOAPString
#   transactionID - SOAP::SOAPLong
#   saleRecordID - SOAP::SOAPLong
#   itemID - (any)
#   quantitySold - SOAP::SOAPInt
#   itemPrice - EBay::AmountType
#   subtotalAmount - EBay::AmountType
#   itemTitle - SOAP::SOAPString
#   listingType - EBay::ListingTypeCodeType
#   relisted - SOAP::SOAPBoolean
#   watchCount - SOAP::SOAPInt
#   startPrice - EBay::AmountType
#   reservePrice - EBay::AmountType
#   secondChanceOfferSent - SOAP::SOAPBoolean
#   customLabel - SOAP::SOAPString
#   soldOn - EBay::TransactionPlatformCodeType
#   listedOn - EBay::TransactionPlatformCodeType
#   shipment - EBay::ShipmentType
#   charityListing - SOAP::SOAPBoolean
#   variation - EBay::VariationType
#   orderLineItemID - SOAP::SOAPString
class SellingManagerSoldTransactionType
  attr_accessor :invoiceNumber
  attr_accessor :transactionID
  attr_accessor :saleRecordID
  attr_accessor :itemID
  attr_accessor :quantitySold
  attr_accessor :itemPrice
  attr_accessor :subtotalAmount
  attr_accessor :itemTitle
  attr_accessor :listingType
  attr_accessor :relisted
  attr_accessor :watchCount
  attr_accessor :startPrice
  attr_accessor :reservePrice
  attr_accessor :secondChanceOfferSent
  attr_accessor :customLabel
  attr_accessor :soldOn
  attr_accessor :listedOn
  attr_accessor :shipment
  attr_accessor :charityListing
  attr_accessor :variation
  attr_accessor :orderLineItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(invoiceNumber = nil, transactionID = nil, saleRecordID = nil, itemID = nil, quantitySold = nil, itemPrice = nil, subtotalAmount = nil, itemTitle = nil, listingType = nil, relisted = nil, watchCount = nil, startPrice = nil, reservePrice = nil, secondChanceOfferSent = nil, customLabel = nil, soldOn = nil, listedOn = [], shipment = nil, charityListing = nil, variation = nil, orderLineItemID = nil)
    @invoiceNumber = invoiceNumber
    @transactionID = transactionID
    @saleRecordID = saleRecordID
    @itemID = itemID
    @quantitySold = quantitySold
    @itemPrice = itemPrice
    @subtotalAmount = subtotalAmount
    @itemTitle = itemTitle
    @listingType = listingType
    @relisted = relisted
    @watchCount = watchCount
    @startPrice = startPrice
    @reservePrice = reservePrice
    @secondChanceOfferSent = secondChanceOfferSent
    @customLabel = customLabel
    @soldOn = soldOn
    @listedOn = listedOn
    @shipment = shipment
    @charityListing = charityListing
    @variation = variation
    @orderLineItemID = orderLineItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerTemplateDetailsArrayType
class SellingManagerTemplateDetailsArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerTemplateDetailsType
#   saleTemplateID - SOAP::SOAPString
#   saleTemplateName - SOAP::SOAPString
#   successPercent - SOAP::SOAPFloat
#   sellingManagerProductDetails - EBay::SellingManagerProductDetailsType
#   template - EBay::ItemType
class SellingManagerTemplateDetailsType
  attr_accessor :saleTemplateID
  attr_accessor :saleTemplateName
  attr_accessor :successPercent
  attr_accessor :sellingManagerProductDetails
  attr_accessor :template
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(saleTemplateID = nil, saleTemplateName = nil, successPercent = nil, sellingManagerProductDetails = nil, template = nil)
    @saleTemplateID = saleTemplateID
    @saleTemplateName = saleTemplateName
    @successPercent = successPercent
    @sellingManagerProductDetails = sellingManagerProductDetails
    @template = template
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerVendorDetailsType
#   vendorName - SOAP::SOAPString
#   vendorContactInfo - SOAP::SOAPString
class SellingManagerVendorDetailsType
  attr_accessor :vendorName
  attr_accessor :vendorContactInfo
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(vendorName = nil, vendorContactInfo = nil)
    @vendorName = vendorName
    @vendorContactInfo = vendorContactInfo
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingStatusType
#   bidCount - SOAP::SOAPInt
#   bidIncrement - EBay::AmountType
#   convertedCurrentPrice - EBay::AmountType
#   currentPrice - EBay::AmountType
#   highBidder - EBay::UserType
#   leadCount - SOAP::SOAPInt
#   minimumToBid - EBay::AmountType
#   quantitySold - SOAP::SOAPInt
#   reserveMet - SOAP::SOAPBoolean
#   secondChanceEligible - SOAP::SOAPBoolean
#   bidderCount - SOAP::SOAPLong
#   listingStatus - EBay::ListingStatusCodeType
#   finalValueFee - EBay::AmountType
#   promotionalSaleDetails - EBay::PromotionalSaleDetailsType
#   adminEnded - SOAP::SOAPBoolean
#   soldAsBin - SOAP::SOAPBoolean
#   quantitySoldByPickupInStore - SOAP::SOAPInt
#   suggestedBidValues - EBay::SuggestedBidValueType
class SellingStatusType
  attr_accessor :bidCount
  attr_accessor :bidIncrement
  attr_accessor :convertedCurrentPrice
  attr_accessor :currentPrice
  attr_accessor :highBidder
  attr_accessor :leadCount
  attr_accessor :minimumToBid
  attr_accessor :quantitySold
  attr_accessor :reserveMet
  attr_accessor :secondChanceEligible
  attr_accessor :bidderCount
  attr_accessor :listingStatus
  attr_accessor :finalValueFee
  attr_accessor :promotionalSaleDetails
  attr_accessor :adminEnded
  attr_accessor :soldAsBin
  attr_accessor :quantitySoldByPickupInStore
  attr_accessor :suggestedBidValues
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidCount = nil, bidIncrement = nil, convertedCurrentPrice = nil, currentPrice = nil, highBidder = nil, leadCount = nil, minimumToBid = nil, quantitySold = nil, reserveMet = nil, secondChanceEligible = nil, bidderCount = nil, listingStatus = nil, finalValueFee = nil, promotionalSaleDetails = nil, adminEnded = nil, soldAsBin = nil, quantitySoldByPickupInStore = nil, suggestedBidValues = nil)
    @bidCount = bidCount
    @bidIncrement = bidIncrement
    @convertedCurrentPrice = convertedCurrentPrice
    @currentPrice = currentPrice
    @highBidder = highBidder
    @leadCount = leadCount
    @minimumToBid = minimumToBid
    @quantitySold = quantitySold
    @reserveMet = reserveMet
    @secondChanceEligible = secondChanceEligible
    @bidderCount = bidderCount
    @listingStatus = listingStatus
    @finalValueFee = finalValueFee
    @promotionalSaleDetails = promotionalSaleDetails
    @adminEnded = adminEnded
    @soldAsBin = soldAsBin
    @quantitySoldByPickupInStore = quantitySoldByPickupInStore
    @suggestedBidValues = suggestedBidValues
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SellingSummaryType
#   activeAuctionCount - SOAP::SOAPInt
#   auctionSellingCount - SOAP::SOAPInt
#   auctionBidCount - SOAP::SOAPInt
#   totalAuctionSellingValue - EBay::AmountType
#   totalSoldCount - SOAP::SOAPInt
#   totalSoldValue - EBay::AmountType
#   soldDurationInDays - SOAP::SOAPInt
class SellingSummaryType
  attr_accessor :activeAuctionCount
  attr_accessor :auctionSellingCount
  attr_accessor :auctionBidCount
  attr_accessor :totalAuctionSellingValue
  attr_accessor :totalSoldCount
  attr_accessor :totalSoldValue
  attr_accessor :soldDurationInDays

  def initialize(activeAuctionCount = nil, auctionSellingCount = nil, auctionBidCount = nil, totalAuctionSellingValue = nil, totalSoldCount = nil, totalSoldValue = nil, soldDurationInDays = nil)
    @activeAuctionCount = activeAuctionCount
    @auctionSellingCount = auctionSellingCount
    @auctionBidCount = auctionBidCount
    @totalAuctionSellingValue = totalAuctionSellingValue
    @totalSoldCount = totalSoldCount
    @totalSoldValue = totalSoldValue
    @soldDurationInDays = soldDurationInDays
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShipPackageDetailsType
#   measurementUnit - EBay::MeasurementSystemCodeType
#   packageDepth - EBay::MeasureType
#   packageLength - EBay::MeasureType
#   packageWidth - EBay::MeasureType
#   shippingIrregular - SOAP::SOAPBoolean
#   shippingPackage - EBay::ShippingPackageCodeType
#   weightMajor - EBay::MeasureType
#   weightMinor - EBay::MeasureType
class ShipPackageDetailsType
  attr_accessor :measurementUnit
  attr_accessor :packageDepth
  attr_accessor :packageLength
  attr_accessor :packageWidth
  attr_accessor :shippingIrregular
  attr_accessor :shippingPackage
  attr_accessor :weightMajor
  attr_accessor :weightMinor
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(measurementUnit = nil, packageDepth = nil, packageLength = nil, packageWidth = nil, shippingIrregular = nil, shippingPackage = nil, weightMajor = nil, weightMinor = nil)
    @measurementUnit = measurementUnit
    @packageDepth = packageDepth
    @packageLength = packageLength
    @packageWidth = packageWidth
    @shippingIrregular = shippingIrregular
    @shippingPackage = shippingPackage
    @weightMajor = weightMajor
    @weightMinor = weightMinor
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentLineItemType
#   lineItem - EBay::LineItemType
class ShipmentLineItemType
  attr_accessor :lineItem
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(lineItem = [])
    @lineItem = lineItem
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentTrackingDetailsType
#   shippingCarrierUsed - SOAP::SOAPString
#   shipmentTrackingNumber - SOAP::SOAPString
#   shipmentLineItem - EBay::ShipmentLineItemType
class ShipmentTrackingDetailsType
  attr_accessor :shippingCarrierUsed
  attr_accessor :shipmentTrackingNumber
  attr_accessor :shipmentLineItem
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingCarrierUsed = nil, shipmentTrackingNumber = nil, shipmentLineItem = nil)
    @shippingCarrierUsed = shippingCarrierUsed
    @shipmentTrackingNumber = shipmentTrackingNumber
    @shipmentLineItem = shipmentLineItem
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentType
#   estimatedDeliveryDate - SOAP::SOAPDateTime
#   insuredValue - EBay::AmountType
#   packageDepth - EBay::MeasureType
#   packageLength - EBay::MeasureType
#   packageWidth - EBay::MeasureType
#   payPalShipmentID - SOAP::SOAPString
#   shipmentID - SOAP::SOAPLong
#   postageTotal - EBay::AmountType
#   printedTime - SOAP::SOAPDateTime
#   shipFromAddress - EBay::AddressType
#   shippingAddress - EBay::AddressType
#   shippingCarrierUsed - SOAP::SOAPString
#   shippingFeature - EBay::ShippingFeatureCodeType
#   shippingPackage - EBay::ShippingPackageCodeType
#   shippingServiceUsed - SOAP::SOAPToken
#   shipmentTrackingNumber - SOAP::SOAPString
#   weightMajor - EBay::MeasureType
#   weightMinor - EBay::MeasureType
#   itemTransactionID - EBay::ItemTransactionIDType
#   deliveryDate - SOAP::SOAPDateTime
#   deliveryStatus - EBay::ShipmentDeliveryStatusCodeType
#   refundGrantedTime - SOAP::SOAPDateTime
#   refundRequestedTime - SOAP::SOAPDateTime
#   status - EBay::ShipmentStatusCodeType
#   shippedTime - SOAP::SOAPDateTime
#   notes - SOAP::SOAPString
#   shipmentTrackingDetails - EBay::ShipmentTrackingDetailsType
#   shipmentLineItem - EBay::ShipmentLineItemType
class ShipmentType
  attr_accessor :estimatedDeliveryDate
  attr_accessor :insuredValue
  attr_accessor :packageDepth
  attr_accessor :packageLength
  attr_accessor :packageWidth
  attr_accessor :payPalShipmentID
  attr_accessor :shipmentID
  attr_accessor :postageTotal
  attr_accessor :printedTime
  attr_accessor :shipFromAddress
  attr_accessor :shippingAddress
  attr_accessor :shippingCarrierUsed
  attr_accessor :shippingFeature
  attr_accessor :shippingPackage
  attr_accessor :shippingServiceUsed
  attr_accessor :shipmentTrackingNumber
  attr_accessor :weightMajor
  attr_accessor :weightMinor
  attr_accessor :itemTransactionID
  attr_accessor :deliveryDate
  attr_accessor :deliveryStatus
  attr_accessor :refundGrantedTime
  attr_accessor :refundRequestedTime
  attr_accessor :status
  attr_accessor :shippedTime
  attr_accessor :notes
  attr_accessor :shipmentTrackingDetails
  attr_accessor :shipmentLineItem
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(estimatedDeliveryDate = nil, insuredValue = nil, packageDepth = nil, packageLength = nil, packageWidth = nil, payPalShipmentID = nil, shipmentID = nil, postageTotal = nil, printedTime = nil, shipFromAddress = nil, shippingAddress = nil, shippingCarrierUsed = nil, shippingFeature = [], shippingPackage = nil, shippingServiceUsed = nil, shipmentTrackingNumber = nil, weightMajor = nil, weightMinor = nil, itemTransactionID = [], deliveryDate = nil, deliveryStatus = nil, refundGrantedTime = nil, refundRequestedTime = nil, status = nil, shippedTime = nil, notes = nil, shipmentTrackingDetails = [], shipmentLineItem = nil)
    @estimatedDeliveryDate = estimatedDeliveryDate
    @insuredValue = insuredValue
    @packageDepth = packageDepth
    @packageLength = packageLength
    @packageWidth = packageWidth
    @payPalShipmentID = payPalShipmentID
    @shipmentID = shipmentID
    @postageTotal = postageTotal
    @printedTime = printedTime
    @shipFromAddress = shipFromAddress
    @shippingAddress = shippingAddress
    @shippingCarrierUsed = shippingCarrierUsed
    @shippingFeature = shippingFeature
    @shippingPackage = shippingPackage
    @shippingServiceUsed = shippingServiceUsed
    @shipmentTrackingNumber = shipmentTrackingNumber
    @weightMajor = weightMajor
    @weightMinor = weightMinor
    @itemTransactionID = itemTransactionID
    @deliveryDate = deliveryDate
    @deliveryStatus = deliveryStatus
    @refundGrantedTime = refundGrantedTime
    @refundRequestedTime = refundRequestedTime
    @status = status
    @shippedTime = shippedTime
    @notes = notes
    @shipmentTrackingDetails = shipmentTrackingDetails
    @shipmentLineItem = shipmentLineItem
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCarrierDetailsType
#   shippingCarrierID - SOAP::SOAPInt
#   description - SOAP::SOAPString
#   shippingCarrier - EBay::ShippingCarrierCodeType
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class ShippingCarrierDetailsType
  attr_accessor :shippingCarrierID
  attr_accessor :description
  attr_accessor :shippingCarrier
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingCarrierID = nil, description = nil, shippingCarrier = nil, detailVersion = nil, updateTime = nil)
    @shippingCarrierID = shippingCarrierID
    @description = description
    @shippingCarrier = shippingCarrier
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCategoryDetailsType
#   shippingCategory - SOAP::SOAPToken
#   description - SOAP::SOAPString
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class ShippingCategoryDetailsType
  attr_accessor :shippingCategory
  attr_accessor :description
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingCategory = nil, description = nil, detailVersion = nil, updateTime = nil)
    @shippingCategory = shippingCategory
    @description = description
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCostPaidByDetailsType
#   shippingCostPaidByOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class ShippingCostPaidByDetailsType
  attr_accessor :shippingCostPaidByOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingCostPaidByOption = nil, description = nil)
    @shippingCostPaidByOption = shippingCostPaidByOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingDetailsType
#   allowPaymentEdit - SOAP::SOAPBoolean
#   applyShippingDiscount - SOAP::SOAPBoolean
#   globalShipping - SOAP::SOAPBoolean
#   calculatedShippingRate - EBay::CalculatedShippingRateType
#   changePaymentInstructions - SOAP::SOAPBoolean
#   insuranceFee - EBay::AmountType
#   insuranceOption - EBay::InsuranceOptionCodeType
#   insuranceWanted - SOAP::SOAPBoolean
#   paymentEdited - SOAP::SOAPBoolean
#   paymentInstructions - SOAP::SOAPString
#   salesTax - EBay::SalesTaxType
#   shippingRateErrorMessage - SOAP::SOAPString
#   shippingRateType - EBay::ShippingRateTypeCodeType
#   shippingServiceOptions - EBay::ShippingServiceOptionsType
#   internationalShippingServiceOption - EBay::InternationalShippingServiceOptionsType
#   shippingType - EBay::ShippingTypeCodeType
#   sellingManagerSalesRecordNumber - SOAP::SOAPInt
#   thirdPartyCheckout - SOAP::SOAPBoolean
#   taxTable - EBay::TaxTableType
#   getItFast - SOAP::SOAPBoolean
#   shippingServiceUsed - SOAP::SOAPToken
#   defaultShippingCost - EBay::AmountType
#   insuranceDetails - EBay::InsuranceDetailsType
#   internationalInsuranceDetails - EBay::InsuranceDetailsType
#   shippingDiscountProfileID - SOAP::SOAPString
#   flatShippingDiscount - EBay::FlatShippingDiscountType
#   calculatedShippingDiscount - EBay::CalculatedShippingDiscountType
#   promotionalShippingDiscount - SOAP::SOAPBoolean
#   internationalShippingDiscountProfileID - SOAP::SOAPString
#   internationalFlatShippingDiscount - EBay::FlatShippingDiscountType
#   internationalCalculatedShippingDiscount - EBay::CalculatedShippingDiscountType
#   internationalPromotionalShippingDiscount - SOAP::SOAPBoolean
#   promotionalShippingDiscountDetails - EBay::PromotionalShippingDiscountDetailsType
#   cODCost - EBay::AmountType
#   excludeShipToLocation - SOAP::SOAPString
#   sellerExcludeShipToLocationsPreference - SOAP::SOAPBoolean
#   shipmentTrackingDetails - EBay::ShipmentTrackingDetailsType
#   rateTableDetails - EBay::RateTableDetailsType
class ShippingDetailsType
  attr_accessor :allowPaymentEdit
  attr_accessor :applyShippingDiscount
  attr_accessor :globalShipping
  attr_accessor :calculatedShippingRate
  attr_accessor :changePaymentInstructions
  attr_accessor :insuranceFee
  attr_accessor :insuranceOption
  attr_accessor :insuranceWanted
  attr_accessor :paymentEdited
  attr_accessor :paymentInstructions
  attr_accessor :salesTax
  attr_accessor :shippingRateErrorMessage
  attr_accessor :shippingRateType
  attr_accessor :shippingServiceOptions
  attr_accessor :internationalShippingServiceOption
  attr_accessor :shippingType
  attr_accessor :sellingManagerSalesRecordNumber
  attr_accessor :thirdPartyCheckout
  attr_accessor :taxTable
  attr_accessor :getItFast
  attr_accessor :shippingServiceUsed
  attr_accessor :defaultShippingCost
  attr_accessor :insuranceDetails
  attr_accessor :internationalInsuranceDetails
  attr_accessor :shippingDiscountProfileID
  attr_accessor :flatShippingDiscount
  attr_accessor :calculatedShippingDiscount
  attr_accessor :promotionalShippingDiscount
  attr_accessor :internationalShippingDiscountProfileID
  attr_accessor :internationalFlatShippingDiscount
  attr_accessor :internationalCalculatedShippingDiscount
  attr_accessor :internationalPromotionalShippingDiscount
  attr_accessor :promotionalShippingDiscountDetails
  attr_accessor :cODCost
  attr_accessor :excludeShipToLocation
  attr_accessor :sellerExcludeShipToLocationsPreference
  attr_accessor :shipmentTrackingDetails
  attr_accessor :rateTableDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(allowPaymentEdit = nil, applyShippingDiscount = nil, globalShipping = nil, calculatedShippingRate = nil, changePaymentInstructions = nil, insuranceFee = nil, insuranceOption = nil, insuranceWanted = nil, paymentEdited = nil, paymentInstructions = nil, salesTax = nil, shippingRateErrorMessage = nil, shippingRateType = nil, shippingServiceOptions = [], internationalShippingServiceOption = [], shippingType = nil, sellingManagerSalesRecordNumber = nil, thirdPartyCheckout = nil, taxTable = nil, getItFast = nil, shippingServiceUsed = nil, defaultShippingCost = nil, insuranceDetails = nil, internationalInsuranceDetails = nil, shippingDiscountProfileID = nil, flatShippingDiscount = nil, calculatedShippingDiscount = nil, promotionalShippingDiscount = nil, internationalShippingDiscountProfileID = nil, internationalFlatShippingDiscount = nil, internationalCalculatedShippingDiscount = nil, internationalPromotionalShippingDiscount = nil, promotionalShippingDiscountDetails = nil, cODCost = nil, excludeShipToLocation = [], sellerExcludeShipToLocationsPreference = nil, shipmentTrackingDetails = [], rateTableDetails = nil)
    @allowPaymentEdit = allowPaymentEdit
    @applyShippingDiscount = applyShippingDiscount
    @globalShipping = globalShipping
    @calculatedShippingRate = calculatedShippingRate
    @changePaymentInstructions = changePaymentInstructions
    @insuranceFee = insuranceFee
    @insuranceOption = insuranceOption
    @insuranceWanted = insuranceWanted
    @paymentEdited = paymentEdited
    @paymentInstructions = paymentInstructions
    @salesTax = salesTax
    @shippingRateErrorMessage = shippingRateErrorMessage
    @shippingRateType = shippingRateType
    @shippingServiceOptions = shippingServiceOptions
    @internationalShippingServiceOption = internationalShippingServiceOption
    @shippingType = shippingType
    @sellingManagerSalesRecordNumber = sellingManagerSalesRecordNumber
    @thirdPartyCheckout = thirdPartyCheckout
    @taxTable = taxTable
    @getItFast = getItFast
    @shippingServiceUsed = shippingServiceUsed
    @defaultShippingCost = defaultShippingCost
    @insuranceDetails = insuranceDetails
    @internationalInsuranceDetails = internationalInsuranceDetails
    @shippingDiscountProfileID = shippingDiscountProfileID
    @flatShippingDiscount = flatShippingDiscount
    @calculatedShippingDiscount = calculatedShippingDiscount
    @promotionalShippingDiscount = promotionalShippingDiscount
    @internationalShippingDiscountProfileID = internationalShippingDiscountProfileID
    @internationalFlatShippingDiscount = internationalFlatShippingDiscount
    @internationalCalculatedShippingDiscount = internationalCalculatedShippingDiscount
    @internationalPromotionalShippingDiscount = internationalPromotionalShippingDiscount
    @promotionalShippingDiscountDetails = promotionalShippingDiscountDetails
    @cODCost = cODCost
    @excludeShipToLocation = excludeShipToLocation
    @sellerExcludeShipToLocationsPreference = sellerExcludeShipToLocationsPreference
    @shipmentTrackingDetails = shipmentTrackingDetails
    @rateTableDetails = rateTableDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingEstimatedDeliveryInfoType
#   originalDeliveryEstimatedTimeMin - SOAP::SOAPDateTime
#   originalDeliveryEstimatedTimeMax - SOAP::SOAPDateTime
class ShippingEstimatedDeliveryInfoType
  attr_accessor :originalDeliveryEstimatedTimeMin
  attr_accessor :originalDeliveryEstimatedTimeMax
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(originalDeliveryEstimatedTimeMin = nil, originalDeliveryEstimatedTimeMax = nil)
    @originalDeliveryEstimatedTimeMin = originalDeliveryEstimatedTimeMin
    @originalDeliveryEstimatedTimeMax = originalDeliveryEstimatedTimeMax
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingInsuranceType
#   insuranceOption - EBay::InsuranceOptionCodeType
#   flatRateInsuranceRangeCost - EBay::FlatRateInsuranceRangeCostType
class ShippingInsuranceType
  attr_accessor :insuranceOption
  attr_accessor :flatRateInsuranceRangeCost
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(insuranceOption = nil, flatRateInsuranceRangeCost = [])
    @insuranceOption = insuranceOption
    @flatRateInsuranceRangeCost = flatRateInsuranceRangeCost
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingLocationDetailsType
#   shippingLocation - SOAP::SOAPString
#   description - SOAP::SOAPString
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class ShippingLocationDetailsType
  attr_accessor :shippingLocation
  attr_accessor :description
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingLocation = nil, description = nil, detailVersion = nil, updateTime = nil)
    @shippingLocation = shippingLocation
    @description = description
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingPackageDetailsType
#   packageID - SOAP::SOAPInt
#   description - SOAP::SOAPString
#   shippingPackage - EBay::ShippingPackageCodeType
#   defaultValue - SOAP::SOAPBoolean
#   dimensionsSupported - SOAP::SOAPBoolean
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class ShippingPackageDetailsType
  attr_accessor :packageID
  attr_accessor :description
  attr_accessor :shippingPackage
  attr_accessor :defaultValue
  attr_accessor :dimensionsSupported
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(packageID = nil, description = nil, shippingPackage = nil, defaultValue = nil, dimensionsSupported = nil, detailVersion = nil, updateTime = nil)
    @packageID = packageID
    @description = description
    @shippingPackage = shippingPackage
    @defaultValue = defaultValue
    @dimensionsSupported = dimensionsSupported
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingPackageInfoType
#   storeID - SOAP::SOAPString
#   shippingTrackingEvent - SOAP::SOAPToken
#   scheduledDeliveryTimeMin - SOAP::SOAPDateTime
#   scheduledDeliveryTimeMax - SOAP::SOAPDateTime
#   actualDeliveryTime - SOAP::SOAPDateTime
#   estimatedDeliveryTimeMin - SOAP::SOAPDateTime
#   estimatedDeliveryTimeMax - SOAP::SOAPDateTime
class ShippingPackageInfoType
  attr_accessor :storeID
  attr_accessor :shippingTrackingEvent
  attr_accessor :scheduledDeliveryTimeMin
  attr_accessor :scheduledDeliveryTimeMax
  attr_accessor :actualDeliveryTime
  attr_accessor :estimatedDeliveryTimeMin
  attr_accessor :estimatedDeliveryTimeMax
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(storeID = nil, shippingTrackingEvent = nil, scheduledDeliveryTimeMin = nil, scheduledDeliveryTimeMax = nil, actualDeliveryTime = nil, estimatedDeliveryTimeMin = nil, estimatedDeliveryTimeMax = nil)
    @storeID = storeID
    @shippingTrackingEvent = shippingTrackingEvent
    @scheduledDeliveryTimeMin = scheduledDeliveryTimeMin
    @scheduledDeliveryTimeMax = scheduledDeliveryTimeMax
    @actualDeliveryTime = actualDeliveryTime
    @estimatedDeliveryTimeMin = estimatedDeliveryTimeMin
    @estimatedDeliveryTimeMax = estimatedDeliveryTimeMax
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceCostOverrideListType
#   shippingServiceCostOverride - EBay::ShippingServiceCostOverrideType
class ShippingServiceCostOverrideListType
  attr_accessor :shippingServiceCostOverride
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingServiceCostOverride = [])
    @shippingServiceCostOverride = shippingServiceCostOverride
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceCostOverrideType
#   shippingServicePriority - SOAP::SOAPInt
#   shippingServiceType - EBay::ShippingServiceType
#   shippingServiceCost - EBay::AmountType
#   shippingServiceAdditionalCost - EBay::AmountType
#   shippingSurcharge - EBay::AmountType
class ShippingServiceCostOverrideType
  attr_accessor :shippingServicePriority
  attr_accessor :shippingServiceType
  attr_reader :__xmlele_any
  attr_accessor :shippingServiceCost
  attr_accessor :shippingServiceAdditionalCost
  attr_accessor :shippingSurcharge

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingServicePriority = nil, shippingServiceType = nil, shippingServiceCost = nil, shippingServiceAdditionalCost = nil, shippingSurcharge = nil)
    @shippingServicePriority = shippingServicePriority
    @shippingServiceType = shippingServiceType
    @__xmlele_any = nil
    @shippingServiceCost = shippingServiceCost
    @shippingServiceAdditionalCost = shippingServiceAdditionalCost
    @shippingSurcharge = shippingSurcharge
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceDetailsType
#   description - SOAP::SOAPString
#   expeditedService - SOAP::SOAPBoolean
#   internationalService - SOAP::SOAPBoolean
#   shippingService - SOAP::SOAPToken
#   shippingServiceID - SOAP::SOAPInt
#   shippingTimeMax - SOAP::SOAPInt
#   shippingTimeMin - SOAP::SOAPInt
#   shippingServiceCode - EBay::ShippingServiceCodeType
#   serviceType - EBay::ShippingTypeCodeType
#   shippingPackage - EBay::ShippingPackageCodeType
#   dimensionsRequired - SOAP::SOAPBoolean
#   validForSellingFlow - SOAP::SOAPBoolean
#   surchargeApplicable - SOAP::SOAPBoolean
#   shippingCarrier - EBay::ShippingCarrierCodeType
#   cODService - SOAP::SOAPBoolean
#   deprecationDetails - EBay::AnnouncementMessageType
#   mappedToShippingServiceID - SOAP::SOAPInt
#   costGroupFlat - SOAP::SOAPToken
#   shippingServicePackageDetails - EBay::ShippingServicePackageDetailsType
#   weightRequired - SOAP::SOAPBoolean
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
#   shippingCategory - SOAP::SOAPToken
class ShippingServiceDetailsType
  attr_accessor :description
  attr_accessor :expeditedService
  attr_accessor :internationalService
  attr_accessor :shippingService
  attr_accessor :shippingServiceID
  attr_accessor :shippingTimeMax
  attr_accessor :shippingTimeMin
  attr_accessor :shippingServiceCode
  attr_accessor :serviceType
  attr_accessor :shippingPackage
  attr_accessor :dimensionsRequired
  attr_accessor :validForSellingFlow
  attr_accessor :surchargeApplicable
  attr_accessor :shippingCarrier
  attr_accessor :cODService
  attr_accessor :deprecationDetails
  attr_accessor :mappedToShippingServiceID
  attr_accessor :costGroupFlat
  attr_accessor :shippingServicePackageDetails
  attr_accessor :weightRequired
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_accessor :shippingCategory
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(description = nil, expeditedService = nil, internationalService = nil, shippingService = nil, shippingServiceID = nil, shippingTimeMax = nil, shippingTimeMin = nil, shippingServiceCode = nil, serviceType = [], shippingPackage = [], dimensionsRequired = nil, validForSellingFlow = nil, surchargeApplicable = nil, shippingCarrier = [], cODService = nil, deprecationDetails = [], mappedToShippingServiceID = nil, costGroupFlat = nil, shippingServicePackageDetails = [], weightRequired = nil, detailVersion = nil, updateTime = nil, shippingCategory = nil)
    @description = description
    @expeditedService = expeditedService
    @internationalService = internationalService
    @shippingService = shippingService
    @shippingServiceID = shippingServiceID
    @shippingTimeMax = shippingTimeMax
    @shippingTimeMin = shippingTimeMin
    @shippingServiceCode = shippingServiceCode
    @serviceType = serviceType
    @shippingPackage = shippingPackage
    @dimensionsRequired = dimensionsRequired
    @validForSellingFlow = validForSellingFlow
    @surchargeApplicable = surchargeApplicable
    @shippingCarrier = shippingCarrier
    @cODService = cODService
    @deprecationDetails = deprecationDetails
    @mappedToShippingServiceID = mappedToShippingServiceID
    @costGroupFlat = costGroupFlat
    @shippingServicePackageDetails = shippingServicePackageDetails
    @weightRequired = weightRequired
    @detailVersion = detailVersion
    @updateTime = updateTime
    @shippingCategory = shippingCategory
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceOptionsType
#   shippingInsuranceCost - EBay::AmountType
#   shippingService - SOAP::SOAPToken
#   shippingServiceCost - EBay::AmountType
#   shippingServiceAdditionalCost - EBay::AmountType
#   shippingServicePriority - SOAP::SOAPInt
#   expeditedService - SOAP::SOAPBoolean
#   shippingTimeMin - SOAP::SOAPInt
#   shippingTimeMax - SOAP::SOAPInt
#   shippingSurcharge - EBay::AmountType
#   freeShipping - SOAP::SOAPBoolean
#   localPickup - SOAP::SOAPBoolean
#   importCharge - EBay::AmountType
#   shippingPackageInfo - EBay::ShippingPackageInfoType
#   shippingServiceCutOffTime - SOAP::SOAPDateTime
#   logisticPlanType - SOAP::SOAPString
class ShippingServiceOptionsType
  attr_accessor :shippingInsuranceCost
  attr_accessor :shippingService
  attr_accessor :shippingServiceCost
  attr_accessor :shippingServiceAdditionalCost
  attr_accessor :shippingServicePriority
  attr_accessor :expeditedService
  attr_accessor :shippingTimeMin
  attr_accessor :shippingTimeMax
  attr_accessor :shippingSurcharge
  attr_accessor :freeShipping
  attr_accessor :localPickup
  attr_accessor :importCharge
  attr_accessor :shippingPackageInfo
  attr_accessor :shippingServiceCutOffTime
  attr_accessor :logisticPlanType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(shippingInsuranceCost = nil, shippingService = nil, shippingServiceCost = nil, shippingServiceAdditionalCost = nil, shippingServicePriority = nil, expeditedService = nil, shippingTimeMin = nil, shippingTimeMax = nil, shippingSurcharge = nil, freeShipping = nil, localPickup = nil, importCharge = nil, shippingPackageInfo = [], shippingServiceCutOffTime = nil, logisticPlanType = nil)
    @shippingInsuranceCost = shippingInsuranceCost
    @shippingService = shippingService
    @shippingServiceCost = shippingServiceCost
    @shippingServiceAdditionalCost = shippingServiceAdditionalCost
    @shippingServicePriority = shippingServicePriority
    @expeditedService = expeditedService
    @shippingTimeMin = shippingTimeMin
    @shippingTimeMax = shippingTimeMax
    @shippingSurcharge = shippingSurcharge
    @freeShipping = freeShipping
    @localPickup = localPickup
    @importCharge = importCharge
    @shippingPackageInfo = shippingPackageInfo
    @shippingServiceCutOffTime = shippingServiceCutOffTime
    @logisticPlanType = logisticPlanType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServicePackageDetailsType
#   name - EBay::ShippingPackageCodeType
#   dimensionsRequired - SOAP::SOAPBoolean
class ShippingServicePackageDetailsType
  attr_accessor :name
  attr_accessor :dimensionsRequired
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, dimensionsRequired = nil)
    @name = name
    @dimensionsRequired = dimensionsRequired
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTermRequiredDefinitionType
class ShippingTermRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteBuyerRequirementDetailsType
#   linkedPayPalAccount - SOAP::SOAPBoolean
#   maximumBuyerPolicyViolations - EBay::MaximumBuyerPolicyViolationsDetailsType
#   maximumItemRequirements - EBay::MaximumItemRequirementsDetailsType
#   maximumUnpaidItemStrikesInfo - EBay::MaximumUnpaidItemStrikesInfoDetailsType
#   minimumFeedbackScore - EBay::MinimumFeedbackScoreDetailsType
#   shipToRegistrationCountry - SOAP::SOAPBoolean
#   verifiedUserRequirements - EBay::VerifiedUserRequirementsDetailsType
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class SiteBuyerRequirementDetailsType
  attr_accessor :linkedPayPalAccount
  attr_accessor :maximumBuyerPolicyViolations
  attr_accessor :maximumItemRequirements
  attr_accessor :maximumUnpaidItemStrikesInfo
  attr_accessor :minimumFeedbackScore
  attr_accessor :shipToRegistrationCountry
  attr_accessor :verifiedUserRequirements
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(linkedPayPalAccount = nil, maximumBuyerPolicyViolations = nil, maximumItemRequirements = nil, maximumUnpaidItemStrikesInfo = nil, minimumFeedbackScore = nil, shipToRegistrationCountry = nil, verifiedUserRequirements = nil, detailVersion = nil, updateTime = nil)
    @linkedPayPalAccount = linkedPayPalAccount
    @maximumBuyerPolicyViolations = maximumBuyerPolicyViolations
    @maximumItemRequirements = maximumItemRequirements
    @maximumUnpaidItemStrikesInfo = maximumUnpaidItemStrikesInfo
    @minimumFeedbackScore = minimumFeedbackScore
    @shipToRegistrationCountry = shipToRegistrationCountry
    @verifiedUserRequirements = verifiedUserRequirements
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteDefaultsType
#   listingDuration - EBay::ListingDurationReferenceType
#   shippingTermsRequired - SOAP::SOAPBoolean
#   bestOfferEnabled - SOAP::SOAPBoolean
#   dutchBINEnabled - SOAP::SOAPBoolean
#   userConsentRequired - SOAP::SOAPBoolean
#   homePageFeaturedEnabled - SOAP::SOAPBoolean
#   proPackEnabled - SOAP::SOAPBoolean
#   basicUpgradePackEnabled - SOAP::SOAPBoolean
#   valuePackEnabled - SOAP::SOAPBoolean
#   proPackPlusEnabled - SOAP::SOAPBoolean
#   adFormatEnabled - EBay::AdFormatEnabledCodeType
#   bestOfferCounterEnabled - SOAP::SOAPBoolean
#   bestOfferAutoDeclineEnabled - SOAP::SOAPBoolean
#   localMarketSpecialitySubscription - SOAP::SOAPBoolean
#   localMarketRegularSubscription - SOAP::SOAPBoolean
#   localMarketPremiumSubscription - SOAP::SOAPBoolean
#   localMarketNonSubscription - SOAP::SOAPBoolean
#   expressEnabled - SOAP::SOAPBoolean
#   expressPicturesRequired - SOAP::SOAPBoolean
#   expressConditionRequired - SOAP::SOAPBoolean
#   minimumReservePrice - SOAP::SOAPDouble
#   sellerContactDetailsEnabled - SOAP::SOAPBoolean
#   transactionConfirmationRequestEnabled - SOAP::SOAPBoolean
#   storeInventoryEnabled - SOAP::SOAPBoolean
#   skypeMeTransactionalEnabled - SOAP::SOAPBoolean
#   skypeMeNonTransactionalEnabled - SOAP::SOAPBoolean
#   localListingDistancesRegular - SOAP::SOAPString
#   localListingDistancesSpecialty - SOAP::SOAPString
#   localListingDistancesNonSubscription - SOAP::SOAPString
#   classifiedAdPaymentMethodEnabled - EBay::ClassifiedAdPaymentMethodEnabledCodeType
#   classifiedAdShippingMethodEnabled - SOAP::SOAPBoolean
#   classifiedAdBestOfferEnabled - EBay::ClassifiedAdBestOfferEnabledCodeType
#   classifiedAdCounterOfferEnabled - SOAP::SOAPBoolean
#   classifiedAdAutoDeclineEnabled - SOAP::SOAPBoolean
#   classifiedAdContactByPhoneEnabled - SOAP::SOAPBoolean
#   classifiedAdContactByEmailEnabled - SOAP::SOAPBoolean
#   safePaymentRequired - SOAP::SOAPBoolean
#   classifiedAdPayPerLeadEnabled - SOAP::SOAPBoolean
#   itemSpecificsEnabled - EBay::ItemSpecificsEnabledCodeType
#   paisaPayFullEscrowEnabled - SOAP::SOAPBoolean
#   iSBNIdentifierEnabled - SOAP::SOAPBoolean
#   uPCIdentifierEnabled - SOAP::SOAPBoolean
#   eANIdentifierEnabled - SOAP::SOAPBoolean
#   brandMPNIdentifierEnabled - SOAP::SOAPBoolean
#   classifiedAdAutoAcceptEnabled - SOAP::SOAPBoolean
#   bestOfferAutoAcceptEnabled - SOAP::SOAPBoolean
#   crossBorderTradeNorthAmericaEnabled - SOAP::SOAPBoolean
#   crossBorderTradeGBEnabled - SOAP::SOAPBoolean
#   crossBorderTradeAustraliaEnabled - SOAP::SOAPBoolean
#   payPalBuyerProtectionEnabled - SOAP::SOAPBoolean
#   buyerGuaranteeEnabled - SOAP::SOAPBoolean
#   iNEscrowWorkflowTimeline - EBay::INEscrowWorkflowTimelineCodeType
#   combinedFixedPriceTreatmentEnabled - SOAP::SOAPBoolean
#   galleryFeaturedDurations - EBay::ListingEnhancementDurationReferenceType
#   payPalRequired - SOAP::SOAPBoolean
#   eBayMotorsProAdFormatEnabled - EBay::AdFormatEnabledCodeType
#   eBayMotorsProContactByPhoneEnabled - SOAP::SOAPBoolean
#   eBayMotorsProPhoneCount - SOAP::SOAPInt
#   eBayMotorsProContactByAddressEnabled - SOAP::SOAPBoolean
#   eBayMotorsProStreetCount - SOAP::SOAPInt
#   eBayMotorsProCompanyNameEnabled - SOAP::SOAPBoolean
#   eBayMotorsProContactByEmailEnabled - SOAP::SOAPBoolean
#   eBayMotorsProBestOfferEnabled - EBay::ClassifiedAdBestOfferEnabledCodeType
#   eBayMotorsProAutoAcceptEnabled - SOAP::SOAPBoolean
#   eBayMotorsProAutoDeclineEnabled - SOAP::SOAPBoolean
#   eBayMotorsProPaymentMethodCheckOutEnabled - EBay::ClassifiedAdPaymentMethodEnabledCodeType
#   eBayMotorsProShippingMethodEnabled - SOAP::SOAPBoolean
#   eBayMotorsProCounterOfferEnabled - SOAP::SOAPBoolean
#   eBayMotorsProSellerContactDetailsEnabled - SOAP::SOAPBoolean
#   localMarketAdFormatEnabled - EBay::AdFormatEnabledCodeType
#   localMarketContactByPhoneEnabled - SOAP::SOAPBoolean
#   localMarketPhoneCount - SOAP::SOAPInt
#   localMarketContactByAddressEnabled - SOAP::SOAPBoolean
#   localMarketStreetCount - SOAP::SOAPInt
#   localMarketCompanyNameEnabled - SOAP::SOAPBoolean
#   localMarketContactByEmailEnabled - SOAP::SOAPBoolean
#   localMarketBestOfferEnabled - EBay::ClassifiedAdBestOfferEnabledCodeType
#   localMarketAutoAcceptEnabled - SOAP::SOAPBoolean
#   localMarketAutoDeclineEnabled - SOAP::SOAPBoolean
#   localMarketPaymentMethodCheckOutEnabled - EBay::ClassifiedAdPaymentMethodEnabledCodeType
#   localMarketShippingMethodEnabled - SOAP::SOAPBoolean
#   localMarketCounterOfferEnabled - SOAP::SOAPBoolean
#   localMarketSellerContactDetailsEnabled - SOAP::SOAPBoolean
#   classifiedAdPhoneCount - SOAP::SOAPInt
#   classifiedAdContactByAddressEnabled - SOAP::SOAPBoolean
#   classifiedAdStreetCount - SOAP::SOAPInt
#   classifiedAdCompanyNameEnabled - SOAP::SOAPBoolean
#   specialitySubscription - EBay::GeographicExposureCodeType
#   regularSubscription - EBay::GeographicExposureCodeType
#   premiumSubscription - EBay::GeographicExposureCodeType
#   nonSubscription - EBay::GeographicExposureCodeType
#   payPalRequiredForStoreOwner - SOAP::SOAPBoolean
#   reviseQuantityAllowed - SOAP::SOAPBoolean
#   revisePriceAllowed - SOAP::SOAPBoolean
#   storeOwnerExtendedListingDurationsEnabled - SOAP::SOAPBoolean
#   storeOwnerExtendedListingDurations - EBay::StoreOwnerExtendedListingDurationsType
#   returnPolicyEnabled - SOAP::SOAPBoolean
#   handlingTimeEnabled - SOAP::SOAPBoolean
#   maxFlatShippingCost - EBay::AmountType
#   maxFlatShippingCostCBTExempt - SOAP::SOAPBoolean
#   group1MaxFlatShippingCost - EBay::AmountType
#   group2MaxFlatShippingCost - EBay::AmountType
#   group3MaxFlatShippingCost - EBay::AmountType
#   paymentMethod - EBay::BuyerPaymentMethodCodeType
#   variationsEnabled - SOAP::SOAPBoolean
#   attributeConversionEnabled - EBay::AttributeConversionEnabledCodeType
#   freeGalleryPlusEnabled - SOAP::SOAPBoolean
#   freePicturePackEnabled - SOAP::SOAPBoolean
#   itemCompatibilityEnabled - EBay::ItemCompatibilityEnabledCodeType
#   minItemCompatibility - SOAP::SOAPInt
#   maxItemCompatibility - SOAP::SOAPInt
#   conditionEnabled - EBay::ConditionEnabledCodeType
#   conditionValues - EBay::ConditionValuesType
#   valueCategory - SOAP::SOAPBoolean
#   productCreationEnabled - EBay::ProductCreationEnabledCodeType
#   eANEnabled - EBay::ProductIdentiferEnabledCodeType
#   iSBNEnabled - EBay::ProductIdentiferEnabledCodeType
#   uPCEnabled - EBay::ProductIdentiferEnabledCodeType
#   maxGranularFitmentCount - SOAP::SOAPInt
#   compatibleVehicleType - SOAP::SOAPString
#   paymentOptionsGroup - EBay::PaymentOptionsGroupEnabledCodeType
#   shippingProfileCategoryGroup - EBay::ProfileCategoryGroupCodeType
#   paymentProfileCategoryGroup - EBay::ProfileCategoryGroupCodeType
#   returnPolicyProfileCategoryGroup - EBay::ProfileCategoryGroupCodeType
#   vINSupported - SOAP::SOAPBoolean
#   vRMSupported - SOAP::SOAPBoolean
#   sellerProvidedTitleSupported - SOAP::SOAPBoolean
#   depositSupported - SOAP::SOAPBoolean
#   globalShippingEnabled - SOAP::SOAPBoolean
#   additionalCompatibilityEnabled - SOAP::SOAPBoolean
#   pickupDropOffEnabled - SOAP::SOAPBoolean
class SiteDefaultsType
  attr_accessor :listingDuration
  attr_accessor :shippingTermsRequired
  attr_accessor :bestOfferEnabled
  attr_accessor :dutchBINEnabled
  attr_accessor :userConsentRequired
  attr_accessor :homePageFeaturedEnabled
  attr_accessor :proPackEnabled
  attr_accessor :basicUpgradePackEnabled
  attr_accessor :valuePackEnabled
  attr_accessor :proPackPlusEnabled
  attr_accessor :adFormatEnabled
  attr_accessor :bestOfferCounterEnabled
  attr_accessor :bestOfferAutoDeclineEnabled
  attr_accessor :localMarketSpecialitySubscription
  attr_accessor :localMarketRegularSubscription
  attr_accessor :localMarketPremiumSubscription
  attr_accessor :localMarketNonSubscription
  attr_accessor :expressEnabled
  attr_accessor :expressPicturesRequired
  attr_accessor :expressConditionRequired
  attr_accessor :minimumReservePrice
  attr_accessor :sellerContactDetailsEnabled
  attr_accessor :transactionConfirmationRequestEnabled
  attr_accessor :storeInventoryEnabled
  attr_accessor :skypeMeTransactionalEnabled
  attr_accessor :skypeMeNonTransactionalEnabled
  attr_accessor :localListingDistancesRegular
  attr_accessor :localListingDistancesSpecialty
  attr_accessor :localListingDistancesNonSubscription
  attr_accessor :classifiedAdPaymentMethodEnabled
  attr_accessor :classifiedAdShippingMethodEnabled
  attr_accessor :classifiedAdBestOfferEnabled
  attr_accessor :classifiedAdCounterOfferEnabled
  attr_accessor :classifiedAdAutoDeclineEnabled
  attr_accessor :classifiedAdContactByPhoneEnabled
  attr_accessor :classifiedAdContactByEmailEnabled
  attr_accessor :safePaymentRequired
  attr_accessor :classifiedAdPayPerLeadEnabled
  attr_accessor :itemSpecificsEnabled
  attr_accessor :paisaPayFullEscrowEnabled
  attr_accessor :iSBNIdentifierEnabled
  attr_accessor :uPCIdentifierEnabled
  attr_accessor :eANIdentifierEnabled
  attr_accessor :brandMPNIdentifierEnabled
  attr_accessor :classifiedAdAutoAcceptEnabled
  attr_accessor :bestOfferAutoAcceptEnabled
  attr_accessor :crossBorderTradeNorthAmericaEnabled
  attr_accessor :crossBorderTradeGBEnabled
  attr_accessor :crossBorderTradeAustraliaEnabled
  attr_accessor :payPalBuyerProtectionEnabled
  attr_accessor :buyerGuaranteeEnabled
  attr_accessor :iNEscrowWorkflowTimeline
  attr_accessor :combinedFixedPriceTreatmentEnabled
  attr_accessor :galleryFeaturedDurations
  attr_accessor :payPalRequired
  attr_accessor :eBayMotorsProAdFormatEnabled
  attr_accessor :eBayMotorsProContactByPhoneEnabled
  attr_accessor :eBayMotorsProPhoneCount
  attr_accessor :eBayMotorsProContactByAddressEnabled
  attr_accessor :eBayMotorsProStreetCount
  attr_accessor :eBayMotorsProCompanyNameEnabled
  attr_accessor :eBayMotorsProContactByEmailEnabled
  attr_accessor :eBayMotorsProBestOfferEnabled
  attr_accessor :eBayMotorsProAutoAcceptEnabled
  attr_accessor :eBayMotorsProAutoDeclineEnabled
  attr_accessor :eBayMotorsProPaymentMethodCheckOutEnabled
  attr_accessor :eBayMotorsProShippingMethodEnabled
  attr_accessor :eBayMotorsProCounterOfferEnabled
  attr_accessor :eBayMotorsProSellerContactDetailsEnabled
  attr_accessor :localMarketAdFormatEnabled
  attr_accessor :localMarketContactByPhoneEnabled
  attr_accessor :localMarketPhoneCount
  attr_accessor :localMarketContactByAddressEnabled
  attr_accessor :localMarketStreetCount
  attr_accessor :localMarketCompanyNameEnabled
  attr_accessor :localMarketContactByEmailEnabled
  attr_accessor :localMarketBestOfferEnabled
  attr_accessor :localMarketAutoAcceptEnabled
  attr_accessor :localMarketAutoDeclineEnabled
  attr_accessor :localMarketPaymentMethodCheckOutEnabled
  attr_accessor :localMarketShippingMethodEnabled
  attr_accessor :localMarketCounterOfferEnabled
  attr_accessor :localMarketSellerContactDetailsEnabled
  attr_accessor :classifiedAdPhoneCount
  attr_accessor :classifiedAdContactByAddressEnabled
  attr_accessor :classifiedAdStreetCount
  attr_accessor :classifiedAdCompanyNameEnabled
  attr_accessor :specialitySubscription
  attr_accessor :regularSubscription
  attr_accessor :premiumSubscription
  attr_accessor :nonSubscription
  attr_accessor :payPalRequiredForStoreOwner
  attr_accessor :reviseQuantityAllowed
  attr_accessor :revisePriceAllowed
  attr_accessor :storeOwnerExtendedListingDurationsEnabled
  attr_accessor :storeOwnerExtendedListingDurations
  attr_accessor :returnPolicyEnabled
  attr_accessor :handlingTimeEnabled
  attr_accessor :maxFlatShippingCost
  attr_accessor :maxFlatShippingCostCBTExempt
  attr_accessor :group1MaxFlatShippingCost
  attr_accessor :group2MaxFlatShippingCost
  attr_accessor :group3MaxFlatShippingCost
  attr_accessor :paymentMethod
  attr_accessor :variationsEnabled
  attr_accessor :attributeConversionEnabled
  attr_accessor :freeGalleryPlusEnabled
  attr_accessor :freePicturePackEnabled
  attr_accessor :itemCompatibilityEnabled
  attr_accessor :minItemCompatibility
  attr_accessor :maxItemCompatibility
  attr_accessor :conditionEnabled
  attr_accessor :conditionValues
  attr_accessor :valueCategory
  attr_accessor :productCreationEnabled
  attr_accessor :eANEnabled
  attr_accessor :iSBNEnabled
  attr_accessor :uPCEnabled
  attr_accessor :maxGranularFitmentCount
  attr_accessor :compatibleVehicleType
  attr_accessor :paymentOptionsGroup
  attr_accessor :shippingProfileCategoryGroup
  attr_accessor :paymentProfileCategoryGroup
  attr_accessor :returnPolicyProfileCategoryGroup
  attr_accessor :vINSupported
  attr_accessor :vRMSupported
  attr_accessor :sellerProvidedTitleSupported
  attr_accessor :depositSupported
  attr_accessor :globalShippingEnabled
  attr_accessor :additionalCompatibilityEnabled
  attr_reader :__xmlele_any
  attr_accessor :pickupDropOffEnabled

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(listingDuration = [], shippingTermsRequired = nil, bestOfferEnabled = nil, dutchBINEnabled = nil, userConsentRequired = nil, homePageFeaturedEnabled = nil, proPackEnabled = nil, basicUpgradePackEnabled = nil, valuePackEnabled = nil, proPackPlusEnabled = nil, adFormatEnabled = nil, bestOfferCounterEnabled = nil, bestOfferAutoDeclineEnabled = nil, localMarketSpecialitySubscription = nil, localMarketRegularSubscription = nil, localMarketPremiumSubscription = nil, localMarketNonSubscription = nil, expressEnabled = nil, expressPicturesRequired = nil, expressConditionRequired = nil, minimumReservePrice = nil, sellerContactDetailsEnabled = nil, transactionConfirmationRequestEnabled = nil, storeInventoryEnabled = nil, skypeMeTransactionalEnabled = nil, skypeMeNonTransactionalEnabled = nil, localListingDistancesRegular = nil, localListingDistancesSpecialty = nil, localListingDistancesNonSubscription = nil, classifiedAdPaymentMethodEnabled = nil, classifiedAdShippingMethodEnabled = nil, classifiedAdBestOfferEnabled = nil, classifiedAdCounterOfferEnabled = nil, classifiedAdAutoDeclineEnabled = nil, classifiedAdContactByPhoneEnabled = nil, classifiedAdContactByEmailEnabled = nil, safePaymentRequired = nil, classifiedAdPayPerLeadEnabled = nil, itemSpecificsEnabled = nil, paisaPayFullEscrowEnabled = nil, iSBNIdentifierEnabled = nil, uPCIdentifierEnabled = nil, eANIdentifierEnabled = nil, brandMPNIdentifierEnabled = nil, classifiedAdAutoAcceptEnabled = nil, bestOfferAutoAcceptEnabled = nil, crossBorderTradeNorthAmericaEnabled = nil, crossBorderTradeGBEnabled = nil, crossBorderTradeAustraliaEnabled = nil, payPalBuyerProtectionEnabled = nil, buyerGuaranteeEnabled = nil, iNEscrowWorkflowTimeline = nil, combinedFixedPriceTreatmentEnabled = nil, galleryFeaturedDurations = nil, payPalRequired = nil, eBayMotorsProAdFormatEnabled = nil, eBayMotorsProContactByPhoneEnabled = nil, eBayMotorsProPhoneCount = nil, eBayMotorsProContactByAddressEnabled = nil, eBayMotorsProStreetCount = nil, eBayMotorsProCompanyNameEnabled = nil, eBayMotorsProContactByEmailEnabled = nil, eBayMotorsProBestOfferEnabled = nil, eBayMotorsProAutoAcceptEnabled = nil, eBayMotorsProAutoDeclineEnabled = nil, eBayMotorsProPaymentMethodCheckOutEnabled = nil, eBayMotorsProShippingMethodEnabled = nil, eBayMotorsProCounterOfferEnabled = nil, eBayMotorsProSellerContactDetailsEnabled = nil, localMarketAdFormatEnabled = nil, localMarketContactByPhoneEnabled = nil, localMarketPhoneCount = nil, localMarketContactByAddressEnabled = nil, localMarketStreetCount = nil, localMarketCompanyNameEnabled = nil, localMarketContactByEmailEnabled = nil, localMarketBestOfferEnabled = nil, localMarketAutoAcceptEnabled = nil, localMarketAutoDeclineEnabled = nil, localMarketPaymentMethodCheckOutEnabled = nil, localMarketShippingMethodEnabled = nil, localMarketCounterOfferEnabled = nil, localMarketSellerContactDetailsEnabled = nil, classifiedAdPhoneCount = nil, classifiedAdContactByAddressEnabled = nil, classifiedAdStreetCount = nil, classifiedAdCompanyNameEnabled = nil, specialitySubscription = nil, regularSubscription = nil, premiumSubscription = nil, nonSubscription = nil, payPalRequiredForStoreOwner = nil, reviseQuantityAllowed = nil, revisePriceAllowed = nil, storeOwnerExtendedListingDurationsEnabled = nil, storeOwnerExtendedListingDurations = nil, returnPolicyEnabled = nil, handlingTimeEnabled = nil, maxFlatShippingCost = nil, maxFlatShippingCostCBTExempt = nil, group1MaxFlatShippingCost = nil, group2MaxFlatShippingCost = nil, group3MaxFlatShippingCost = nil, paymentMethod = [], variationsEnabled = nil, attributeConversionEnabled = nil, freeGalleryPlusEnabled = nil, freePicturePackEnabled = nil, itemCompatibilityEnabled = nil, minItemCompatibility = nil, maxItemCompatibility = nil, conditionEnabled = nil, conditionValues = nil, valueCategory = nil, productCreationEnabled = nil, eANEnabled = nil, iSBNEnabled = nil, uPCEnabled = nil, maxGranularFitmentCount = nil, compatibleVehicleType = nil, paymentOptionsGroup = nil, shippingProfileCategoryGroup = nil, paymentProfileCategoryGroup = nil, returnPolicyProfileCategoryGroup = nil, vINSupported = nil, vRMSupported = nil, sellerProvidedTitleSupported = nil, depositSupported = nil, globalShippingEnabled = nil, additionalCompatibilityEnabled = nil, pickupDropOffEnabled = nil)
    @listingDuration = listingDuration
    @shippingTermsRequired = shippingTermsRequired
    @bestOfferEnabled = bestOfferEnabled
    @dutchBINEnabled = dutchBINEnabled
    @userConsentRequired = userConsentRequired
    @homePageFeaturedEnabled = homePageFeaturedEnabled
    @proPackEnabled = proPackEnabled
    @basicUpgradePackEnabled = basicUpgradePackEnabled
    @valuePackEnabled = valuePackEnabled
    @proPackPlusEnabled = proPackPlusEnabled
    @adFormatEnabled = adFormatEnabled
    @bestOfferCounterEnabled = bestOfferCounterEnabled
    @bestOfferAutoDeclineEnabled = bestOfferAutoDeclineEnabled
    @localMarketSpecialitySubscription = localMarketSpecialitySubscription
    @localMarketRegularSubscription = localMarketRegularSubscription
    @localMarketPremiumSubscription = localMarketPremiumSubscription
    @localMarketNonSubscription = localMarketNonSubscription
    @expressEnabled = expressEnabled
    @expressPicturesRequired = expressPicturesRequired
    @expressConditionRequired = expressConditionRequired
    @minimumReservePrice = minimumReservePrice
    @sellerContactDetailsEnabled = sellerContactDetailsEnabled
    @transactionConfirmationRequestEnabled = transactionConfirmationRequestEnabled
    @storeInventoryEnabled = storeInventoryEnabled
    @skypeMeTransactionalEnabled = skypeMeTransactionalEnabled
    @skypeMeNonTransactionalEnabled = skypeMeNonTransactionalEnabled
    @localListingDistancesRegular = localListingDistancesRegular
    @localListingDistancesSpecialty = localListingDistancesSpecialty
    @localListingDistancesNonSubscription = localListingDistancesNonSubscription
    @classifiedAdPaymentMethodEnabled = classifiedAdPaymentMethodEnabled
    @classifiedAdShippingMethodEnabled = classifiedAdShippingMethodEnabled
    @classifiedAdBestOfferEnabled = classifiedAdBestOfferEnabled
    @classifiedAdCounterOfferEnabled = classifiedAdCounterOfferEnabled
    @classifiedAdAutoDeclineEnabled = classifiedAdAutoDeclineEnabled
    @classifiedAdContactByPhoneEnabled = classifiedAdContactByPhoneEnabled
    @classifiedAdContactByEmailEnabled = classifiedAdContactByEmailEnabled
    @safePaymentRequired = safePaymentRequired
    @classifiedAdPayPerLeadEnabled = classifiedAdPayPerLeadEnabled
    @itemSpecificsEnabled = itemSpecificsEnabled
    @paisaPayFullEscrowEnabled = paisaPayFullEscrowEnabled
    @iSBNIdentifierEnabled = iSBNIdentifierEnabled
    @uPCIdentifierEnabled = uPCIdentifierEnabled
    @eANIdentifierEnabled = eANIdentifierEnabled
    @brandMPNIdentifierEnabled = brandMPNIdentifierEnabled
    @classifiedAdAutoAcceptEnabled = classifiedAdAutoAcceptEnabled
    @bestOfferAutoAcceptEnabled = bestOfferAutoAcceptEnabled
    @crossBorderTradeNorthAmericaEnabled = crossBorderTradeNorthAmericaEnabled
    @crossBorderTradeGBEnabled = crossBorderTradeGBEnabled
    @crossBorderTradeAustraliaEnabled = crossBorderTradeAustraliaEnabled
    @payPalBuyerProtectionEnabled = payPalBuyerProtectionEnabled
    @buyerGuaranteeEnabled = buyerGuaranteeEnabled
    @iNEscrowWorkflowTimeline = iNEscrowWorkflowTimeline
    @combinedFixedPriceTreatmentEnabled = combinedFixedPriceTreatmentEnabled
    @galleryFeaturedDurations = galleryFeaturedDurations
    @payPalRequired = payPalRequired
    @eBayMotorsProAdFormatEnabled = eBayMotorsProAdFormatEnabled
    @eBayMotorsProContactByPhoneEnabled = eBayMotorsProContactByPhoneEnabled
    @eBayMotorsProPhoneCount = eBayMotorsProPhoneCount
    @eBayMotorsProContactByAddressEnabled = eBayMotorsProContactByAddressEnabled
    @eBayMotorsProStreetCount = eBayMotorsProStreetCount
    @eBayMotorsProCompanyNameEnabled = eBayMotorsProCompanyNameEnabled
    @eBayMotorsProContactByEmailEnabled = eBayMotorsProContactByEmailEnabled
    @eBayMotorsProBestOfferEnabled = eBayMotorsProBestOfferEnabled
    @eBayMotorsProAutoAcceptEnabled = eBayMotorsProAutoAcceptEnabled
    @eBayMotorsProAutoDeclineEnabled = eBayMotorsProAutoDeclineEnabled
    @eBayMotorsProPaymentMethodCheckOutEnabled = eBayMotorsProPaymentMethodCheckOutEnabled
    @eBayMotorsProShippingMethodEnabled = eBayMotorsProShippingMethodEnabled
    @eBayMotorsProCounterOfferEnabled = eBayMotorsProCounterOfferEnabled
    @eBayMotorsProSellerContactDetailsEnabled = eBayMotorsProSellerContactDetailsEnabled
    @localMarketAdFormatEnabled = localMarketAdFormatEnabled
    @localMarketContactByPhoneEnabled = localMarketContactByPhoneEnabled
    @localMarketPhoneCount = localMarketPhoneCount
    @localMarketContactByAddressEnabled = localMarketContactByAddressEnabled
    @localMarketStreetCount = localMarketStreetCount
    @localMarketCompanyNameEnabled = localMarketCompanyNameEnabled
    @localMarketContactByEmailEnabled = localMarketContactByEmailEnabled
    @localMarketBestOfferEnabled = localMarketBestOfferEnabled
    @localMarketAutoAcceptEnabled = localMarketAutoAcceptEnabled
    @localMarketAutoDeclineEnabled = localMarketAutoDeclineEnabled
    @localMarketPaymentMethodCheckOutEnabled = localMarketPaymentMethodCheckOutEnabled
    @localMarketShippingMethodEnabled = localMarketShippingMethodEnabled
    @localMarketCounterOfferEnabled = localMarketCounterOfferEnabled
    @localMarketSellerContactDetailsEnabled = localMarketSellerContactDetailsEnabled
    @classifiedAdPhoneCount = classifiedAdPhoneCount
    @classifiedAdContactByAddressEnabled = classifiedAdContactByAddressEnabled
    @classifiedAdStreetCount = classifiedAdStreetCount
    @classifiedAdCompanyNameEnabled = classifiedAdCompanyNameEnabled
    @specialitySubscription = specialitySubscription
    @regularSubscription = regularSubscription
    @premiumSubscription = premiumSubscription
    @nonSubscription = nonSubscription
    @payPalRequiredForStoreOwner = payPalRequiredForStoreOwner
    @reviseQuantityAllowed = reviseQuantityAllowed
    @revisePriceAllowed = revisePriceAllowed
    @storeOwnerExtendedListingDurationsEnabled = storeOwnerExtendedListingDurationsEnabled
    @storeOwnerExtendedListingDurations = storeOwnerExtendedListingDurations
    @returnPolicyEnabled = returnPolicyEnabled
    @handlingTimeEnabled = handlingTimeEnabled
    @maxFlatShippingCost = maxFlatShippingCost
    @maxFlatShippingCostCBTExempt = maxFlatShippingCostCBTExempt
    @group1MaxFlatShippingCost = group1MaxFlatShippingCost
    @group2MaxFlatShippingCost = group2MaxFlatShippingCost
    @group3MaxFlatShippingCost = group3MaxFlatShippingCost
    @paymentMethod = paymentMethod
    @variationsEnabled = variationsEnabled
    @attributeConversionEnabled = attributeConversionEnabled
    @freeGalleryPlusEnabled = freeGalleryPlusEnabled
    @freePicturePackEnabled = freePicturePackEnabled
    @itemCompatibilityEnabled = itemCompatibilityEnabled
    @minItemCompatibility = minItemCompatibility
    @maxItemCompatibility = maxItemCompatibility
    @conditionEnabled = conditionEnabled
    @conditionValues = conditionValues
    @valueCategory = valueCategory
    @productCreationEnabled = productCreationEnabled
    @eANEnabled = eANEnabled
    @iSBNEnabled = iSBNEnabled
    @uPCEnabled = uPCEnabled
    @maxGranularFitmentCount = maxGranularFitmentCount
    @compatibleVehicleType = compatibleVehicleType
    @paymentOptionsGroup = paymentOptionsGroup
    @shippingProfileCategoryGroup = shippingProfileCategoryGroup
    @paymentProfileCategoryGroup = paymentProfileCategoryGroup
    @returnPolicyProfileCategoryGroup = returnPolicyProfileCategoryGroup
    @vINSupported = vINSupported
    @vRMSupported = vRMSupported
    @sellerProvidedTitleSupported = sellerProvidedTitleSupported
    @depositSupported = depositSupported
    @globalShippingEnabled = globalShippingEnabled
    @additionalCompatibilityEnabled = additionalCompatibilityEnabled
    @__xmlele_any = nil
    @pickupDropOffEnabled = pickupDropOffEnabled
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteDetailsType
#   site - EBay::SiteCodeType
#   siteID - SOAP::SOAPInt
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class SiteDetailsType
  attr_accessor :site
  attr_accessor :siteID
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(site = nil, siteID = nil, detailVersion = nil, updateTime = nil)
    @site = site
    @siteID = siteID
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteHostedPictureDetailsType
#   pictureName - SOAP::SOAPString
#   pictureSet - EBay::PictureSetCodeType
#   pictureFormat - EBay::PictureFormatCodeType
#   fullURL - SOAP::SOAPAnyURI
#   baseURL - SOAP::SOAPAnyURI
#   pictureSetMember - EBay::PictureSetMemberType
#   externalPictureURL - SOAP::SOAPAnyURI
#   useByDate - SOAP::SOAPDateTime
class SiteHostedPictureDetailsType
  attr_accessor :pictureName
  attr_accessor :pictureSet
  attr_accessor :pictureFormat
  attr_accessor :fullURL
  attr_accessor :baseURL
  attr_accessor :pictureSetMember
  attr_accessor :externalPictureURL
  attr_accessor :useByDate
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(pictureName = nil, pictureSet = nil, pictureFormat = nil, fullURL = nil, baseURL = nil, pictureSetMember = [], externalPictureURL = nil, useByDate = nil)
    @pictureName = pictureName
    @pictureSet = pictureSet
    @pictureFormat = pictureFormat
    @fullURL = fullURL
    @baseURL = baseURL
    @pictureSetMember = pictureSetMember
    @externalPictureURL = externalPictureURL
    @useByDate = useByDate
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteLocationType
#   siteID - EBay::SiteIDFilterCodeType
class SiteLocationType
  attr_accessor :siteID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(siteID = nil)
    @siteID = siteID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SiteWideCharacteristicsType
#   characteristicsSet - EBay::CharacteristicsSetType
#   excludeCategoryID - SOAP::SOAPString
class SiteWideCharacteristicsType
  attr_accessor :characteristicsSet
  attr_accessor :excludeCategoryID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(characteristicsSet = nil, excludeCategoryID = [])
    @characteristicsSet = characteristicsSet
    @excludeCategoryID = excludeCategoryID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SkypeMeNonTransactionalEnabledDefinitionType
class SkypeMeNonTransactionalEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SkypeMeTransactionalEnabledDefinitionType
class SkypeMeTransactionalEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SpecialitySubscriptionDefinitionType
class SpecialitySubscriptionDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorSchemeArrayType
class StoreColorSchemeArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorSchemeType
#   colorSchemeID - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   color - EBay::StoreColorType
#   font - EBay::StoreFontType
class StoreColorSchemeType
  attr_accessor :colorSchemeID
  attr_accessor :name
  attr_accessor :color
  attr_accessor :font
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(colorSchemeID = nil, name = nil, color = nil, font = nil)
    @colorSchemeID = colorSchemeID
    @name = name
    @color = color
    @font = font
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreColorType
#   primary - SOAP::SOAPString
#   secondary - SOAP::SOAPString
#   accent - SOAP::SOAPString
class StoreColorType
  attr_accessor :primary
  attr_accessor :secondary
  attr_accessor :accent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(primary = nil, secondary = nil, accent = nil)
    @primary = primary
    @secondary = secondary
    @accent = accent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomCategoryArrayType
class StoreCustomCategoryArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomCategoryType
#   categoryID - SOAP::SOAPLong
#   name - SOAP::SOAPString
#   order - SOAP::SOAPInt
#   childCategory - EBay::StoreCustomCategoryType
class StoreCustomCategoryType
  attr_accessor :categoryID
  attr_accessor :name
  attr_accessor :order
  attr_accessor :childCategory
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(categoryID = nil, name = nil, order = nil, childCategory = [])
    @categoryID = categoryID
    @name = name
    @order = order
    @childCategory = childCategory
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderLinkType
#   linkID - SOAP::SOAPInt
#   order - SOAP::SOAPInt
#   linkType - EBay::StoreCustomListingHeaderLinkCodeType
class StoreCustomListingHeaderLinkType
  attr_accessor :linkID
  attr_accessor :order
  attr_accessor :linkType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(linkID = nil, order = nil, linkType = nil)
    @linkID = linkID
    @order = order
    @linkType = linkType
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderType
#   displayType - EBay::StoreCustomListingHeaderDisplayCodeType
#   logo - SOAP::SOAPBoolean
#   searchBox - SOAP::SOAPBoolean
#   linkToInclude - EBay::StoreCustomListingHeaderLinkType
#   addToFavoriteStores - SOAP::SOAPBoolean
#   signUpForStoreNewsletter - SOAP::SOAPBoolean
class StoreCustomListingHeaderType
  attr_accessor :displayType
  attr_accessor :logo
  attr_accessor :searchBox
  attr_accessor :linkToInclude
  attr_accessor :addToFavoriteStores
  attr_accessor :signUpForStoreNewsletter
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(displayType = nil, logo = nil, searchBox = nil, linkToInclude = [], addToFavoriteStores = nil, signUpForStoreNewsletter = nil)
    @displayType = displayType
    @logo = logo
    @searchBox = searchBox
    @linkToInclude = linkToInclude
    @addToFavoriteStores = addToFavoriteStores
    @signUpForStoreNewsletter = signUpForStoreNewsletter
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageArrayType
class StoreCustomPageArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageType
#   name - SOAP::SOAPString
#   pageID - SOAP::SOAPLong
#   uRLPath - SOAP::SOAPString
#   uRL - SOAP::SOAPAnyURI
#   status - EBay::StoreCustomPageStatusCodeType
#   content - SOAP::SOAPString
#   leftNav - SOAP::SOAPBoolean
#   previewEnabled - SOAP::SOAPBoolean
#   order - SOAP::SOAPInt
class StoreCustomPageType
  attr_accessor :name
  attr_accessor :pageID
  attr_accessor :uRLPath
  attr_accessor :uRL
  attr_accessor :status
  attr_accessor :content
  attr_accessor :leftNav
  attr_accessor :previewEnabled
  attr_accessor :order
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, pageID = nil, uRLPath = nil, uRL = nil, status = nil, content = nil, leftNav = nil, previewEnabled = nil, order = nil)
    @name = name
    @pageID = pageID
    @uRLPath = uRLPath
    @uRL = uRL
    @status = status
    @content = content
    @leftNav = leftNav
    @previewEnabled = previewEnabled
    @order = order
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontType
#   nameFace - EBay::StoreFontFaceCodeType
#   nameSize - EBay::StoreFontSizeCodeType
#   nameColor - SOAP::SOAPString
#   titleFace - EBay::StoreFontFaceCodeType
#   titleSize - EBay::StoreFontSizeCodeType
#   titleColor - SOAP::SOAPString
#   descFace - EBay::StoreFontFaceCodeType
#   descSize - EBay::StoreFontSizeCodeType
#   descColor - SOAP::SOAPString
class StoreFontType
  attr_accessor :nameFace
  attr_accessor :nameSize
  attr_accessor :nameColor
  attr_accessor :titleFace
  attr_accessor :titleSize
  attr_accessor :titleColor
  attr_accessor :descFace
  attr_accessor :descSize
  attr_accessor :descColor
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(nameFace = nil, nameSize = nil, nameColor = nil, titleFace = nil, titleSize = nil, titleColor = nil, descFace = nil, descSize = nil, descColor = nil)
    @nameFace = nameFace
    @nameSize = nameSize
    @nameColor = nameColor
    @titleFace = titleFace
    @titleSize = titleSize
    @titleColor = titleColor
    @descFace = descFace
    @descSize = descSize
    @descColor = descColor
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreInventoryEnabledDefinitionType
class StoreInventoryEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreLogoArrayType
class StoreLogoArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}StoreLogoType
#   logoID - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   uRL - SOAP::SOAPAnyURI
class StoreLogoType
  attr_accessor :logoID
  attr_accessor :name
  attr_accessor :uRL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(logoID = nil, name = nil, uRL = nil)
    @logoID = logoID
    @name = name
    @uRL = uRL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreOwnerExtendedListingDurationsDefinitionType
class StoreOwnerExtendedListingDurationsDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreOwnerExtendedListingDurationsEnabledDefinitionType
class StoreOwnerExtendedListingDurationsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreOwnerExtendedListingDurationsType
#   duration - SOAP::SOAPToken
class StoreOwnerExtendedListingDurationsType
  attr_accessor :duration
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(duration = [])
    @duration = duration
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StorePreferencesType
#   vacationPreferences - EBay::StoreVacationPreferencesType
class StorePreferencesType
  attr_accessor :vacationPreferences

  def initialize(vacationPreferences = nil)
    @vacationPreferences = vacationPreferences
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionArrayType
class StoreSubscriptionArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionType
#   level - EBay::StoreSubscriptionLevelCodeType
#   fee - EBay::AmountType
class StoreSubscriptionType
  attr_accessor :level
  attr_accessor :fee
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(level = nil, fee = nil)
    @level = level
    @fee = fee
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreThemeArrayType
#   theme - EBay::StoreThemeType
#   genericColorSchemeArray - EBay::StoreColorSchemeArrayType
class StoreThemeArrayType
  attr_accessor :theme
  attr_accessor :genericColorSchemeArray
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(theme = [], genericColorSchemeArray = nil)
    @theme = theme
    @genericColorSchemeArray = genericColorSchemeArray
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreThemeType
#   themeID - SOAP::SOAPInt
#   name - SOAP::SOAPString
#   colorScheme - EBay::StoreColorSchemeType
class StoreThemeType
  attr_accessor :themeID
  attr_accessor :name
  attr_accessor :colorScheme
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(themeID = nil, name = nil, colorScheme = nil)
    @themeID = themeID
    @name = name
    @colorScheme = colorScheme
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreType
#   name - SOAP::SOAPString
#   uRLPath - SOAP::SOAPString
#   uRL - SOAP::SOAPAnyURI
#   subscriptionLevel - EBay::StoreSubscriptionLevelCodeType
#   description - SOAP::SOAPString
#   logo - EBay::StoreLogoType
#   theme - EBay::StoreThemeType
#   headerStyle - EBay::StoreHeaderStyleCodeType
#   homePage - SOAP::SOAPLong
#   itemListLayout - EBay::StoreItemListLayoutCodeType
#   itemListSortOrder - EBay::StoreItemListSortOrderCodeType
#   customHeaderLayout - EBay::StoreCustomHeaderLayoutCodeType
#   customHeader - SOAP::SOAPString
#   exportListings - SOAP::SOAPBoolean
#   customCategories - EBay::StoreCustomCategoryArrayType
#   customListingHeader - EBay::StoreCustomListingHeaderType
#   merchDisplay - EBay::MerchDisplayCodeType
#   lastOpenedTime - SOAP::SOAPDateTime
#   titleWithCompatibility - SOAP::SOAPBoolean
class StoreType
  attr_accessor :name
  attr_accessor :uRLPath
  attr_accessor :uRL
  attr_accessor :subscriptionLevel
  attr_accessor :description
  attr_accessor :logo
  attr_accessor :theme
  attr_accessor :headerStyle
  attr_accessor :homePage
  attr_accessor :itemListLayout
  attr_accessor :itemListSortOrder
  attr_accessor :customHeaderLayout
  attr_accessor :customHeader
  attr_accessor :exportListings
  attr_accessor :customCategories
  attr_accessor :customListingHeader
  attr_accessor :merchDisplay
  attr_accessor :lastOpenedTime
  attr_accessor :titleWithCompatibility
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, uRLPath = nil, uRL = nil, subscriptionLevel = nil, description = nil, logo = nil, theme = nil, headerStyle = nil, homePage = nil, itemListLayout = nil, itemListSortOrder = nil, customHeaderLayout = nil, customHeader = nil, exportListings = nil, customCategories = nil, customListingHeader = nil, merchDisplay = nil, lastOpenedTime = nil, titleWithCompatibility = nil)
    @name = name
    @uRLPath = uRLPath
    @uRL = uRL
    @subscriptionLevel = subscriptionLevel
    @description = description
    @logo = logo
    @theme = theme
    @headerStyle = headerStyle
    @homePage = homePage
    @itemListLayout = itemListLayout
    @itemListSortOrder = itemListSortOrder
    @customHeaderLayout = customHeaderLayout
    @customHeader = customHeader
    @exportListings = exportListings
    @customCategories = customCategories
    @customListingHeader = customListingHeader
    @merchDisplay = merchDisplay
    @lastOpenedTime = lastOpenedTime
    @titleWithCompatibility = titleWithCompatibility
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}StoreVacationPreferencesType
#   onVacation - SOAP::SOAPBoolean
#   returnDate - SOAP::SOAPDateTime
#   hideFixedPriceStoreItems - SOAP::SOAPBoolean
#   messageItem - SOAP::SOAPBoolean
#   messageStore - SOAP::SOAPBoolean
#   displayMessageStoreCustomText - SOAP::SOAPBoolean
#   messageStoreCustomText - SOAP::SOAPString
class StoreVacationPreferencesType
  attr_accessor :onVacation
  attr_accessor :returnDate
  attr_accessor :hideFixedPriceStoreItems
  attr_accessor :messageItem
  attr_accessor :messageStore
  attr_accessor :displayMessageStoreCustomText
  attr_accessor :messageStoreCustomText

  def initialize(onVacation = nil, returnDate = nil, hideFixedPriceStoreItems = nil, messageItem = nil, messageStore = nil, displayMessageStoreCustomText = nil, messageStoreCustomText = nil)
    @onVacation = onVacation
    @returnDate = returnDate
    @hideFixedPriceStoreItems = hideFixedPriceStoreItems
    @messageItem = messageItem
    @messageStore = messageStore
    @displayMessageStoreCustomText = displayMessageStoreCustomText
    @messageStoreCustomText = messageStoreCustomText
  end
end

# {urn:ebay:apis:eBLBaseComponents}StorefrontType
#   storeCategoryID - SOAP::SOAPLong
#   storeCategory2ID - SOAP::SOAPLong
#   storeCategoryName - SOAP::SOAPString
#   storeCategory2Name - SOAP::SOAPString
#   storeURL - SOAP::SOAPAnyURI
#   storeName - SOAP::SOAPString
class StorefrontType
  attr_accessor :storeCategoryID
  attr_accessor :storeCategory2ID
  attr_accessor :storeCategoryName
  attr_accessor :storeCategory2Name
  attr_accessor :storeURL
  attr_accessor :storeName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(storeCategoryID = nil, storeCategory2ID = nil, storeCategoryName = nil, storeCategory2Name = nil, storeURL = nil, storeName = nil)
    @storeCategoryID = storeCategoryID
    @storeCategory2ID = storeCategory2ID
    @storeCategoryName = storeCategoryName
    @storeCategory2Name = storeCategory2Name
    @storeURL = storeURL
    @storeName = storeName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SubscriptionType
#   eIASToken - SOAP::SOAPString
#   siteID - EBay::SiteCodeType
#   active - SOAP::SOAPBoolean
class SubscriptionType
  attr_accessor :eIASToken
  attr_accessor :siteID
  attr_accessor :active
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eIASToken = nil, siteID = nil, active = nil)
    @eIASToken = eIASToken
    @siteID = siteID
    @active = active
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SuggestedBidValueType
#   bidValue - EBay::AmountType
class SuggestedBidValueType
  attr_accessor :bidValue
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(bidValue = [])
    @bidValue = bidValue
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SuggestedCategoryArrayType
#   suggestedCategory - EBay::SuggestedCategoryType
class SuggestedCategoryArrayType
  attr_accessor :suggestedCategory
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(suggestedCategory = [])
    @suggestedCategory = suggestedCategory
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SuggestedCategoryType
#   category - EBay::CategoryType
#   percentItemFound - SOAP::SOAPInt
class SuggestedCategoryType
  attr_accessor :category
  attr_accessor :percentItemFound
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(category = nil, percentItemFound = nil)
    @category = category
    @percentItemFound = percentItemFound
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SummaryEventScheduleType
#   eventType - EBay::NotificationEventTypeCodeType
#   summaryPeriod - EBay::SummaryWindowPeriodCodeType
#   frequency - EBay::SummaryFrequencyCodeType
class SummaryEventScheduleType
  attr_accessor :eventType
  attr_accessor :summaryPeriod
  attr_accessor :frequency
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventType = nil, summaryPeriod = nil, frequency = nil)
    @eventType = eventType
    @summaryPeriod = summaryPeriod
    @frequency = frequency
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}SupportedEventTypesArrayType
class SupportedEventTypesArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}SupportedSellerProfileType
#   profileID - SOAP::SOAPLong
#   profileType - SOAP::SOAPString
#   profileName - SOAP::SOAPString
#   shortSummary - SOAP::SOAPString
#   categoryGroup - EBay::CategoryGroupType
class SupportedSellerProfileType
  attr_accessor :profileID
  attr_accessor :profileType
  attr_accessor :profileName
  attr_accessor :shortSummary
  attr_accessor :categoryGroup

  def initialize(profileID = nil, profileType = nil, profileName = nil, shortSummary = nil, categoryGroup = nil)
    @profileID = profileID
    @profileType = profileType
    @profileName = profileName
    @shortSummary = shortSummary
    @categoryGroup = categoryGroup
  end
end

# {urn:ebay:apis:eBLBaseComponents}SupportedSellerProfilesType
class SupportedSellerProfilesType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}TCREnabledDefinitionType
class TCREnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxDetailsType
#   imposition - EBay::TaxTypeCodeType
#   taxDescription - EBay::TaxDescriptionCodeType
#   taxAmount - EBay::AmountType
#   taxOnSubtotalAmount - EBay::AmountType
#   taxOnShippingAmount - EBay::AmountType
#   taxOnHandlingAmount - EBay::AmountType
#   taxCode - SOAP::SOAPString
class TaxDetailsType
  attr_accessor :imposition
  attr_accessor :taxDescription
  attr_accessor :taxAmount
  attr_accessor :taxOnSubtotalAmount
  attr_accessor :taxOnShippingAmount
  attr_accessor :taxOnHandlingAmount
  attr_accessor :taxCode
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(imposition = nil, taxDescription = nil, taxAmount = nil, taxOnSubtotalAmount = nil, taxOnShippingAmount = nil, taxOnHandlingAmount = nil, taxCode = nil)
    @imposition = imposition
    @taxDescription = taxDescription
    @taxAmount = taxAmount
    @taxOnSubtotalAmount = taxOnSubtotalAmount
    @taxOnShippingAmount = taxOnShippingAmount
    @taxOnHandlingAmount = taxOnHandlingAmount
    @taxCode = taxCode
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxIdentifierAttributeType
#   xmlattr_name - SOAP::SOAPToken
class TaxIdentifierAttributeType < ::String
  AttrName = XSD::QName.new(nil, "name")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_name
    __xmlattr[AttrName]
  end

  def xmlattr_name=(value)
    __xmlattr[AttrName] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxIdentifierType
#   type - EBay::ValueTypeCodeType
#   iD - SOAP::SOAPString
#   attribute - EBay::TaxIdentifierAttributeType
class TaxIdentifierType
  attr_accessor :type
  attr_accessor :iD
  attr_accessor :attribute
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(type = nil, iD = nil, attribute = [])
    @type = type
    @iD = iD
    @attribute = attribute
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxJurisdictionType
#   jurisdictionID - SOAP::SOAPString
#   salesTaxPercent - SOAP::SOAPFloat
#   shippingIncludedInTax - SOAP::SOAPBoolean
#   jurisdictionName - SOAP::SOAPString
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class TaxJurisdictionType
  attr_accessor :jurisdictionID
  attr_accessor :salesTaxPercent
  attr_accessor :shippingIncludedInTax
  attr_accessor :jurisdictionName
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(jurisdictionID = nil, salesTaxPercent = nil, shippingIncludedInTax = nil, jurisdictionName = nil, detailVersion = nil, updateTime = nil)
    @jurisdictionID = jurisdictionID
    @salesTaxPercent = salesTaxPercent
    @shippingIncludedInTax = shippingIncludedInTax
    @jurisdictionName = jurisdictionName
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TaxTableType
class TaxTableType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}TaxesType
#   totalTaxAmount - EBay::AmountType
#   taxDetails - EBay::TaxDetailsType
class TaxesType
  attr_accessor :totalTaxAmount
  attr_accessor :taxDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(totalTaxAmount = nil, taxDetails = [])
    @totalTaxAmount = totalTaxAmount
    @taxDetails = taxDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ThemeGroupType
#   groupID - SOAP::SOAPInt
#   groupName - SOAP::SOAPString
#   themeID - SOAP::SOAPInt
#   themeTotal - SOAP::SOAPInt
class ThemeGroupType
  attr_accessor :groupID
  attr_accessor :groupName
  attr_accessor :themeID
  attr_accessor :themeTotal
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(groupID = nil, groupName = nil, themeID = [], themeTotal = nil)
    @groupID = groupID
    @groupName = groupName
    @themeID = themeID
    @themeTotal = themeTotal
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TicketListingDetailsType
#   eventTitle - SOAP::SOAPString
#   venue - SOAP::SOAPString
#   printedDate - SOAP::SOAPString
#   printedTime - SOAP::SOAPString
class TicketListingDetailsType
  attr_accessor :eventTitle
  attr_accessor :venue
  attr_accessor :printedDate
  attr_accessor :printedTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eventTitle = nil, venue = nil, printedDate = nil, printedTime = nil)
    @eventTitle = eventTitle
    @venue = venue
    @printedDate = printedDate
    @printedTime = printedTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TimeRangeType
#   timeFrom - SOAP::SOAPDateTime
#   timeTo - SOAP::SOAPDateTime
class TimeRangeType
  attr_accessor :timeFrom
  attr_accessor :timeTo
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timeFrom = nil, timeTo = nil)
    @timeFrom = timeFrom
    @timeTo = timeTo
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TimeZoneDetailsType
#   timeZoneID - SOAP::SOAPString
#   standardLabel - SOAP::SOAPString
#   standardOffset - SOAP::SOAPString
#   daylightSavingsLabel - SOAP::SOAPString
#   daylightSavingsOffset - SOAP::SOAPString
#   daylightSavingsInEffect - SOAP::SOAPBoolean
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class TimeZoneDetailsType
  attr_accessor :timeZoneID
  attr_accessor :standardLabel
  attr_accessor :standardOffset
  attr_accessor :daylightSavingsLabel
  attr_accessor :daylightSavingsOffset
  attr_accessor :daylightSavingsInEffect
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(timeZoneID = nil, standardLabel = nil, standardOffset = nil, daylightSavingsLabel = nil, daylightSavingsOffset = nil, daylightSavingsInEffect = nil, detailVersion = nil, updateTime = nil)
    @timeZoneID = timeZoneID
    @standardLabel = standardLabel
    @standardOffset = standardOffset
    @daylightSavingsLabel = daylightSavingsLabel
    @daylightSavingsOffset = daylightSavingsOffset
    @daylightSavingsInEffect = daylightSavingsInEffect
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TokenStatusType
#   status - EBay::TokenStatusCodeType
#   eIASToken - SOAP::SOAPString
#   expirationTime - SOAP::SOAPDateTime
#   revocationTime - SOAP::SOAPDateTime
class TokenStatusType
  attr_accessor :status
  attr_accessor :eIASToken
  attr_accessor :expirationTime
  attr_accessor :revocationTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil, eIASToken = nil, expirationTime = nil, revocationTime = nil)
    @status = status
    @eIASToken = eIASToken
    @expirationTime = expirationTime
    @revocationTime = revocationTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TopRatedSellerDetailsType
#   topRatedProgram - EBay::TopRatedProgramCodeType
class TopRatedSellerDetailsType
  attr_accessor :topRatedProgram
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(topRatedProgram = [])
    @topRatedProgram = topRatedProgram
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TransactionArrayType
class TransactionArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}TransactionReferenceType
#   xmlattr_type - SOAP::SOAPToken
class TransactionReferenceType < ::String
  AttrType = XSD::QName.new(nil, "type")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}TransactionStatusType
#   eBayPaymentStatus - EBay::PaymentStatusCodeType
#   checkoutStatus - EBay::CheckoutStatusCodeType
#   lastTimeModified - SOAP::SOAPDateTime
#   paymentMethodUsed - EBay::BuyerPaymentMethodCodeType
#   completeStatus - EBay::CompleteStatusCodeType
#   buyerSelectedShipping - SOAP::SOAPBoolean
#   paymentHoldStatus - EBay::PaymentHoldStatusCodeType
#   integratedMerchantCreditCardEnabled - SOAP::SOAPBoolean
#   eBayPaymentMismatchDetails - EBay::EBayPaymentMismatchDetailsType
#   inquiryStatus - EBay::InquiryStatusCodeType
#   returnStatus - EBay::ReturnStatusCodeType
#   paymentInstrument - EBay::BuyerPaymentInstrumentCodeType
class TransactionStatusType
  attr_accessor :eBayPaymentStatus
  attr_accessor :checkoutStatus
  attr_accessor :lastTimeModified
  attr_accessor :paymentMethodUsed
  attr_accessor :completeStatus
  attr_accessor :buyerSelectedShipping
  attr_accessor :paymentHoldStatus
  attr_accessor :integratedMerchantCreditCardEnabled
  attr_accessor :eBayPaymentMismatchDetails
  attr_accessor :inquiryStatus
  attr_accessor :returnStatus
  attr_accessor :paymentInstrument
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(eBayPaymentStatus = nil, checkoutStatus = nil, lastTimeModified = nil, paymentMethodUsed = nil, completeStatus = nil, buyerSelectedShipping = nil, paymentHoldStatus = nil, integratedMerchantCreditCardEnabled = nil, eBayPaymentMismatchDetails = nil, inquiryStatus = nil, returnStatus = nil, paymentInstrument = nil)
    @eBayPaymentStatus = eBayPaymentStatus
    @checkoutStatus = checkoutStatus
    @lastTimeModified = lastTimeModified
    @paymentMethodUsed = paymentMethodUsed
    @completeStatus = completeStatus
    @buyerSelectedShipping = buyerSelectedShipping
    @paymentHoldStatus = paymentHoldStatus
    @integratedMerchantCreditCardEnabled = integratedMerchantCreditCardEnabled
    @eBayPaymentMismatchDetails = eBayPaymentMismatchDetails
    @inquiryStatus = inquiryStatus
    @returnStatus = returnStatus
    @paymentInstrument = paymentInstrument
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}TransactionType
#   amountPaid - EBay::AmountType
#   adjustmentAmount - EBay::AmountType
#   convertedAdjustmentAmount - EBay::AmountType
#   buyer - EBay::UserType
#   shippingDetails - EBay::ShippingDetailsType
#   convertedAmountPaid - EBay::AmountType
#   convertedTransactionPrice - EBay::AmountType
#   createdDate - SOAP::SOAPDateTime
#   depositType - EBay::DepositTypeCodeType
#   item - EBay::ItemType
#   quantityPurchased - SOAP::SOAPInt
#   status - EBay::TransactionStatusType
#   transactionID - SOAP::SOAPString
#   transactionPrice - EBay::AmountType
#   bestOfferSale - SOAP::SOAPBoolean
#   vATPercent - SOAP::SOAPDecimal
#   externalTransaction - EBay::ExternalTransactionType
#   sellingManagerProductDetails - EBay::SellingManagerProductDetailsType
#   shippingServiceSelected - EBay::ShippingServiceOptionsType
#   buyerMessage - SOAP::SOAPString
#   dutchAuctionBid - EBay::AmountType
#   buyerPaidStatus - EBay::PaidStatusCodeType
#   sellerPaidStatus - EBay::PaidStatusCodeType
#   paidTime - SOAP::SOAPDateTime
#   shippedTime - SOAP::SOAPDateTime
#   totalPrice - EBay::AmountType
#   feedbackLeft - EBay::FeedbackInfoType
#   feedbackReceived - EBay::FeedbackInfoType
#   containingOrder - EBay::OrderType
#   finalValueFee - EBay::AmountType
#   listingCheckoutRedirectPreference - EBay::ListingCheckoutRedirectPreferenceType
#   refundArray - EBay::RefundArrayType
#   transactionSiteID - EBay::SiteCodeType
#   platform - EBay::TransactionPlatformCodeType
#   cartID - SOAP::SOAPString
#   sellerContactBuyerByEmail - SOAP::SOAPBoolean
#   payPalEmailAddress - SOAP::SOAPString
#   paisaPayID - SOAP::SOAPString
#   buyerGuaranteePrice - EBay::AmountType
#   variation - EBay::VariationType
#   buyerCheckoutMessage - SOAP::SOAPString
#   taxes - EBay::TaxesType
#   bundlePurchase - SOAP::SOAPBoolean
#   actualShippingCost - EBay::AmountType
#   actualHandlingCost - EBay::AmountType
#   orderLineItemID - SOAP::SOAPString
#   paymentHoldDetails - EBay::PaymentHoldDetailType
#   sellerDiscounts - EBay::SellerDiscountsType
#   refundAmount - EBay::AmountType
#   refundStatus - SOAP::SOAPString
#   codiceFiscale - SOAP::SOAPString
#   isMultiLegShipping - SOAP::SOAPBoolean
#   multiLegShippingDetails - EBay::MultiLegShippingDetailsType
#   invoiceSentTime - SOAP::SOAPDateTime
#   unpaidItem - EBay::UnpaidItemType
#   intangibleItem - SOAP::SOAPBoolean
#   monetaryDetails - EBay::PaymentsInformationType
#   pickupDetails - EBay::PickupDetailsType
#   pickupMethodSelected - EBay::PickupMethodSelectedType
#   shippingConvenienceCharge - EBay::AmountType
#   logisticsPlanType - SOAP::SOAPToken
#   buyerPackageEnclosures - EBay::BuyerPackageEnclosuresType
#   inventoryReservationID - SOAP::SOAPString
#   extendedOrderID - SOAP::SOAPString
class TransactionType
  attr_accessor :amountPaid
  attr_accessor :adjustmentAmount
  attr_accessor :convertedAdjustmentAmount
  attr_accessor :buyer
  attr_accessor :shippingDetails
  attr_accessor :convertedAmountPaid
  attr_accessor :convertedTransactionPrice
  attr_accessor :createdDate
  attr_accessor :depositType
  attr_accessor :item
  attr_accessor :quantityPurchased
  attr_accessor :status
  attr_accessor :transactionID
  attr_accessor :transactionPrice
  attr_accessor :bestOfferSale
  attr_accessor :vATPercent
  attr_accessor :externalTransaction
  attr_accessor :sellingManagerProductDetails
  attr_accessor :shippingServiceSelected
  attr_accessor :buyerMessage
  attr_accessor :dutchAuctionBid
  attr_accessor :buyerPaidStatus
  attr_accessor :sellerPaidStatus
  attr_accessor :paidTime
  attr_accessor :shippedTime
  attr_accessor :totalPrice
  attr_accessor :feedbackLeft
  attr_accessor :feedbackReceived
  attr_accessor :containingOrder
  attr_accessor :finalValueFee
  attr_accessor :listingCheckoutRedirectPreference
  attr_accessor :refundArray
  attr_accessor :transactionSiteID
  attr_accessor :platform
  attr_accessor :cartID
  attr_accessor :sellerContactBuyerByEmail
  attr_accessor :payPalEmailAddress
  attr_accessor :paisaPayID
  attr_accessor :buyerGuaranteePrice
  attr_accessor :variation
  attr_accessor :buyerCheckoutMessage
  attr_accessor :taxes
  attr_accessor :bundlePurchase
  attr_accessor :actualShippingCost
  attr_accessor :actualHandlingCost
  attr_accessor :orderLineItemID
  attr_accessor :paymentHoldDetails
  attr_accessor :sellerDiscounts
  attr_accessor :refundAmount
  attr_accessor :refundStatus
  attr_accessor :codiceFiscale
  attr_accessor :isMultiLegShipping
  attr_accessor :multiLegShippingDetails
  attr_accessor :invoiceSentTime
  attr_accessor :unpaidItem
  attr_accessor :intangibleItem
  attr_accessor :monetaryDetails
  attr_accessor :pickupDetails
  attr_accessor :pickupMethodSelected
  attr_accessor :shippingConvenienceCharge
  attr_accessor :logisticsPlanType
  attr_accessor :buyerPackageEnclosures
  attr_accessor :inventoryReservationID
  attr_accessor :extendedOrderID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(amountPaid = nil, adjustmentAmount = nil, convertedAdjustmentAmount = nil, buyer = nil, shippingDetails = nil, convertedAmountPaid = nil, convertedTransactionPrice = nil, createdDate = nil, depositType = nil, item = nil, quantityPurchased = nil, status = nil, transactionID = nil, transactionPrice = nil, bestOfferSale = nil, vATPercent = nil, externalTransaction = [], sellingManagerProductDetails = nil, shippingServiceSelected = nil, buyerMessage = nil, dutchAuctionBid = nil, buyerPaidStatus = nil, sellerPaidStatus = nil, paidTime = nil, shippedTime = nil, totalPrice = nil, feedbackLeft = nil, feedbackReceived = nil, containingOrder = nil, finalValueFee = nil, listingCheckoutRedirectPreference = nil, refundArray = nil, transactionSiteID = nil, platform = nil, cartID = nil, sellerContactBuyerByEmail = nil, payPalEmailAddress = nil, paisaPayID = nil, buyerGuaranteePrice = nil, variation = nil, buyerCheckoutMessage = nil, taxes = nil, bundlePurchase = nil, actualShippingCost = nil, actualHandlingCost = nil, orderLineItemID = nil, paymentHoldDetails = nil, sellerDiscounts = nil, refundAmount = nil, refundStatus = nil, codiceFiscale = nil, isMultiLegShipping = nil, multiLegShippingDetails = nil, invoiceSentTime = nil, unpaidItem = nil, intangibleItem = nil, monetaryDetails = nil, pickupDetails = nil, pickupMethodSelected = nil, shippingConvenienceCharge = nil, logisticsPlanType = nil, buyerPackageEnclosures = nil, inventoryReservationID = nil, extendedOrderID = nil)
    @amountPaid = amountPaid
    @adjustmentAmount = adjustmentAmount
    @convertedAdjustmentAmount = convertedAdjustmentAmount
    @buyer = buyer
    @shippingDetails = shippingDetails
    @convertedAmountPaid = convertedAmountPaid
    @convertedTransactionPrice = convertedTransactionPrice
    @createdDate = createdDate
    @depositType = depositType
    @item = item
    @quantityPurchased = quantityPurchased
    @status = status
    @transactionID = transactionID
    @transactionPrice = transactionPrice
    @bestOfferSale = bestOfferSale
    @vATPercent = vATPercent
    @externalTransaction = externalTransaction
    @sellingManagerProductDetails = sellingManagerProductDetails
    @shippingServiceSelected = shippingServiceSelected
    @buyerMessage = buyerMessage
    @dutchAuctionBid = dutchAuctionBid
    @buyerPaidStatus = buyerPaidStatus
    @sellerPaidStatus = sellerPaidStatus
    @paidTime = paidTime
    @shippedTime = shippedTime
    @totalPrice = totalPrice
    @feedbackLeft = feedbackLeft
    @feedbackReceived = feedbackReceived
    @containingOrder = containingOrder
    @finalValueFee = finalValueFee
    @listingCheckoutRedirectPreference = listingCheckoutRedirectPreference
    @refundArray = refundArray
    @transactionSiteID = transactionSiteID
    @platform = platform
    @cartID = cartID
    @sellerContactBuyerByEmail = sellerContactBuyerByEmail
    @payPalEmailAddress = payPalEmailAddress
    @paisaPayID = paisaPayID
    @buyerGuaranteePrice = buyerGuaranteePrice
    @variation = variation
    @buyerCheckoutMessage = buyerCheckoutMessage
    @taxes = taxes
    @bundlePurchase = bundlePurchase
    @actualShippingCost = actualShippingCost
    @actualHandlingCost = actualHandlingCost
    @orderLineItemID = orderLineItemID
    @paymentHoldDetails = paymentHoldDetails
    @sellerDiscounts = sellerDiscounts
    @refundAmount = refundAmount
    @refundStatus = refundStatus
    @codiceFiscale = codiceFiscale
    @isMultiLegShipping = isMultiLegShipping
    @multiLegShippingDetails = multiLegShippingDetails
    @invoiceSentTime = invoiceSentTime
    @unpaidItem = unpaidItem
    @intangibleItem = intangibleItem
    @monetaryDetails = monetaryDetails
    @pickupDetails = pickupDetails
    @pickupMethodSelected = pickupMethodSelected
    @shippingConvenienceCharge = shippingConvenienceCharge
    @logisticsPlanType = logisticsPlanType
    @buyerPackageEnclosures = buyerPackageEnclosures
    @inventoryReservationID = inventoryReservationID
    @extendedOrderID = extendedOrderID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UPCEnabledDefinitionType
class UPCEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UPCIdentifierEnabledDefinitionType
class UPCIdentifierEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}URLDetailsType
#   uRLType - EBay::URLTypeCodeType
#   uRL - SOAP::SOAPAnyURI
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class URLDetailsType
  attr_accessor :uRLType
  attr_accessor :uRL
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(uRLType = nil, uRL = nil, detailVersion = nil, updateTime = nil)
    @uRLType = uRLType
    @uRL = uRL
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UnitInfoType
#   unitType - SOAP::SOAPString
#   unitQuantity - SOAP::SOAPDouble
class UnitInfoType
  attr_accessor :unitType
  attr_accessor :unitQuantity
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(unitType = nil, unitQuantity = nil)
    @unitType = unitType
    @unitQuantity = unitQuantity
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UnitOfMeasurementDetailsType
#   unitOfMeasurement - EBay::UnitOfMeasurementType
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class UnitOfMeasurementDetailsType
  attr_accessor :unitOfMeasurement
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(unitOfMeasurement = [], detailVersion = nil, updateTime = nil)
    @unitOfMeasurement = unitOfMeasurement
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UnitOfMeasurementType
#   alternateText - SOAP::SOAPString
#   suggestedText - SOAP::SOAPString
class UnitOfMeasurementType
  attr_accessor :alternateText
  attr_accessor :suggestedText
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(alternateText = [], suggestedText = nil)
    @alternateText = alternateText
    @suggestedText = suggestedText
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UnpaidItemAssistancePreferencesType
#   delayBeforeOpeningDispute - SOAP::SOAPInt
#   optInStatus - SOAP::SOAPBoolean
#   autoRelist - SOAP::SOAPBoolean
#   removeAllExcludedUsers - SOAP::SOAPBoolean
#   excludedUser - SOAP::SOAPString
#   autoOptDonationRefund - SOAP::SOAPBoolean
class UnpaidItemAssistancePreferencesType
  attr_accessor :delayBeforeOpeningDispute
  attr_accessor :optInStatus
  attr_accessor :autoRelist
  attr_accessor :removeAllExcludedUsers
  attr_accessor :excludedUser
  attr_accessor :autoOptDonationRefund
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(delayBeforeOpeningDispute = nil, optInStatus = nil, autoRelist = nil, removeAllExcludedUsers = nil, excludedUser = [], autoOptDonationRefund = nil)
    @delayBeforeOpeningDispute = delayBeforeOpeningDispute
    @optInStatus = optInStatus
    @autoRelist = autoRelist
    @removeAllExcludedUsers = removeAllExcludedUsers
    @excludedUser = excludedUser
    @autoOptDonationRefund = autoOptDonationRefund
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UnpaidItemType
#   status - EBay::UnpaidItemCaseStatusTypeCodeType
#   type - EBay::UnpaidItemCaseOpenTypeCodeType
class UnpaidItemType
  attr_accessor :status
  attr_accessor :type
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(status = nil, type = nil)
    @status = status
    @type = type
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserAgreementInfoType
#   site - EBay::SiteCodeType
#   sellereBayPaymentProcessStatus - EBay::SellereBayPaymentProcessStatusCodeType
#   acceptedTime - SOAP::SOAPDateTime
#   sellereBayPaymentProcessEnableTime - SOAP::SOAPDateTime
#   userAgreementURL - SOAP::SOAPAnyURI
class UserAgreementInfoType
  attr_accessor :site
  attr_accessor :sellereBayPaymentProcessStatus
  attr_accessor :acceptedTime
  attr_accessor :sellereBayPaymentProcessEnableTime
  attr_accessor :userAgreementURL
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(site = nil, sellereBayPaymentProcessStatus = nil, acceptedTime = nil, sellereBayPaymentProcessEnableTime = nil, userAgreementURL = nil)
    @site = site
    @sellereBayPaymentProcessStatus = sellereBayPaymentProcessStatus
    @acceptedTime = acceptedTime
    @sellereBayPaymentProcessEnableTime = sellereBayPaymentProcessEnableTime
    @userAgreementURL = userAgreementURL
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserConsentRequiredDefinitionType
class UserConsentRequiredDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserDefinedListType
#   name - SOAP::SOAPString
#   itemCount - SOAP::SOAPInt
#   favoriteSearcheCount - SOAP::SOAPInt
#   favoriteSellerCount - SOAP::SOAPInt
#   itemArray - EBay::ItemArrayType
#   favoriteSearches - EBay::MyeBayFavoriteSearchListType
#   favoriteSellers - EBay::MyeBayFavoriteSellerListType
class UserDefinedListType
  attr_accessor :name
  attr_accessor :itemCount
  attr_accessor :favoriteSearcheCount
  attr_accessor :favoriteSellerCount
  attr_accessor :itemArray
  attr_accessor :favoriteSearches
  attr_accessor :favoriteSellers
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(name = nil, itemCount = nil, favoriteSearcheCount = nil, favoriteSellerCount = nil, itemArray = nil, favoriteSearches = nil, favoriteSellers = nil)
    @name = name
    @itemCount = itemCount
    @favoriteSearcheCount = favoriteSearcheCount
    @favoriteSellerCount = favoriteSellerCount
    @itemArray = itemArray
    @favoriteSearches = favoriteSearches
    @favoriteSellers = favoriteSellers
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIDArrayType
#   userID - (any)
class UserIDArrayType
  attr_accessor :userID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(userID = [])
    @userID = userID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserIdentityType
#   xmlattr_type - SOAP::SOAPToken
class UserIdentityType < ::String
  AttrType = XSD::QName.new(nil, "type")

  def __xmlattr
    @__xmlattr ||= {}
  end

  def xmlattr_type
    __xmlattr[AttrType]
  end

  def xmlattr_type=(value)
    __xmlattr[AttrType] = value
  end

  def initialize(*arg)
    super
    @__xmlattr = {}
  end
end

# {urn:ebay:apis:eBLBaseComponents}UserType
#   aboutMePage - SOAP::SOAPBoolean
#   eIASToken - SOAP::SOAPString
#   email - SOAP::SOAPString
#   feedbackScore - SOAP::SOAPInt
#   uniqueNegativeFeedbackCount - SOAP::SOAPInt
#   uniquePositiveFeedbackCount - SOAP::SOAPInt
#   positiveFeedbackPercent - SOAP::SOAPFloat
#   feedbackPrivate - SOAP::SOAPBoolean
#   feedbackRatingStar - EBay::FeedbackRatingStarCodeType
#   iDVerified - SOAP::SOAPBoolean
#   eBayGoodStanding - SOAP::SOAPBoolean
#   newUser - SOAP::SOAPBoolean
#   registrationAddress - EBay::AddressType
#   registrationDate - SOAP::SOAPDateTime
#   site - EBay::SiteCodeType
#   status - EBay::UserStatusCodeType
#   userID - (any)
#   userIDChanged - SOAP::SOAPBoolean
#   userIDLastChanged - SOAP::SOAPDateTime
#   vATStatus - EBay::VATStatusCodeType
#   buyerInfo - EBay::BuyerType
#   sellerInfo - EBay::SellerType
#   businessRole - EBay::BusinessRoleType
#   charityAffiliations - EBay::CharityAffiliationsType
#   payPalAccountLevel - EBay::PayPalAccountLevelCodeType
#   payPalAccountType - EBay::PayPalAccountTypeCodeType
#   payPalAccountStatus - EBay::PayPalAccountStatusCodeType
#   userSubscription - EBay::EBaySubscriptionTypeCodeType
#   siteVerified - SOAP::SOAPBoolean
#   skypeID - SOAP::SOAPString
#   eBayWikiReadOnly - SOAP::SOAPBoolean
#   tUVLevel - SOAP::SOAPInt
#   vATID - SOAP::SOAPString
#   motorsDealer - SOAP::SOAPBoolean
#   sellerPaymentMethod - EBay::SellerPaymentMethodCodeType
#   biddingSummary - EBay::BiddingSummaryType
#   userAnonymized - SOAP::SOAPBoolean
#   uniqueNeutralFeedbackCount - SOAP::SOAPInt
#   enterpriseSeller - SOAP::SOAPBoolean
#   billingEmail - SOAP::SOAPString
#   qualifiesForSelling - SOAP::SOAPBoolean
#   staticAlias - SOAP::SOAPString
#   shippingAddress - EBay::AddressType
#   userFirstName - SOAP::SOAPString
#   userLastName - SOAP::SOAPString
class UserType
  attr_accessor :aboutMePage
  attr_accessor :eIASToken
  attr_accessor :email
  attr_accessor :feedbackScore
  attr_accessor :uniqueNegativeFeedbackCount
  attr_accessor :uniquePositiveFeedbackCount
  attr_accessor :positiveFeedbackPercent
  attr_accessor :feedbackPrivate
  attr_accessor :feedbackRatingStar
  attr_accessor :iDVerified
  attr_accessor :eBayGoodStanding
  attr_accessor :newUser
  attr_accessor :registrationAddress
  attr_accessor :registrationDate
  attr_accessor :site
  attr_accessor :status
  attr_accessor :userID
  attr_accessor :userIDChanged
  attr_accessor :userIDLastChanged
  attr_accessor :vATStatus
  attr_accessor :buyerInfo
  attr_accessor :sellerInfo
  attr_accessor :businessRole
  attr_accessor :charityAffiliations
  attr_accessor :payPalAccountLevel
  attr_accessor :payPalAccountType
  attr_accessor :payPalAccountStatus
  attr_accessor :userSubscription
  attr_accessor :siteVerified
  attr_accessor :skypeID
  attr_accessor :eBayWikiReadOnly
  attr_accessor :tUVLevel
  attr_accessor :vATID
  attr_accessor :motorsDealer
  attr_accessor :sellerPaymentMethod
  attr_accessor :biddingSummary
  attr_accessor :userAnonymized
  attr_accessor :uniqueNeutralFeedbackCount
  attr_accessor :enterpriseSeller
  attr_accessor :billingEmail
  attr_accessor :qualifiesForSelling
  attr_accessor :staticAlias
  attr_accessor :shippingAddress
  attr_accessor :userFirstName
  attr_accessor :userLastName
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(aboutMePage = nil, eIASToken = nil, email = nil, feedbackScore = nil, uniqueNegativeFeedbackCount = nil, uniquePositiveFeedbackCount = nil, positiveFeedbackPercent = nil, feedbackPrivate = nil, feedbackRatingStar = nil, iDVerified = nil, eBayGoodStanding = nil, newUser = nil, registrationAddress = nil, registrationDate = nil, site = nil, status = nil, userID = nil, userIDChanged = nil, userIDLastChanged = nil, vATStatus = nil, buyerInfo = nil, sellerInfo = nil, businessRole = nil, charityAffiliations = nil, payPalAccountLevel = nil, payPalAccountType = nil, payPalAccountStatus = nil, userSubscription = [], siteVerified = nil, skypeID = [], eBayWikiReadOnly = nil, tUVLevel = nil, vATID = nil, motorsDealer = nil, sellerPaymentMethod = nil, biddingSummary = nil, userAnonymized = nil, uniqueNeutralFeedbackCount = nil, enterpriseSeller = nil, billingEmail = nil, qualifiesForSelling = nil, staticAlias = nil, shippingAddress = nil, userFirstName = nil, userLastName = nil)
    @aboutMePage = aboutMePage
    @eIASToken = eIASToken
    @email = email
    @feedbackScore = feedbackScore
    @uniqueNegativeFeedbackCount = uniqueNegativeFeedbackCount
    @uniquePositiveFeedbackCount = uniquePositiveFeedbackCount
    @positiveFeedbackPercent = positiveFeedbackPercent
    @feedbackPrivate = feedbackPrivate
    @feedbackRatingStar = feedbackRatingStar
    @iDVerified = iDVerified
    @eBayGoodStanding = eBayGoodStanding
    @newUser = newUser
    @registrationAddress = registrationAddress
    @registrationDate = registrationDate
    @site = site
    @status = status
    @userID = userID
    @userIDChanged = userIDChanged
    @userIDLastChanged = userIDLastChanged
    @vATStatus = vATStatus
    @buyerInfo = buyerInfo
    @sellerInfo = sellerInfo
    @businessRole = businessRole
    @charityAffiliations = charityAffiliations
    @payPalAccountLevel = payPalAccountLevel
    @payPalAccountType = payPalAccountType
    @payPalAccountStatus = payPalAccountStatus
    @userSubscription = userSubscription
    @siteVerified = siteVerified
    @skypeID = skypeID
    @eBayWikiReadOnly = eBayWikiReadOnly
    @tUVLevel = tUVLevel
    @vATID = vATID
    @motorsDealer = motorsDealer
    @sellerPaymentMethod = sellerPaymentMethod
    @biddingSummary = biddingSummary
    @userAnonymized = userAnonymized
    @uniqueNeutralFeedbackCount = uniqueNeutralFeedbackCount
    @enterpriseSeller = enterpriseSeller
    @billingEmail = billingEmail
    @qualifiesForSelling = qualifiesForSelling
    @staticAlias = staticAlias
    @shippingAddress = shippingAddress
    @userFirstName = userFirstName
    @userLastName = userLastName
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VATDetailsType
#   businessSeller - SOAP::SOAPBoolean
#   restrictedToBusiness - SOAP::SOAPBoolean
#   vATPercent - SOAP::SOAPFloat
#   vATSite - SOAP::SOAPString
#   vATID - SOAP::SOAPString
class VATDetailsType
  attr_accessor :businessSeller
  attr_accessor :restrictedToBusiness
  attr_accessor :vATPercent
  attr_accessor :vATSite
  attr_accessor :vATID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(businessSeller = nil, restrictedToBusiness = nil, vATPercent = nil, vATSite = nil, vATID = nil)
    @businessSeller = businessSeller
    @restrictedToBusiness = restrictedToBusiness
    @vATPercent = vATPercent
    @vATSite = vATSite
    @vATID = vATID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VATRateType
#   itemID - (any)
#   transactionID - SOAP::SOAPString
#   vATPercent - SOAP::SOAPFloat
#   orderLineItemID - SOAP::SOAPString
class VATRateType
  attr_accessor :itemID
  attr_accessor :transactionID
  attr_accessor :vATPercent
  attr_accessor :orderLineItemID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, transactionID = nil, vATPercent = nil, orderLineItemID = nil)
    @itemID = itemID
    @transactionID = transactionID
    @vATPercent = vATPercent
    @orderLineItemID = orderLineItemID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VINSupportedDefinitionType
class VINSupportedDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VRMSupportedDefinitionType
class VRMSupportedDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValType
#   valueLiteral - SOAP::SOAPString
#   suggestedValueLiteral - SOAP::SOAPString
#   valueID - SOAP::SOAPInt
class ValType
  attr_accessor :valueLiteral
  attr_accessor :suggestedValueLiteral
  attr_accessor :valueID
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(valueLiteral = nil, suggestedValueLiteral = [], valueID = nil)
    @valueLiteral = valueLiteral
    @suggestedValueLiteral = suggestedValueLiteral
    @valueID = valueID
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValueCategoryDefinitionType
class ValueCategoryDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValuePackEnabledDefinitionType
class ValuePackEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}ValueRecommendationType
#   value - SOAP::SOAPString
#   validationRules - EBay::RecommendationValidationRulesType
class ValueRecommendationType
  attr_accessor :value
  attr_accessor :validationRules
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(value = nil, validationRules = nil)
    @value = value
    @validationRules = validationRules
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VariationDetailsType
#   maxVariationsPerItem - SOAP::SOAPInt
#   maxNamesPerVariationSpecificsSet - SOAP::SOAPInt
#   maxValuesPerVariationSpecificsSetName - SOAP::SOAPInt
#   detailVersion - SOAP::SOAPString
#   updateTime - SOAP::SOAPDateTime
class VariationDetailsType
  attr_accessor :maxVariationsPerItem
  attr_accessor :maxNamesPerVariationSpecificsSet
  attr_accessor :maxValuesPerVariationSpecificsSetName
  attr_accessor :detailVersion
  attr_accessor :updateTime
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(maxVariationsPerItem = nil, maxNamesPerVariationSpecificsSet = nil, maxValuesPerVariationSpecificsSetName = nil, detailVersion = nil, updateTime = nil)
    @maxVariationsPerItem = maxVariationsPerItem
    @maxNamesPerVariationSpecificsSet = maxNamesPerVariationSpecificsSet
    @maxValuesPerVariationSpecificsSetName = maxValuesPerVariationSpecificsSetName
    @detailVersion = detailVersion
    @updateTime = updateTime
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VariationKeyType
#   itemID - (any)
#   variationSpecifics - EBay::NameValueListArrayType
class VariationKeyType
  attr_accessor :itemID
  attr_accessor :variationSpecifics
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, variationSpecifics = nil)
    @itemID = itemID
    @variationSpecifics = variationSpecifics
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VariationProductListingDetailsType
#   iSBN - SOAP::SOAPString
#   uPC - SOAP::SOAPString
#   eAN - SOAP::SOAPString
class VariationProductListingDetailsType
  attr_accessor :iSBN
  attr_accessor :uPC
  attr_accessor :eAN
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(iSBN = nil, uPC = nil, eAN = nil)
    @iSBN = iSBN
    @uPC = uPC
    @eAN = eAN
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VariationSpecificPictureSetType
#   variationSpecificValue - SOAP::SOAPString
#   pictureURL - SOAP::SOAPAnyURI
#   galleryURL - SOAP::SOAPAnyURI
#   externalPictureURL - SOAP::SOAPAnyURI
#   extendedPictureDetails - EBay::ExtendedPictureDetailsType
class VariationSpecificPictureSetType
  attr_accessor :variationSpecificValue
  attr_accessor :pictureURL
  attr_accessor :galleryURL
  attr_accessor :externalPictureURL
  attr_accessor :extendedPictureDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(variationSpecificValue = nil, pictureURL = [], galleryURL = nil, externalPictureURL = [], extendedPictureDetails = nil)
    @variationSpecificValue = variationSpecificValue
    @pictureURL = pictureURL
    @galleryURL = galleryURL
    @externalPictureURL = externalPictureURL
    @extendedPictureDetails = extendedPictureDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VariationType
#   sKU - (any)
#   startPrice - EBay::AmountType
#   quantity - SOAP::SOAPInt
#   variationSpecifics - EBay::NameValueListArrayType
#   unitsAvailable - SOAP::SOAPInt
#   unitCost - EBay::AmountType
#   sellingStatus - EBay::SellingStatusType
#   variationTitle - SOAP::SOAPString
#   variationViewItemURL - SOAP::SOAPAnyURI
#   delete - SOAP::SOAPBoolean
#   sellingManagerProductInventoryStatus - EBay::SellingManagerProductInventoryStatusType
#   watchCount - SOAP::SOAPLong
#   privateNotes - SOAP::SOAPString
#   discountPriceInfo - EBay::DiscountPriceInfoType
#   variationProductListingDetails - EBay::VariationProductListingDetailsType
class VariationType
  attr_accessor :sKU
  attr_accessor :startPrice
  attr_accessor :quantity
  attr_accessor :variationSpecifics
  attr_accessor :unitsAvailable
  attr_accessor :unitCost
  attr_accessor :sellingStatus
  attr_accessor :variationTitle
  attr_accessor :variationViewItemURL
  attr_accessor :delete
  attr_accessor :sellingManagerProductInventoryStatus
  attr_accessor :watchCount
  attr_accessor :privateNotes
  attr_accessor :discountPriceInfo
  attr_accessor :variationProductListingDetails
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(sKU = nil, startPrice = nil, quantity = nil, variationSpecifics = nil, unitsAvailable = nil, unitCost = nil, sellingStatus = nil, variationTitle = nil, variationViewItemURL = nil, delete = nil, sellingManagerProductInventoryStatus = nil, watchCount = nil, privateNotes = nil, discountPriceInfo = nil, variationProductListingDetails = nil)
    @sKU = sKU
    @startPrice = startPrice
    @quantity = quantity
    @variationSpecifics = variationSpecifics
    @unitsAvailable = unitsAvailable
    @unitCost = unitCost
    @sellingStatus = sellingStatus
    @variationTitle = variationTitle
    @variationViewItemURL = variationViewItemURL
    @delete = delete
    @sellingManagerProductInventoryStatus = sellingManagerProductInventoryStatus
    @watchCount = watchCount
    @privateNotes = privateNotes
    @discountPriceInfo = discountPriceInfo
    @variationProductListingDetails = variationProductListingDetails
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VariationsEnabledDefinitionType
class VariationsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VariationsType
#   variation - EBay::VariationType
#   pictures - EBay::PicturesType
#   variationSpecificsSet - EBay::NameValueListArrayType
#   modifyNameList - EBay::ModifyNameArrayType
class VariationsType
  attr_accessor :variation
  attr_accessor :pictures
  attr_accessor :variationSpecificsSet
  attr_accessor :modifyNameList
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(variation = [], pictures = [], variationSpecificsSet = nil, modifyNameList = nil)
    @variation = variation
    @pictures = pictures
    @variationSpecificsSet = variationSpecificsSet
    @modifyNameList = modifyNameList
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VeROReasonCodeDetailsType
class VeROReasonCodeDetailsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportItemType
#   itemID - (any)
#   veROReasonCodeID - SOAP::SOAPLong
#   messageToSeller - SOAP::SOAPString
#   copyEmailToRightsOwner - SOAP::SOAPBoolean
#   region - EBay::ShippingRegionCodeType
#   country - EBay::CountryCodeType
#   patent - SOAP::SOAPString
#   detailedMessage - SOAP::SOAPString
class VeROReportItemType
  attr_accessor :itemID
  attr_accessor :veROReasonCodeID
  attr_accessor :messageToSeller
  attr_accessor :copyEmailToRightsOwner
  attr_accessor :region
  attr_accessor :country
  attr_accessor :patent
  attr_accessor :detailedMessage
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, veROReasonCodeID = nil, messageToSeller = nil, copyEmailToRightsOwner = nil, region = [], country = [], patent = nil, detailedMessage = nil)
    @itemID = itemID
    @veROReasonCodeID = veROReasonCodeID
    @messageToSeller = messageToSeller
    @copyEmailToRightsOwner = copyEmailToRightsOwner
    @region = region
    @country = country
    @patent = patent
    @detailedMessage = detailedMessage
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportItemsType
class VeROReportItemsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportedItemDetailsType
class VeROReportedItemDetailsType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportedItemType
#   itemID - (any)
#   itemStatus - EBay::VeROItemStatusCodeType
#   itemReasonForFailure - SOAP::SOAPString
class VeROReportedItemType
  attr_accessor :itemID
  attr_accessor :itemStatus
  attr_accessor :itemReasonForFailure
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(itemID = nil, itemStatus = nil, itemReasonForFailure = nil)
    @itemID = itemID
    @itemStatus = itemStatus
    @itemReasonForFailure = itemReasonForFailure
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VeROSiteDetailType
#   site - EBay::SiteCodeType
#   reasonCodeDetail - EBay::ReasonCodeDetailType
class VeROSiteDetailType
  attr_accessor :site
  attr_accessor :reasonCodeDetail
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(site = nil, reasonCodeDetail = [])
    @site = site
    @reasonCodeDetail = reasonCodeDetail
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifiedUserRequirementsDetailsType
#   verifiedUser - SOAP::SOAPBoolean
#   feedbackScore - SOAP::SOAPInt
class VerifiedUserRequirementsDetailsType
  attr_accessor :verifiedUser
  attr_accessor :feedbackScore
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(verifiedUser = nil, feedbackScore = [])
    @verifiedUser = verifiedUser
    @feedbackScore = feedbackScore
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}VerifiedUserRequirementsType
#   verifiedUser - SOAP::SOAPBoolean
#   minimumFeedbackScore - SOAP::SOAPInt
class VerifiedUserRequirementsType
  attr_accessor :verifiedUser
  attr_accessor :minimumFeedbackScore

  def initialize(verifiedUser = nil, minimumFeedbackScore = nil)
    @verifiedUser = verifiedUser
    @minimumFeedbackScore = minimumFeedbackScore
  end
end

# {urn:ebay:apis:eBLBaseComponents}WantItNowPostArrayType
class WantItNowPostArrayType < ::Array
end

# {urn:ebay:apis:eBLBaseComponents}WantItNowPostType
#   categoryID - SOAP::SOAPString
#   description - SOAP::SOAPString
#   postID - (any)
#   site - EBay::SiteCodeType
#   startTime - SOAP::SOAPDateTime
#   responseCount - SOAP::SOAPInt
#   title - SOAP::SOAPString
class WantItNowPostType
  attr_accessor :categoryID
  attr_accessor :description
  attr_accessor :postID
  attr_accessor :site
  attr_accessor :startTime
  attr_accessor :responseCount
  attr_accessor :title

  def initialize(categoryID = nil, description = nil, postID = nil, site = nil, startTime = nil, responseCount = nil, title = nil)
    @categoryID = categoryID
    @description = description
    @postID = postID
    @site = site
    @startTime = startTime
    @responseCount = responseCount
    @title = title
  end
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyDurationDetailsType
#   warrantyDurationOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class WarrantyDurationDetailsType
  attr_accessor :warrantyDurationOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(warrantyDurationOption = nil, description = nil)
    @warrantyDurationOption = warrantyDurationOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyOfferedDetailsType
#   warrantyOfferedOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class WarrantyOfferedDetailsType
  attr_accessor :warrantyOfferedOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(warrantyOfferedOption = nil, description = nil)
    @warrantyOfferedOption = warrantyOfferedOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyTypeDetailsType
#   warrantyTypeOption - SOAP::SOAPToken
#   description - SOAP::SOAPString
class WarrantyTypeDetailsType
  attr_accessor :warrantyTypeOption
  attr_accessor :description
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(warrantyTypeOption = nil, description = nil)
    @warrantyTypeOption = warrantyTypeOption
    @description = description
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}XSLFileType
#   fileName - SOAP::SOAPString
#   fileVersion - SOAP::SOAPString
#   fileContent - SOAP::SOAPString
class XSLFileType
  attr_accessor :fileName
  attr_accessor :fileVersion
  attr_accessor :fileContent
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(fileName = nil, fileVersion = nil, fileContent = nil)
    @fileName = fileName
    @fileVersion = fileVersion
    @fileContent = fileContent
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProAdFormatEnabledDefinitionType
class EBayMotorsProAdFormatEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProAutoAcceptEnabledDefinitionType
class EBayMotorsProAutoAcceptEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProAutoDeclineEnabledDefinitionType
class EBayMotorsProAutoDeclineEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProBestOfferEnabledDefinitionType
class EBayMotorsProBestOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProCompanyNameEnabledDefinitionType
class EBayMotorsProCompanyNameEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProContactByAddressEnabledDefinitionType
class EBayMotorsProContactByAddressEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProContactByEmailEnabledDefinitionType
class EBayMotorsProContactByEmailEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProContactByPhoneEnabledDefinitionType
class EBayMotorsProContactByPhoneEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProCounterOfferEnabledDefinitionType
class EBayMotorsProCounterOfferEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProPaymentMethodCheckOutEnabledDefinitionType
class EBayMotorsProPaymentMethodCheckOutEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProPhoneCountDefinitionType
class EBayMotorsProPhoneCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProSellerContactDetailsEnabledDefinitionType
class EBayMotorsProSellerContactDetailsEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProShippingMethodEnabledDefinitionType
class EBayMotorsProShippingMethodEnabledDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayMotorsProStreetCountDefinitionType
class EBayMotorsProStreetCountDefinitionType
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayPLUSPreferenceType
#   country - EBay::CountryCodeType
#   optInStatus - SOAP::SOAPBoolean
#   listingPreference - SOAP::SOAPBoolean
class EBayPLUSPreferenceType
  attr_accessor :country
  attr_accessor :optInStatus
  attr_accessor :listingPreference
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(country = nil, optInStatus = nil, listingPreference = nil)
    @country = country
    @optInStatus = optInStatus
    @listingPreference = listingPreference
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}eBayPaymentMismatchDetailsType
#   mismatchType - EBay::MismatchTypeCodeType
#   actionRequiredBy - SOAP::SOAPDateTime
#   mismatchAmount - EBay::AmountType
class EBayPaymentMismatchDetailsType
  attr_accessor :mismatchType
  attr_accessor :actionRequiredBy
  attr_accessor :mismatchAmount
  attr_reader :__xmlele_any

  def set_any(elements)
    @__xmlele_any = elements
  end

  def initialize(mismatchType = nil, actionRequiredBy = nil, mismatchAmount = nil)
    @mismatchType = mismatchType
    @actionRequiredBy = actionRequiredBy
    @mismatchAmount = mismatchAmount
    @__xmlele_any = nil
  end
end

# {urn:ebay:apis:eBLBaseComponents}AckCodeType
class AckCodeType < ::String
  CustomCode = new("CustomCode")
  Failure = new("Failure")
  PartialFailure = new("PartialFailure")
  Success = new("Success")
  Warning = new("Warning")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerPaymentMethodCodeType
class BuyerPaymentMethodCodeType < ::String
  AmEx = new("AmEx")
  CCAccepted = new("CCAccepted")
  COD = new("COD")
  CODPrePayDelivery = new("CODPrePayDelivery")
  CashInPerson = new("CashInPerson")
  CashOnPickup = new("CashOnPickup")
  CreditCard = new("CreditCard")
  CustomCode = new("CustomCode")
  Diners = new("Diners")
  DirectDebit = new("DirectDebit")
  Discover = new("Discover")
  ELV = new("ELV")
  Escrow = new("Escrow")
  IntegratedMerchantCreditCard = new("IntegratedMerchantCreditCard")
  LoanCheck = new("LoanCheck")
  MOCC = new("MOCC")
  MoneyXferAccepted = new("MoneyXferAccepted")
  MoneyXferAcceptedInCheckout = new("MoneyXferAcceptedInCheckout")
  Moneybookers = new("Moneybookers")
  None = new("None")
  Other = new("Other")
  OtherOnlinePayments = new("OtherOnlinePayments")
  PaisaPayAccepted = new("PaisaPayAccepted")
  PaisaPayEscrow = new("PaisaPayEscrow")
  PaisaPayEscrowEMI = new("PaisaPayEscrowEMI")
  PayOnPickup = new("PayOnPickup")
  PayPal = new("PayPal")
  PayUponInvoice = new("PayUponInvoice")
  Paymate = new("Paymate")
  PaymentSeeDescription = new("PaymentSeeDescription")
  PersonalCheck = new("PersonalCheck")
  PostalTransfer = new("PostalTransfer")
  PrePayDelivery = new("PrePayDelivery")
  ProPay = new("ProPay")
  QIWI = new("QIWI")
  StandardPayment = new("StandardPayment")
  VisaMC = new("VisaMC")
end

# {urn:ebay:apis:eBLBaseComponents}DetailLevelCodeType
class DetailLevelCodeType < ::String
  ItemReturnAttributes = new("ItemReturnAttributes")
  ItemReturnCategories = new("ItemReturnCategories")
  ItemReturnDescription = new("ItemReturnDescription")
  ReturnAll = new("ReturnAll")
  ReturnHeaders = new("ReturnHeaders")
  ReturnMessages = new("ReturnMessages")
  ReturnSummary = new("ReturnSummary")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeActivityCodeType
class DisputeActivityCodeType < ::String
  CameToAgreementNeedFVFCredit = new("CameToAgreementNeedFVFCredit")
  CustomCode = new("CustomCode")
  MutualAgreementOrNoBuyerResponse = new("MutualAgreementOrNoBuyerResponse")
  SellerAddInformation = new("SellerAddInformation")
  SellerComment = new("SellerComment")
  SellerCompletedTransaction = new("SellerCompletedTransaction")
  SellerEndCommunication = new("SellerEndCommunication")
  SellerOffersRefund = new("SellerOffersRefund")
  SellerPaymentNotReceived = new("SellerPaymentNotReceived")
  SellerShippedItem = new("SellerShippedItem")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeCreditEligibilityCodeType
class DisputeCreditEligibilityCodeType < ::String
  CustomCode = new("CustomCode")
  Eligible = new("Eligible")
  InEligible = new("InEligible")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeExplanationCodeType
class DisputeExplanationCodeType < ::String
  BuyerHasNotResponded = new("BuyerHasNotResponded")
  BuyerNoLongerRegistered = new("BuyerNoLongerRegistered")
  BuyerNoLongerWantsItem = new("BuyerNoLongerWantsItem")
  BuyerNotClearedToPay = new("BuyerNotClearedToPay")
  BuyerNotPaid = new("BuyerNotPaid")
  BuyerPaymentNotReceivedOrCleared = new("BuyerPaymentNotReceivedOrCleared")
  BuyerPurchasingMistake = new("BuyerPurchasingMistake")
  BuyerRefusedToPay = new("BuyerRefusedToPay")
  BuyerReturnedItemForRefund = new("BuyerReturnedItemForRefund")
  CustomCode = new("CustomCode")
  OtherExplanation = new("OtherExplanation")
  PaymentMethodNotSupported = new("PaymentMethodNotSupported")
  SellerDoesntShipToCountry = new("SellerDoesntShipToCountry")
  SellerRanOutOfStock = new("SellerRanOutOfStock")
  ShipCountryNotSupported = new("ShipCountryNotSupported")
  ShippingAddressNotConfirmed = new("ShippingAddressNotConfirmed")
  UPIAssistance = new("UPIAssistance")
  UPIAssistanceDisabled = new("UPIAssistanceDisabled")
  UnableToResolveTerms = new("UnableToResolveTerms")
  Unspecified = new("Unspecified")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeFilterTypeCodeType
class DisputeFilterTypeCodeType < ::String
  AllInvolvedClosedDisputes = new("AllInvolvedClosedDisputes")
  AllInvolvedDisputes = new("AllInvolvedDisputes")
  CustomCode = new("CustomCode")
  DisputesAwaitingMyResponse = new("DisputesAwaitingMyResponse")
  DisputesAwaitingOtherPartyResponse = new("DisputesAwaitingOtherPartyResponse")
  EligibleForCredit = new("EligibleForCredit")
  ItemNotReceivedDisputes = new("ItemNotReceivedDisputes")
  UnpaidItemDisputes = new("UnpaidItemDisputes")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeMessageSourceCodeType
class DisputeMessageSourceCodeType < ::String
  Buyer = new("Buyer")
  CustomCode = new("CustomCode")
  EBay = new("eBay")
  Seller = new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeReasonCodeType
class DisputeReasonCodeType < ::String
  BuyerHasNotPaid = new("BuyerHasNotPaid")
  CustomCode = new("CustomCode")
  ItemNotReceived = new("ItemNotReceived")
  NoRefund = new("NoRefund")
  ReturnPolicyUnpaidItem = new("ReturnPolicyUnpaidItem")
  SignificantlyNotAsDescribed = new("SignificantlyNotAsDescribed")
  TransactionMutuallyCanceled = new("TransactionMutuallyCanceled")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeRecordTypeCodeType
class DisputeRecordTypeCodeType < ::String
  CustomCode = new("CustomCode")
  HalfDispute = new("HalfDispute")
  ItemNotReceived = new("ItemNotReceived")
  UnpaidItem = new("UnpaidItem")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionReasonCodeType
class DisputeResolutionReasonCodeType < ::String
  BuyerPaidAuctionFees = new("BuyerPaidAuctionFees")
  CameToAgreement = new("CameToAgreement")
  ClaimPaid = new("ClaimPaid")
  ComputerTechnicalProblem = new("ComputerTechnicalProblem")
  CustomCode = new("CustomCode")
  FamilyEmergency = new("FamilyEmergency")
  FirstInfraction = new("FirstInfraction")
  ItemReturned = new("ItemReturned")
  NoContact = new("NoContact")
  OtherResolution = new("OtherResolution")
  ProofGivenInFeedback = new("ProofGivenInFeedback")
  ProofOfPayment = new("ProofOfPayment")
  SellerReceivedPayment = new("SellerReceivedPayment")
  Unresolved = new("Unresolved")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeResolutionRecordTypeCodeType
class DisputeResolutionRecordTypeCodeType < ::String
  AppealBuyerStrike = new("AppealBuyerStrike")
  CustomCode = new("CustomCode")
  FVFCredit = new("FVFCredit")
  FVFCreditNotGranted = new("FVFCreditNotGranted")
  FVFOnShippingCredit = new("FVFOnShippingCredit")
  FVFOnShippingCreditNotGranted = new("FVFOnShippingCreditNotGranted")
  FeatureFeeCredit = new("FeatureFeeCredit")
  FeatureFeeNotCredit = new("FeatureFeeNotCredit")
  GenerateCSTicketForSuspend = new("GenerateCSTicketForSuspend")
  InsertionFeeCredit = new("InsertionFeeCredit")
  ItemNotReceivedClaimFiled = new("ItemNotReceivedClaimFiled")
  RestrictBuyer = new("RestrictBuyer")
  ReverseFVFCredit = new("ReverseFVFCredit")
  ReverseFVFOnShippingCredit = new("ReverseFVFOnShippingCredit")
  ReverseFeatureFeeCredit = new("ReverseFeatureFeeCredit")
  ReverseInsertionFeeCredit = new("ReverseInsertionFeeCredit")
  StrikeBuyer = new("StrikeBuyer")
  SuspendBuyer = new("SuspendBuyer")
  UnpaidItemRelisted = new("UnpaidItemRelisted")
  UnpaidItemRevised = new("UnpaidItemRevised")
  UnrestrictBuyer = new("UnrestrictBuyer")
  UnsuspendBuyer = new("UnsuspendBuyer")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeSortTypeCodeType
class DisputeSortTypeCodeType < ::String
  CustomCode = new("CustomCode")
  DisputeCreatedTimeAscending = new("DisputeCreatedTimeAscending")
  DisputeCreatedTimeDescending = new("DisputeCreatedTimeDescending")
  DisputeCreditEligibilityAscending = new("DisputeCreditEligibilityAscending")
  DisputeCreditEligibilityDescending = new("DisputeCreditEligibilityDescending")
  DisputeStatusAscending = new("DisputeStatusAscending")
  DisputeStatusDescending = new("DisputeStatusDescending")
  None = new("None")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeStateCodeType
class DisputeStateCodeType < ::String
  BuyerFirstResponseNoPayOption = new("BuyerFirstResponseNoPayOption")
  BuyerFirstResponseNoPayOptionLateResponse = new("BuyerFirstResponseNoPayOptionLateResponse")
  BuyerFirstResponsePayOption = new("BuyerFirstResponsePayOption")
  BuyerFirstResponsePayOptionLateResponse = new("BuyerFirstResponsePayOptionLateResponse")
  ClaimClosed = new("ClaimClosed")
  ClaimDenied = new("ClaimDenied")
  ClaimOpened = new("ClaimOpened")
  ClaimPaid = new("ClaimPaid")
  ClaimPaymentPending = new("ClaimPaymentPending")
  ClaimPending = new("ClaimPending")
  ClaimResolved = new("ClaimResolved")
  ClaimSubmitted = new("ClaimSubmitted")
  Closed = new("Closed")
  CustomCode = new("CustomCode")
  Locked = new("Locked")
  MutualAgreementOrBuyerReturningItem = new("MutualAgreementOrBuyerReturningItem")
  MutualCommunicationNoPayOption = new("MutualCommunicationNoPayOption")
  MutualCommunicationPayOption = new("MutualCommunicationPayOption")
  MutualWithdrawalAgreement = new("MutualWithdrawalAgreement")
  MutualWithdrawalAgreementLate = new("MutualWithdrawalAgreementLate")
  NoDocumentation = new("NoDocumentation")
  NotAsDescribedMutualCommunication = new("NotAsDescribedMutualCommunication")
  NotAsDescribedNoSellerResponse = new("NotAsDescribedNoSellerResponse")
  NotReceivedMutualCommunication = new("NotReceivedMutualCommunication")
  NotReceivedNoSellerResponse = new("NotReceivedNoSellerResponse")
  PendingResolve = new("PendingResolve")
  UPIAssistanceDisabledBySeller = new("UPIAssistanceDisabledBySeller")
  UPIAssistanceDisabledByeBay = new("UPIAssistanceDisabledByeBay")
  UnpaidItemOpen = new("UnpaidItemOpen")
end

# {urn:ebay:apis:eBLBaseComponents}DisputeStatusCodeType
class DisputeStatusCodeType < ::String
  ClaimApproved = new("ClaimApproved")
  ClaimClosed = new("ClaimClosed")
  ClaimDenied = new("ClaimDenied")
  ClaimInProcess = new("ClaimInProcess")
  ClaimOpened = new("ClaimOpened")
  ClaimPaid = new("ClaimPaid")
  ClaimResolved = new("ClaimResolved")
  ClaimSubmitted = new("ClaimSubmitted")
  Closed = new("Closed")
  ClosedFVFCreditNoStrike = new("ClosedFVFCreditNoStrike")
  ClosedFVFCreditStrike = new("ClosedFVFCreditStrike")
  ClosedNoFVFCreditNoStrike = new("ClosedNoFVFCreditNoStrike")
  ClosedNoFVFCreditStrike = new("ClosedNoFVFCreditStrike")
  CustomCode = new("CustomCode")
  FVFCreditReversedAfterClosing = new("FVFCreditReversedAfterClosing")
  NoDocumentation = new("NoDocumentation")
  StrikeAppealedAfterClosing = new("StrikeAppealedAfterClosing")
  StrikeAppealedAndFVFCreditReversed = new("StrikeAppealedAndFVFCreditReversed")
  UnpaidItemOpened = new("UnpaidItemOpened")
  WaitingForBuyerResponse = new("WaitingForBuyerResponse")
  WaitingForSellerResponse = new("WaitingForSellerResponse")
end

# {urn:ebay:apis:eBLBaseComponents}ErrorClassificationCodeType
class ErrorClassificationCodeType < ::String
  CustomCode = new("CustomCode")
  RequestError = new("RequestError")
  SystemError = new("SystemError")
end

# {urn:ebay:apis:eBLBaseComponents}ErrorHandlingCodeType
class ErrorHandlingCodeType < ::String
  AllOrNothing = new("AllOrNothing")
  BestEffort = new("BestEffort")
  FailOnError = new("FailOnError")
  Legacy = new("Legacy")
end

# {urn:ebay:apis:eBLBaseComponents}InvocationStatusType
class InvocationStatusType < ::String
  CustomCode = new("CustomCode")
  Failure = new("Failure")
  InProgress = new("InProgress")
  Success = new("Success")
end

# {urn:ebay:apis:eBLBaseComponents}MeasurementSystemCodeType
class MeasurementSystemCodeType < ::String
  English = new("English")
  Metric = new("Metric")
end

# {urn:ebay:apis:eBLBaseComponents}SeverityCodeType
class SeverityCodeType < ::String
  CustomCode = new("CustomCode")
  Error = new("Error")
  Warning = new("Warning")
end

# {urn:ebay:apis:eBLBaseComponents}WarningLevelCodeType
class WarningLevelCodeType < ::String
  High = new("High")
  Low = new("Low")
end

# {urn:ebay:apis:eBLBaseComponents}AccessRuleCurrentStatusCodeType
class AccessRuleCurrentStatusCodeType < ::String
  CustomCode = new("CustomCode")
  DailyLimitExceeded = new("DailyLimitExceeded")
  DailySoftLimitExceeded = new("DailySoftLimitExceeded")
  HourlyLimitExceeded = new("HourlyLimitExceeded")
  HourlySoftLimitExceeded = new("HourlySoftLimitExceeded")
  NotSet = new("NotSet")
  PeriodicLimitExceeded = new("PeriodicLimitExceeded")
  PeriodicSoftLimitExceeded = new("PeriodicSoftLimitExceeded")
end

# {urn:ebay:apis:eBLBaseComponents}AccessRuleStatusCodeType
class AccessRuleStatusCodeType < ::String
  ApplicationBlocked = new("ApplicationBlocked")
  CustomCode = new("CustomCode")
  RuleOff = new("RuleOff")
  RuleOn = new("RuleOn")
end

# {urn:ebay:apis:eBLBaseComponents}AccountDetailEntryCodeType
class AccountDetailEntryCodeType < ::String
  AWCredit = new("AWCredit")
  AWDebit = new("AWDebit")
  AWMemo = new("AWMemo")
  AccountStateSwitch = new("AccountStateSwitch")
  AllFeesCredit = new("AllFeesCredit")
  AutoPmntReqExempt = new("AutoPmntReqExempt")
  AutoPmntReqRein = new("AutoPmntReqRein")
  AutoTraderOff = new("AutoTraderOff")
  AutoTraderOn = new("AutoTraderOn")
  BBAdminCredit = new("BBAdminCredit")
  BBAdminDebit = new("BBAdminDebit")
  BasicBundleFee = new("BasicBundleFee")
  BasicBundleFeeCredit = new("BasicBundleFeeCredit")
  BasicUpgradePackBundleFee = new("BasicUpgradePackBundleFee")
  BasicUpgradePackBundleFeeCredit = new("BasicUpgradePackBundleFeeCredit")
  BonusPointsAddition = new("BonusPointsAddition")
  BonusPointsCashPayout = new("BonusPointsCashPayout")
  BonusPointsPaymentAutomatic = new("BonusPointsPaymentAutomatic")
  BonusPointsPaymentManual = new("BonusPointsPaymentManual")
  BonusPointsPaymentReversal = new("BonusPointsPaymentReversal")
  BonusPointsReduction = new("BonusPointsReduction")
  BorderFee = new("BorderFee")
  BorderFeeCredit = new("BorderFeeCredit")
  BulkUserSuspension = new("BulkUserSuspension")
  BuyItNowCredit = new("BuyItNowCredit")
  BuyItNowFee = new("BuyItNowFee")
  CCNotOnFilePerCustReq = new("CCNotOnFilePerCustReq")
  CCPaymentRejected = new("CCPaymentRejected")
  ChargeBack = new("ChargeBack")
  ChargeBackReversal = new("ChargeBackReversal")
  Chargeoff = new("Chargeoff")
  ChargeoffBankruptcy = new("ChargeoffBankruptcy")
  ChargeoffDeceased = new("ChargeoffDeceased")
  ChargeoffOther = new("ChargeoffOther")
  ChargeoffRecovery = new("ChargeoffRecovery")
  ChargeoffSuspended = new("ChargeoffSuspended")
  ChargeoffWacko = new("ChargeoffWacko")
  CreditAABasic = new("CreditAABasic")
  CreditAAPro = new("CreditAAPro")
  CreditAPACFedExShippingLabel = new("CreditAPACFedExShippingLabel")
  CreditAPACTNTShippingLabel = new("CreditAPACTNTShippingLabel")
  CreditAUPostShippingLabel = new("CreditAUPostShippingLabel")
  CreditAd = new("CreditAd")
  CreditAuctionEndEarly = new("CreditAuctionEndEarly")
  CreditBold = new("CreditBold")
  CreditCardNotOnFile = new("CreditCardNotOnFile")
  CreditCardOnFile = new("CreditCardOnFile")
  CreditCategoryFeatured = new("CreditCategoryFeatured")
  CreditCourtesy = new("CreditCourtesy")
  CreditDuplicateListing = new("CreditDuplicateListing")
  CreditEBPReimbursement = new("CreditEBPReimbursement")
  CreditEquifaxRealtimeFee = new("CreditEquifaxRealtimeFee")
  CreditFeatured = new("CreditFeatured")
  CreditFeaturedGallery = new("CreditFeaturedGallery")
  CreditFedExShippingLabel = new("CreditFedExShippingLabel")
  CreditFinalValue = new("CreditFinalValue")
  CreditFinalValueFixedPrice = new("CreditFinalValueFixedPrice")
  CreditFinalValueShipping = new("CreditFinalValueShipping")
  CreditGallery = new("CreditGallery")
  CreditGalleryPlus = new("CreditGalleryPlus")
  CreditGiftIcon = new("CreditGiftIcon")
  CreditGlobalShippingProgram = new("CreditGlobalShippingProgram")
  CreditHighlight = new("CreditHighlight")
  CreditIPIXPhoto = new("CreditIPIXPhoto")
  CreditIPIXSlideShow = new("CreditIPIXSlideShow")
  CreditImmoProFeatureFee = new("CreditImmoProFeatureFee")
  CreditImmoProFee = new("CreditImmoProFee")
  CreditInsertion = new("CreditInsertion")
  CreditInsertionFee = new("CreditInsertionFee")
  CreditInsertionFixedPrice = new("CreditInsertionFixedPrice")
  CreditLargePicture = new("CreditLargePicture")
  CreditNoSale = new("CreditNoSale")
  CreditPCGS = new("CreditPCGS")
  CreditPSA = new("CreditPSA")
  CreditPartialSale = new("CreditPartialSale")
  CreditPicturePackFull = new("CreditPicturePackFull")
  CreditPicturePackPartial = new("CreditPicturePackPartial")
  CreditPictureShow = new("CreditPictureShow")
  CreditPrivateListing = new("CreditPrivateListing")
  CreditPromotedListingFeature = new("CreditPromotedListingFeature")
  CreditRealEstate30DaysListing = new("CreditRealEstate30DaysListing")
  CreditRealEstateProFeatureFee = new("CreditRealEstateProFeatureFee")
  CreditRealEstateProFee = new("CreditRealEstateProFee")
  CreditReserve = new("CreditReserve")
  CreditReturnRefund = new("CreditReturnRefund")
  CreditReturnShipping = new("CreditReturnShipping")
  CreditSMBasic = new("CreditSMBasic")
  CreditSMBasicPro = new("CreditSMBasicPro")
  CreditSchedule = new("CreditSchedule")
  CreditSearchableMobileDE = new("CreditSearchableMobileDE")
  CreditSoftOutage = new("CreditSoftOutage")
  CreditStoresSubscriptionEarlyTermination = new("CreditStoresSubscriptionEarlyTermination")
  CreditTenDayAuction = new("CreditTenDayAuction")
  CreditTransferFrom = new("CreditTransferFrom")
  CreditVehicleSubscription = new("CreditVehicleSubscription")
  CreditVehicleSubscriptionEarlyTermination = new("CreditVehicleSubscriptionEarlyTermination")
  CrediteBayMotorsProFeatureFee = new("CrediteBayMotorsProFeatureFee")
  CrediteBayMotorsProFee = new("CrediteBayMotorsProFee")
  CrediteBayStores = new("CrediteBayStores")
  CustomCode = new("CustomCode")
  DebitTransferTo = new("DebitTransferTo")
  DirectDebitNotOnFile = new("DirectDebitNotOnFile")
  DirectDebitOnFile = new("DirectDebitOnFile")
  DirectDebitReturnedItem = new("DirectDebitReturnedItem")
  DirectDebitReversal = new("DirectDebitReversal")
  Discount = new("Discount")
  EBayCredit = new("eBayCredit")
  EBayDebit = new("eBayDebit")
  EBayMotorsProFeatureFee = new("eBayMotorsProFeatureFee")
  EBayMotorsProFee = new("eBayMotorsProFee")
  EBayStoreInventorySubscriptionCredit = new("eBayStoreInventorySubscriptionCredit")
  EBayVISACredit = new("eBayVISACredit")
  EOMRestriction = new("EOMRestriction")
  ElectronicInvoiceOff = new("ElectronicInvoiceOff")
  ElectronicInvoiceOn = new("ElectronicInvoiceOn")
  EmailMarketingCredit = new("EmailMarketingCredit")
  EmailMarketingFee = new("EmailMarketingFee")
  EquifaxRealtimeFee = new("EquifaxRealtimeFee")
  ExtendedAcutionCredit = new("ExtendedAcutionCredit")
  ExtendedAuctionFee = new("ExtendedAuctionFee")
  ExtendedDurationFee = new("ExtendedDurationFee")
  ExtendedDurationFeeCredit = new("ExtendedDurationFeeCredit")
  FVFCreditReversal = new("FVFCreditReversal")
  FVFCreditReversalAutomatic = new("FVFCreditReversalAutomatic")
  FeeAPACFedExShippingLabel = new("FeeAPACFedExShippingLabel")
  FeeAPACTNTShippingLabel = new("FeeAPACTNTShippingLabel")
  FeeAUPostShippingLabel = new("FeeAUPostShippingLabel")
  FeeAd = new("FeeAd")
  FeeAuctionEndEarly = new("FeeAuctionEndEarly")
  FeeBold = new("FeeBold")
  FeeCategoryFeatured = new("FeeCategoryFeatured")
  FeeEBPReimbursement = new("FeeEBPReimbursement")
  FeeFeatured = new("FeeFeatured")
  FeeFeaturedGallery = new("FeeFeaturedGallery")
  FeeFedExShippingLabel = new("FeeFedExShippingLabel")
  FeeFinalValue = new("FeeFinalValue")
  FeeFinalValueFixedPrice = new("FeeFinalValueFixedPrice")
  FeeFinalValueShipping = new("FeeFinalValueShipping")
  FeeGallery = new("FeeGallery")
  FeeGalleryPlus = new("FeeGalleryPlus")
  FeeGiftIcon = new("FeeGiftIcon")
  FeeGlobalShippingProgram = new("FeeGlobalShippingProgram")
  FeeHighlight = new("FeeHighlight")
  FeeIPIXPhoto = new("FeeIPIXPhoto")
  FeeIPIXSlideShow = new("FeeIPIXSlideShow")
  FeeInsertion = new("FeeInsertion")
  FeeInsertionFixedPrice = new("FeeInsertionFixedPrice")
  FeeLargePicture = new("FeeLargePicture")
  FeeNSFCheck = new("FeeNSFCheck")
  FeePartialSale = new("FeePartialSale")
  FeePicturePack = new("FeePicturePack")
  FeePictureShow = new("FeePictureShow")
  FeePromotedListingFeature = new("FeePromotedListingFeature")
  FeeRealEstate30DaysListing = new("FeeRealEstate30DaysListing")
  FeeRedepositCheck = new("FeeRedepositCheck")
  FeeReserve = new("FeeReserve")
  FeeReturnCheckClose = new("FeeReturnCheckClose")
  FeeReturnRefund = new("FeeReturnRefund")
  FeeReturnShipping = new("FeeReturnShipping")
  FeeReturnedCheck = new("FeeReturnedCheck")
  FeeSchedule = new("FeeSchedule")
  FeeSearchableMobileDE = new("FeeSearchableMobileDE")
  FeeStoresSubscriptionEarlyTermination = new("FeeStoresSubscriptionEarlyTermination")
  FeeTenDayAuction = new("FeeTenDayAuction")
  FeeVehicleSubscription = new("FeeVehicleSubscription")
  FeeVehicleSubscriptionEarlyTermination = new("FeeVehicleSubscriptionEarlyTermination")
  FinalEntry = new("FinalEntry")
  FinanceCharge = new("FinanceCharge")
  FinanceChargeReversal = new("FinanceChargeReversal")
  FixedPriceDurationCredit = new("FixedPriceDurationCredit")
  FixedPriceDurationFee = new("FixedPriceDurationFee")
  FlagDDDDPending = new("FlagDDDDPending")
  FlagDDPaymentConfirmed = new("FlagDDPaymentConfirmed")
  ForeignFundsCheckReversal = new("ForeignFundsCheckReversal")
  ForeignFundsConvert = new("ForeignFundsConvert")
  ImmoProFeatureFee = new("ImmoProFeatureFee")
  ImmoProFee = new("ImmoProFee")
  InternationalListingCredit = new("InternationalListingCredit")
  InternationalListingFee = new("InternationalListingFee")
  InvoiceCreditBalance = new("InvoiceCreditBalance")
  Invoiced = new("Invoiced")
  InvoicedCreditCard = new("InvoicedCreditCard")
  ItemMoveFee = new("ItemMoveFee")
  LAAudioVideoFee = new("LAAudioVideoFee")
  LAAudioVideoFeeRefund = new("LAAudioVideoFeeRefund")
  LABuyerPremiumPercentageFee = new("LABuyerPremiumPercentageFee")
  LABuyerPremiumPercentageFeeRefund = new("LABuyerPremiumPercentageFeeRefund")
  LACatalogFee = new("LACatalogFee")
  LACatalogInsertionRefund = new("LACatalogInsertionRefund")
  LACatalogItemFeeRefund = new("LACatalogItemFeeRefund")
  LAExtraItem = new("LAExtraItem")
  LAFinalValueFee = new("LAFinalValueFee")
  LAFinalValueFeeRefund = new("LAFinalValueFeeRefund")
  ListingDesignerCredit = new("ListingDesignerCredit")
  ListingDesignerFee = new("ListingDesignerFee")
  MarketplaceResearchBasicSubscriptionFee = new("MarketplaceResearchBasicSubscriptionFee")
  MarketplaceResearchBasicSubscriptionFeeCredit = new("MarketplaceResearchBasicSubscriptionFeeCredit")
  MarketplaceResearchExpiredSubscriptionFee = new("MarketplaceResearchExpiredSubscriptionFee")
  MarketplaceResearchExpiredSubscriptionFeeCredit = new("MarketplaceResearchExpiredSubscriptionFeeCredit")
  MarketplaceResearchProSubscriptionFee = new("MarketplaceResearchProSubscriptionFee")
  MarketplaceResearchProSubscriptionFeeCredit = new("MarketplaceResearchProSubscriptionFeeCredit")
  Memo = new("Memo")
  Merged = new("Merged")
  OutageCredit = new("OutageCredit")
  PaperInvoiceOff = new("PaperInvoiceOff")
  PaperInvoiceOn = new("PaperInvoiceOn")
  PayPalChargeBack = new("PayPalChargeBack")
  PayPalFailed = new("PayPalFailed")
  PayPalOTPPend = new("PayPalOTPPend")
  PayPalOTPSucc = new("PayPalOTPSucc")
  PayPalRefund = new("PayPalRefund")
  PaymentAdjustmentCredit = new("PaymentAdjustmentCredit")
  PaymentAdjustmentDebit = new("PaymentAdjustmentDebit")
  PaymentCC = new("PaymentCC")
  PaymentCCOnce = new("PaymentCCOnce")
  PaymentCash = new("PaymentCash")
  PaymentCheck = new("PaymentCheck")
  PaymentDirectDebit = new("PaymentDirectDebit")
  PaymentElectronicTransfer = new("PaymentElectronicTransfer")
  PaymentElectronicTransferReversal = new("PaymentElectronicTransferReversal")
  PaymentEquifaxCredit = new("PaymentEquifaxCredit")
  PaymentEquifaxDebit = new("PaymentEquifaxDebit")
  PaymentGiftCertificate = new("PaymentGiftCertificate")
  PaymentHomeBanking = new("PaymentHomeBanking")
  PaymentMoneyOrder = new("PaymentMoneyOrder")
  PaymentWireTransfer = new("PaymentWireTransfer")
  PaypalOffFile = new("PaypalOffFile")
  PaypalOnFile = new("PaypalOnFile")
  PaypalOnFileByCSR = new("PaypalOnFileByCSR")
  PictureManagerSubscriptionFee = new("PictureManagerSubscriptionFee")
  PictureManagerSubscriptionFeeCredit = new("PictureManagerSubscriptionFeeCredit")
  PrivateListing = new("PrivateListing")
  ProPackBundleFee = new("ProPackBundleFee")
  ProPackBundleFeeCredit = new("ProPackBundleFeeCredit")
  ProPackPlusBundleFee = new("ProPackPlusBundleFee")
  ProPackPlusBundleFeeCredit = new("ProPackPlusBundleFeeCredit")
  PromotionalCredit = new("PromotionalCredit")
  RealEstateProFeatureFee = new("RealEstateProFeatureFee")
  RealEstateProFee = new("RealEstateProFee")
  ReferrerCredit = new("ReferrerCredit")
  ReferrerDebit = new("ReferrerDebit")
  RefundCC = new("RefundCC")
  RefundCheck = new("RefundCheck")
  RevertUserState = new("RevertUserState")
  SMProListingDesignerCredit = new("SMProListingDesignerCredit")
  SMProListingDesignerFee = new("SMProListingDesignerFee")
  SalesReportsPlusCredit = new("SalesReportsPlusCredit")
  SalesReportsPlusFee = new("SalesReportsPlusFee")
  SellerReportsBasicCredit = new("SellerReportsBasicCredit")
  SellerReportsBasicFee = new("SellerReportsBasicFee")
  SellerReportsPlusCredit = new("SellerReportsPlusCredit")
  SellerReportsPlusFee = new("SellerReportsPlusFee")
  SetOnHold = new("SetOnHold")
  StoresGTCCredit = new("StoresGTCCredit")
  StoresGTCFee = new("StoresGTCFee")
  StoresReferralCredit = new("StoresReferralCredit")
  StoresReferralFee = new("StoresReferralFee")
  StoresSuccessfulListingFee = new("StoresSuccessfulListingFee")
  StoresSuccessfulListingFeeCredit = new("StoresSuccessfulListingFeeCredit")
  SubscriptionAABasic = new("SubscriptionAABasic")
  SubscriptionAAPro = new("SubscriptionAAPro")
  SubscriptionSMBasic = new("SubscriptionSMBasic")
  SubscriptionSMBasicPro = new("SubscriptionSMBasicPro")
  SubscriptioneBayStores = new("SubscriptioneBayStores")
  SubtitleFee = new("SubtitleFee")
  SubtitleFeeCredit = new("SubtitleFeeCredit")
  SwitchCurrency = new("SwitchCurrency")
  TemporaryCredit = new("TemporaryCredit")
  TemporaryCreditReversal = new("TemporaryCreditReversal")
  TradingLimitOverrideOff = new("TradingLimitOverrideOff")
  TradingLimitOverrideOn = new("TradingLimitOverrideOn")
  Unknown = new("Unknown")
  VATCredit = new("VATCredit")
  VATDebit = new("VATDebit")
  VATStatusChangeApproved = new("VATStatusChangeApproved")
  VATStatusChangePending = new("VATStatusChangePending")
  VATStatusChange_Denied = new("VATStatusChange_Denied")
  VATStatusDeletedByCSR = new("VATStatusDeletedByCSR")
  VATStatusDeletedByUser = new("VATStatusDeletedByUser")
  ValuePackBundleFee = new("ValuePackBundleFee")
  ValuePackBundleFeeCredit = new("ValuePackBundleFeeCredit")
  VehicleLocalFinalValueFee = new("VehicleLocalFinalValueFee")
  VehicleLocalFinalValueFeeCredit = new("VehicleLocalFinalValueFeeCredit")
  VehicleLocalGTCFee = new("VehicleLocalGTCFee")
  VehicleLocalGTCFeeCredit = new("VehicleLocalGTCFeeCredit")
  VehicleLocalInsertionFee = new("VehicleLocalInsertionFee")
  VehicleLocalInsertionFeeCredit = new("VehicleLocalInsertionFeeCredit")
  VehicleLocalSubscriptionFee = new("VehicleLocalSubscriptionFee")
  VehicleLocalSubscriptionFeeCredit = new("VehicleLocalSubscriptionFeeCredit")
end

# {urn:ebay:apis:eBLBaseComponents}AccountEntrySortTypeCodeType
class AccountEntrySortTypeCodeType < ::String
  AccountEntryCreatedTimeAscending = new("AccountEntryCreatedTimeAscending")
  AccountEntryCreatedTimeDescending = new("AccountEntryCreatedTimeDescending")
  AccountEntryFeeTypeAscending = new("AccountEntryFeeTypeAscending")
  AccountEntryFeeTypeDescending = new("AccountEntryFeeTypeDescending")
  AccountEntryItemNumberAscending = new("AccountEntryItemNumberAscending")
  AccountEntryItemNumberDescending = new("AccountEntryItemNumberDescending")
  CustomCode = new("CustomCode")
  None = new("None")
end

# {urn:ebay:apis:eBLBaseComponents}AccountHistorySelectionCodeType
class AccountHistorySelectionCodeType < ::String
  BetweenSpecifiedDates = new("BetweenSpecifiedDates")
  CustomCode = new("CustomCode")
  LastInvoice = new("LastInvoice")
  SpecifiedInvoice = new("SpecifiedInvoice")
end

# {urn:ebay:apis:eBLBaseComponents}AccountStateCodeType
class AccountStateCodeType < ::String
  Active = new("Active")
  CustomCode = new("CustomCode")
  Inactive = new("Inactive")
  Pending = new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatEnabledCodeType
class AdFormatEnabledCodeType < ::String
  ClassifiedAdEnabled = new("ClassifiedAdEnabled")
  ClassifiedAdOnly = new("ClassifiedAdOnly")
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
  LocalMarketBestOfferOnly = new("LocalMarketBestOfferOnly")
  Only = new("Only")
end

# {urn:ebay:apis:eBLBaseComponents}AdFormatLeadStatusCodeType
class AdFormatLeadStatusCodeType < ::String
  CustomCode = new("CustomCode")
  New = new("New")
  Responded = new("Responded")
end

# {urn:ebay:apis:eBLBaseComponents}AddressAttributeCodeType
class AddressAttributeCodeType < ::String
  CustomCode = new("CustomCode")
  ReferenceNumber = new("ReferenceNumber")
end

# {urn:ebay:apis:eBLBaseComponents}AddressOwnerCodeType
class AddressOwnerCodeType < ::String
  CustomCode = new("CustomCode")
  EBay = new("eBay")
  PayPal = new("PayPal")
end

# {urn:ebay:apis:eBLBaseComponents}AddressRecordTypeCodeType
class AddressRecordTypeCodeType < ::String
  Business = new("Business")
  CustomCode = new("CustomCode")
  Residential = new("Residential")
end

# {urn:ebay:apis:eBLBaseComponents}AddressStatusCodeType
class AddressStatusCodeType < ::String
  Confirmed = new("Confirmed")
  CustomCode = new("CustomCode")
  None = new("None")
  Unconfirmed = new("Unconfirmed")
end

# {urn:ebay:apis:eBLBaseComponents}AddressUsageCodeType
class AddressUsageCodeType < ::String
  CustomCode = new("CustomCode")
  DefaultShipping = new("DefaultShipping")
  Invalid = new("Invalid")
  Shipping = new("Shipping")
end

# {urn:ebay:apis:eBLBaseComponents}AnnouncementMessageCodeType
class AnnouncementMessageCodeType < ::String
  CustomCode = new("CustomCode")
  Deprecation = new("Deprecation")
  DeprecationAndMapping = new("DeprecationAndMapping")
  Mapping = new("Mapping")
  None = new("None")
end

# {urn:ebay:apis:eBLBaseComponents}ApplicationDeviceTypeCodeType
class ApplicationDeviceTypeCodeType < ::String
  Browser = new("Browser")
  CustomCode = new("CustomCode")
  Desktop = new("Desktop")
  SetTopTVBox = new("SetTopTVBox")
  Wireless = new("Wireless")
end

# {urn:ebay:apis:eBLBaseComponents}AttributeConversionEnabledCodeType
class AttributeConversionEnabledCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
  NotApplicable = new("NotApplicable")
end

# {urn:ebay:apis:eBLBaseComponents}AuthTokenTypeCodeType
class AuthTokenTypeCodeType < ::String
  ClientAlertsToken = new("ClientAlertsToken")
  CustomCode = new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}AutomatedLeaveFeedbackEventCodeType
class AutomatedLeaveFeedbackEventCodeType < ::String
  CustomCode = new("CustomCode")
  None = new("None")
  PaymentReceived = new("PaymentReceived")
  PositiveFeedbackReceived = new("PositiveFeedbackReceived")
end

# {urn:ebay:apis:eBLBaseComponents}BalanceCodeType
class BalanceCodeType < ::String
  CustomCode = new("CustomCode")
  Other = new("Other")
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferActionCodeType
class BestOfferActionCodeType < ::String
  Accept = new("Accept")
  Counter = new("Counter")
  CustomCode = new("CustomCode")
  Decline = new("Decline")
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferStatusCodeType
class BestOfferStatusCodeType < ::String
  Accepted = new("Accepted")
  Active = new("Active")
  AdminEnded = new("AdminEnded")
  All = new("All")
  Countered = new("Countered")
  CustomCode = new("CustomCode")
  Declined = new("Declined")
  Expired = new("Expired")
  Pending = new("Pending")
  PendingBuyerConfirmation = new("PendingBuyerConfirmation")
  PendingBuyerPayment = new("PendingBuyerPayment")
  Retracted = new("Retracted")
end

# {urn:ebay:apis:eBLBaseComponents}BestOfferTypeCodeType
class BestOfferTypeCodeType < ::String
  BuyerBestOffer = new("BuyerBestOffer")
  BuyerCounterOffer = new("BuyerCounterOffer")
  CustomCode = new("CustomCode")
  SellerCounterOffer = new("SellerCounterOffer")
end

# {urn:ebay:apis:eBLBaseComponents}BidActionCodeType
class BidActionCodeType < ::String
  Absentee = new("Absentee")
  Accept = new("Accept")
  AutoCancel = new("AutoCancel")
  AutoRetraction = new("AutoRetraction")
  Bid = new("Bid")
  BuyItNow = new("BuyItNow")
  Cancelled = new("Cancelled")
  Counter = new("Counter")
  CustomCode = new("CustomCode")
  Decline = new("Decline")
  NotUsed = new("NotUsed")
  Offer = new("Offer")
  Purchase = new("Purchase")
  Retraction = new("Retraction")
  Unknown = new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}BidGroupItemStatusCodeType
class BidGroupItemStatusCodeType < ::String
  Cancelled = new("Cancelled")
  CurrentBid = new("CurrentBid")
  CustomCode = new("CustomCode")
  Ended = new("Ended")
  GroupClosed = new("GroupClosed")
  Pending = new("Pending")
  Skipped = new("Skipped")
  Won = new("Won")
end

# {urn:ebay:apis:eBLBaseComponents}BidGroupStatusCodeType
class BidGroupStatusCodeType < ::String
  Closed = new("Closed")
  CustomCode = new("CustomCode")
  Open = new("Open")
end

# {urn:ebay:apis:eBLBaseComponents}BidderStatusCodeType
class BidderStatusCodeType < ::String
  Approved = new("Approved")
  CustomCode = new("CustomCode")
  Denied = new("Denied")
  Pending = new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}BidderTypeCodeType
class BidderTypeCodeType < ::String
  AllBidder = new("AllBidder")
  CustomCode = new("CustomCode")
  HighBidder = new("HighBidder")
end

# {urn:ebay:apis:eBLBaseComponents}BoldTitleCodeType
class BoldTitleCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
end

# {urn:ebay:apis:eBLBaseComponents}BorderCodeType
class BorderCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
end

# {urn:ebay:apis:eBLBaseComponents}BulkCatalogListerStatusCodeType
class BulkCatalogListerStatusCodeType < ::String
  Active = new("Active")
  CustomCode = new("CustomCode")
  OnHold = new("OnHold")
  OnWatch = new("OnWatch")
  Preapproved = new("Preapproved")
  Suspended = new("Suspended")
  WatchWarn = new("WatchWarn")
end

# {urn:ebay:apis:eBLBaseComponents}BusinessRoleType
class BusinessRoleType < ::String
  FullMarketPlaceParticipant = new("FullMarketPlaceParticipant")
  Shopper = new("Shopper")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerPaymentInstrumentCodeType
class BuyerPaymentInstrumentCodeType < ::String
  BML = new("BML")
  BankDirectDebit = new("BankDirectDebit")
  CreditCard = new("CreditCard")
  CustomCode = new("CustomCode")
  ELV = new("ELV")
  GIROPAY = new("GIROPAY")
  LocalPaymentAMEX = new("LocalPaymentAMEX")
  LocalPaymentCreditCardOther = new("LocalPaymentCreditCardOther")
  LocalPaymentDinersclub = new("LocalPaymentDinersclub")
  LocalPaymentDiscover = new("LocalPaymentDiscover")
  LocalPaymentELV = new("LocalPaymentELV")
  LocalPaymentJCB = new("LocalPaymentJCB")
  LocalPaymentMasterCard = new("LocalPaymentMasterCard")
  LocalPaymentSOLO = new("LocalPaymentSOLO")
  LocalPaymentSWITCH = new("LocalPaymentSWITCH")
  LocalPaymentVISA = new("LocalPaymentVISA")
  None = new("None")
  PayPal = new("PayPal")
  PayUponInvoice = new("PayUponInvoice")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerProtectionCodeType
class BuyerProtectionCodeType < ::String
  CustomCode = new("CustomCode")
  ItemEligible = new("ItemEligible")
  ItemIneligible = new("ItemIneligible")
  ItemMarkedEligible = new("ItemMarkedEligible")
  ItemMarkedIneligible = new("ItemMarkedIneligible")
  NoCoverage = new("NoCoverage")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerProtectionSourceCodeType
class BuyerProtectionSourceCodeType < ::String
  CustomCode = new("CustomCode")
  EBay = new("eBay")
  PayPal = new("PayPal")
end

# {urn:ebay:apis:eBLBaseComponents}BuyerSatisfactionStatusCodeType
class BuyerSatisfactionStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Excellent = new("Excellent")
  Good = new("Good")
  NeedsWork = new("NeedsWork")
  Poor = new("Poor")
  Unacceptable = new("Unacceptable")
  VeryPoor = new("VeryPoor")
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingChargeOptionCodeType
class CalculatedShippingChargeOptionCodeType < ::String
  ChargeEachItem = new("ChargeEachItem")
  ChargeEntireOrder = new("ChargeEntireOrder")
  CustomCode = new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}CalculatedShippingRateOptionCodeType
class CalculatedShippingRateOptionCodeType < ::String
  CombinedItemWeight = new("CombinedItemWeight")
  CustomCode = new("CustomCode")
  IndividualItemWeight = new("IndividualItemWeight")
end

# {urn:ebay:apis:eBLBaseComponents}CancelInitiatorCodeType
class CancelInitiatorCodeType < ::String
  Buyer = new("Buyer")
  CS = new("CS")
  CustomCode = new("CustomCode")
  Seller = new("Seller")
  System = new("System")
  Unknown = new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}CancelReasonCodeType
class CancelReasonCodeType < ::String
  BuyerCancelOrAddressIssue = new("BuyerCancelOrAddressIssue")
  BuyerCancelOrder = new("BuyerCancelOrder")
  BuyerNoShow = new("BuyerNoShow")
  BuyerNotSchedule = new("BuyerNotSchedule")
  BuyerRefused = new("BuyerRefused")
  CustomCode = new("CustomCode")
  FoundCheaperPrice = new("FoundCheaperPrice")
  OrderPlacedByMistake = new("OrderPlacedByMistake")
  OutOfStock = new("OutOfStock")
  OutOfStockOrCannotFulfill = new("OutOfStockOrCannotFulfill")
  PriceTooHigh = new("PriceTooHigh")
  ValetDeliveryIssues = new("ValetDeliveryIssues")
  ValetUnavailable = new("ValetUnavailable")
  WontArriveInTime = new("WontArriveInTime")
end

# {urn:ebay:apis:eBLBaseComponents}CancelStatusCodeType
class CancelStatusCodeType < ::String
  CancelClosedForCommitment = new("CancelClosedForCommitment")
  CancelClosedNoRefund = new("CancelClosedNoRefund")
  CancelClosedUnknownRefund = new("CancelClosedUnknownRefund")
  CancelClosedWithRefund = new("CancelClosedWithRefund")
  CancelComplete = new("CancelComplete")
  CancelFailed = new("CancelFailed")
  CancelPending = new("CancelPending")
  CancelRejected = new("CancelRejected")
  CancelRequested = new("CancelRequested")
  CustomCode = new("CustomCode")
  Invalid = new("Invalid")
  NotApplicable = new("NotApplicable")
end

# {urn:ebay:apis:eBLBaseComponents}CategoryFeatureDetailLevelCodeType
class CategoryFeatureDetailLevelCodeType < ::String
  CustomCode = new("CustomCode")
  ReturnAll = new("ReturnAll")
  ReturnFeatureDefinitions = new("ReturnFeatureDefinitions")
end

# {urn:ebay:apis:eBLBaseComponents}CharacteristicsSearchCodeType
class CharacteristicsSearchCodeType < ::String
  CustomCode = new("CustomCode")
  Multi = new("Multi")
  Single = new("Single")
end

# {urn:ebay:apis:eBLBaseComponents}CharityAffiliationTypeCodeType
class CharityAffiliationTypeCodeType < ::String
  Community = new("Community")
  CustomCode = new("CustomCode")
  Direct = new("Direct")
  Remove = new("Remove")
end

# {urn:ebay:apis:eBLBaseComponents}SocialAddressTypeCodeType
class SocialAddressTypeCodeType < ::String
  CustomCode = new("CustomCode")
  Facebook = new("Facebook")
  GooglePlus = new("GooglePlus")
  Linkedin = new("Linkedin")
  Myspace = new("Myspace")
  Orkut = new("Orkut")
  Twitter = new("Twitter")
end

# {urn:ebay:apis:eBLBaseComponents}CharitySellerStatusCodeType
class CharitySellerStatusCodeType < ::String
  Closed = new("Closed")
  CreditCardAboutToExpire = new("CreditCardAboutToExpire")
  CreditCardExpired = new("CreditCardExpired")
  CustomCode = new("CustomCode")
  DirectDebitRejected = new("DirectDebitRejected")
  NotRegisteredLostDirectSellerStatus = new("NotRegisteredLostDirectSellerStatus")
  Registered = new("Registered")
  RegisteredDirectSeller = new("RegisteredDirectSeller")
  RegisteredNoCreditCard = new("RegisteredNoCreditCard")
  RegisteredNoPaymentMethod = new("RegisteredNoPaymentMethod")
  Suspended = new("Suspended")
  TokenExpired = new("TokenExpired")
end

# {urn:ebay:apis:eBLBaseComponents}CharityStatusCodeType
class CharityStatusCodeType < ::String
  CustomCode = new("CustomCode")
  NoLongerValid = new("NoLongerValid")
  Valid = new("Valid")
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutMethodCodeType
class CheckoutMethodCodeType < ::String
  CustomCode = new("CustomCode")
  Other = new("Other")
  ThirdPartyCheckout = new("ThirdPartyCheckout")
end

# {urn:ebay:apis:eBLBaseComponents}CheckoutStatusCodeType
class CheckoutStatusCodeType < ::String
  BuyerRequestsTotal = new("BuyerRequestsTotal")
  CheckoutComplete = new("CheckoutComplete")
  CheckoutIncomplete = new("CheckoutIncomplete")
  CustomCode = new("CustomCode")
  SellerResponded = new("SellerResponded")
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdBestOfferEnabledCodeType
class ClassifiedAdBestOfferEnabledCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
  Required = new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}ClassifiedAdPaymentMethodEnabledCodeType
class ClassifiedAdPaymentMethodEnabledCodeType < ::String
  CustomCode = new("CustomCode")
  EnabledWithCheckout = new("EnabledWithCheckout")
  EnabledWithoutCheckout = new("EnabledWithoutCheckout")
  NotSupported = new("NotSupported")
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentOptionCodeType
class CombinedPaymentOptionCodeType < ::String
  CustomCode = new("CustomCode")
  DiscountSpecified = new("DiscountSpecified")
  NoCombinedPayment = new("NoCombinedPayment")
  SpecifyDiscountLater = new("SpecifyDiscountLater")
end

# {urn:ebay:apis:eBLBaseComponents}CombinedPaymentPeriodCodeType
class CombinedPaymentPeriodCodeType < ::String
  CustomCode = new("CustomCode")
  Days_14 = new("Days_14")
  Days_3 = new("Days_3")
  Days_30 = new("Days_30")
  Days_5 = new("Days_5")
  Days_7 = new("Days_7")
  Ineligible = new("Ineligible")
end

# {urn:ebay:apis:eBLBaseComponents}CommentTypeCodeType
class CommentTypeCodeType < ::String
  CustomCode = new("CustomCode")
  IndependentlyWithdrawn = new("IndependentlyWithdrawn")
  Negative = new("Negative")
  Neutral = new("Neutral")
  Positive = new("Positive")
  Withdrawn = new("Withdrawn")
end

# {urn:ebay:apis:eBLBaseComponents}CompleteStatusCodeType
class CompleteStatusCodeType < ::String
  Complete = new("Complete")
  CustomCode = new("CustomCode")
  Incomplete = new("Incomplete")
  Pending = new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}ConditionEnabledCodeType
class ConditionEnabledCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
  Required = new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}CostGroupFlatCodeType
class CostGroupFlatCodeType < ::String
  CustomCode = new("CustomCode")
  Group1MaxFlatShippingCost = new("Group1MaxFlatShippingCost")
  Group2MaxFlatShippingCost = new("Group2MaxFlatShippingCost")
  Group3MaxFlatShippingCost = new("Group3MaxFlatShippingCost")
end

# {urn:ebay:apis:eBLBaseComponents}CountryCodeType
class CountryCodeType < ::String
  AA = new("AA")
  AD = new("AD")
  AE = new("AE")
  AF = new("AF")
  AG = new("AG")
  AI = new("AI")
  AL = new("AL")
  AM = new("AM")
  AN = new("AN")
  AO = new("AO")
  AQ = new("AQ")
  AR = new("AR")
  AS = new("AS")
  AT = new("AT")
  AU = new("AU")
  AW = new("AW")
  AZ = new("AZ")
  BA = new("BA")
  BB = new("BB")
  BD = new("BD")
  BE = new("BE")
  BF = new("BF")
  BG = new("BG")
  BH = new("BH")
  BI = new("BI")
  BJ = new("BJ")
  BM = new("BM")
  BN = new("BN")
  BO = new("BO")
  BR = new("BR")
  BS = new("BS")
  BT = new("BT")
  BV = new("BV")
  BW = new("BW")
  BY = new("BY")
  BZ = new("BZ")
  CA = new("CA")
  CC = new("CC")
  CD = new("CD")
  CF = new("CF")
  CG = new("CG")
  CH = new("CH")
  CI = new("CI")
  CK = new("CK")
  CL = new("CL")
  CM = new("CM")
  CN = new("CN")
  CO = new("CO")
  CR = new("CR")
  CU = new("CU")
  CV = new("CV")
  CX = new("CX")
  CY = new("CY")
  CZ = new("CZ")
  C_IO = new("IO")
  CustomCode = new("CustomCode")
  DE = new("DE")
  DJ = new("DJ")
  DK = new("DK")
  DM = new("DM")
  DO = new("DO")
  DZ = new("DZ")
  EC = new("EC")
  EE = new("EE")
  EG = new("EG")
  EH = new("EH")
  ER = new("ER")
  ES = new("ES")
  ET = new("ET")
  FI = new("FI")
  FJ = new("FJ")
  FK = new("FK")
  FM = new("FM")
  FO = new("FO")
  FR = new("FR")
  GA = new("GA")
  GB = new("GB")
  GD = new("GD")
  GE = new("GE")
  GF = new("GF")
  GG = new("GG")
  GH = new("GH")
  GI = new("GI")
  GL = new("GL")
  GM = new("GM")
  GN = new("GN")
  GP = new("GP")
  GQ = new("GQ")
  GR = new("GR")
  GS = new("GS")
  GT = new("GT")
  GU = new("GU")
  GW = new("GW")
  GY = new("GY")
  HK = new("HK")
  HM = new("HM")
  HN = new("HN")
  HR = new("HR")
  HT = new("HT")
  HU = new("HU")
  ID = new("ID")
  IE = new("IE")
  IL = new("IL")
  IN = new("IN")
  IQ = new("IQ")
  IR = new("IR")
  IS = new("IS")
  IT = new("IT")
  JE = new("JE")
  JM = new("JM")
  JO = new("JO")
  JP = new("JP")
  KE = new("KE")
  KG = new("KG")
  KH = new("KH")
  KI = new("KI")
  KM = new("KM")
  KN = new("KN")
  KP = new("KP")
  KR = new("KR")
  KW = new("KW")
  KY = new("KY")
  KZ = new("KZ")
  LA = new("LA")
  LB = new("LB")
  LC = new("LC")
  LI = new("LI")
  LK = new("LK")
  LR = new("LR")
  LS = new("LS")
  LT = new("LT")
  LU = new("LU")
  LV = new("LV")
  LY = new("LY")
  MA = new("MA")
  MC = new("MC")
  MD = new("MD")
  ME = new("ME")
  MG = new("MG")
  MH = new("MH")
  MK = new("MK")
  ML = new("ML")
  MM = new("MM")
  MN = new("MN")
  MO = new("MO")
  MP = new("MP")
  MQ = new("MQ")
  MR = new("MR")
  MS = new("MS")
  MT = new("MT")
  MU = new("MU")
  MV = new("MV")
  MW = new("MW")
  MX = new("MX")
  MY = new("MY")
  MZ = new("MZ")
  NA = new("NA")
  NC = new("NC")
  NE = new("NE")
  NF = new("NF")
  NG = new("NG")
  NI = new("NI")
  NL = new("NL")
  NO = new("NO")
  NP = new("NP")
  NR = new("NR")
  NU = new("NU")
  NZ = new("NZ")
  OM = new("OM")
  PA = new("PA")
  PE = new("PE")
  PF = new("PF")
  PG = new("PG")
  PH = new("PH")
  PK = new("PK")
  PL = new("PL")
  PM = new("PM")
  PN = new("PN")
  PR = new("PR")
  PS = new("PS")
  PT = new("PT")
  PW = new("PW")
  PY = new("PY")
  QA = new("QA")
  QM = new("QM")
  QN = new("QN")
  QO = new("QO")
  QP = new("QP")
  RE = new("RE")
  RO = new("RO")
  RS = new("RS")
  RU = new("RU")
  RW = new("RW")
  SA = new("SA")
  SB = new("SB")
  SC = new("SC")
  SD = new("SD")
  SE = new("SE")
  SG = new("SG")
  SH = new("SH")
  SI = new("SI")
  SJ = new("SJ")
  SK = new("SK")
  SL = new("SL")
  SM = new("SM")
  SN = new("SN")
  SO = new("SO")
  SR = new("SR")
  ST = new("ST")
  SV = new("SV")
  SY = new("SY")
  SZ = new("SZ")
  TC = new("TC")
  TD = new("TD")
  TF = new("TF")
  TG = new("TG")
  TH = new("TH")
  TJ = new("TJ")
  TK = new("TK")
  TM = new("TM")
  TN = new("TN")
  TO = new("TO")
  TP = new("TP")
  TR = new("TR")
  TT = new("TT")
  TV = new("TV")
  TW = new("TW")
  TZ = new("TZ")
  UA = new("UA")
  UG = new("UG")
  UM = new("UM")
  US = new("US")
  UY = new("UY")
  UZ = new("UZ")
  VA = new("VA")
  VC = new("VC")
  VE = new("VE")
  VG = new("VG")
  VI = new("VI")
  VN = new("VN")
  VU = new("VU")
  WF = new("WF")
  WS = new("WS")
  YE = new("YE")
  YT = new("YT")
  YU = new("YU")
  ZA = new("ZA")
  ZM = new("ZM")
  ZW = new("ZW")
  ZZ = new("ZZ")
end

# {urn:ebay:apis:eBLBaseComponents}CurrencyCodeType
class CurrencyCodeType < ::String
  ADP = new("ADP")
  AED = new("AED")
  AFA = new("AFA")
  ALL = new("ALL")
  AMD = new("AMD")
  ANG = new("ANG")
  AOA = new("AOA")
  ARS = new("ARS")
  ATS = new("ATS")
  AUD = new("AUD")
  AWG = new("AWG")
  AZM = new("AZM")
  BAM = new("BAM")
  BBD = new("BBD")
  BDT = new("BDT")
  BGL = new("BGL")
  BGN = new("BGN")
  BHD = new("BHD")
  BIF = new("BIF")
  BMD = new("BMD")
  BND = new("BND")
  BOB = new("BOB")
  BOV = new("BOV")
  BRL = new("BRL")
  BSD = new("BSD")
  BTN = new("BTN")
  BWP = new("BWP")
  BYR = new("BYR")
  BZD = new("BZD")
  CAD = new("CAD")
  CDF = new("CDF")
  CHF = new("CHF")
  CLF = new("CLF")
  CLP = new("CLP")
  CNY = new("CNY")
  COP = new("COP")
  CRC = new("CRC")
  CUP = new("CUP")
  CVE = new("CVE")
  CYP = new("CYP")
  CZK = new("CZK")
  CustomCode = new("CustomCode")
  DJF = new("DJF")
  DKK = new("DKK")
  DOP = new("DOP")
  DZD = new("DZD")
  ECS = new("ECS")
  ECV = new("ECV")
  EEK = new("EEK")
  EGP = new("EGP")
  ERN = new("ERN")
  ETB = new("ETB")
  EUR = new("EUR")
  FJD = new("FJD")
  FKP = new("FKP")
  GBP = new("GBP")
  GEL = new("GEL")
  GHC = new("GHC")
  GIP = new("GIP")
  GMD = new("GMD")
  GNF = new("GNF")
  GTQ = new("GTQ")
  GWP = new("GWP")
  GYD = new("GYD")
  HKD = new("HKD")
  HNL = new("HNL")
  HRK = new("HRK")
  HTG = new("HTG")
  HUF = new("HUF")
  IDR = new("IDR")
  ILS = new("ILS")
  INR = new("INR")
  IQD = new("IQD")
  IRR = new("IRR")
  ISK = new("ISK")
  JMD = new("JMD")
  JOD = new("JOD")
  JPY = new("JPY")
  KES = new("KES")
  KGS = new("KGS")
  KHR = new("KHR")
  KMF = new("KMF")
  KPW = new("KPW")
  KRW = new("KRW")
  KWD = new("KWD")
  KYD = new("KYD")
  KZT = new("KZT")
  LAK = new("LAK")
  LBP = new("LBP")
  LKR = new("LKR")
  LRD = new("LRD")
  LSL = new("LSL")
  LTL = new("LTL")
  LVL = new("LVL")
  LYD = new("LYD")
  MAD = new("MAD")
  MDL = new("MDL")
  MGF = new("MGF")
  MKD = new("MKD")
  MMK = new("MMK")
  MNT = new("MNT")
  MOP = new("MOP")
  MRO = new("MRO")
  MTL = new("MTL")
  MUR = new("MUR")
  MVR = new("MVR")
  MWK = new("MWK")
  MXN = new("MXN")
  MXV = new("MXV")
  MYR = new("MYR")
  MZM = new("MZM")
  NAD = new("NAD")
  NGN = new("NGN")
  NIO = new("NIO")
  NOK = new("NOK")
  NPR = new("NPR")
  NZD = new("NZD")
  OMR = new("OMR")
  PAB = new("PAB")
  PEN = new("PEN")
  PGK = new("PGK")
  PHP = new("PHP")
  PKR = new("PKR")
  PLN = new("PLN")
  PYG = new("PYG")
  QAR = new("QAR")
  ROL = new("ROL")
  RUB = new("RUB")
  RUR = new("RUR")
  RWF = new("RWF")
  SAR = new("SAR")
  SBD = new("SBD")
  SCR = new("SCR")
  SDD = new("SDD")
  SEK = new("SEK")
  SGD = new("SGD")
  SHP = new("SHP")
  SIT = new("SIT")
  SKK = new("SKK")
  SLL = new("SLL")
  SOS = new("SOS")
  SRG = new("SRG")
  STD = new("STD")
  SVC = new("SVC")
  SYP = new("SYP")
  SZL = new("SZL")
  THB = new("THB")
  TJS = new("TJS")
  TMM = new("TMM")
  TND = new("TND")
  TOP = new("TOP")
  TPE = new("TPE")
  TRL = new("TRL")
  TTD = new("TTD")
  TWD = new("TWD")
  TZS = new("TZS")
  UAH = new("UAH")
  UGX = new("UGX")
  USD = new("USD")
  USN = new("USN")
  USS = new("USS")
  UYU = new("UYU")
  UZS = new("UZS")
  VEB = new("VEB")
  VND = new("VND")
  VUV = new("VUV")
  WST = new("WST")
  XAF = new("XAF")
  XCD = new("XCD")
  XOF = new("XOF")
  XPF = new("XPF")
  YER = new("YER")
  YUM = new("YUM")
  ZAR = new("ZAR")
  ZMK = new("ZMK")
  ZWD = new("ZWD")
end

# {urn:ebay:apis:eBLBaseComponents}DateSpecifierCodeType
class DateSpecifierCodeType < ::String
  CustomCode = new("CustomCode")
  D = new("D")
  M = new("M")
  Y = new("Y")
end

# {urn:ebay:apis:eBLBaseComponents}DayOfWeekCodeType
class DayOfWeekCodeType < ::String
  CustomCode = new("CustomCode")
  Friday = new("Friday")
  Monday = new("Monday")
  Saturday = new("Saturday")
  Sunday = new("Sunday")
  Thursday = new("Thursday")
  Tuesday = new("Tuesday")
  Wednesday = new("Wednesday")
end

# {urn:ebay:apis:eBLBaseComponents}DaysCodeType
class DaysCodeType < ::String
  CustomCode = new("CustomCode")
  EveryDay = new("EveryDay")
  None = new("None")
  Weekdays = new("Weekdays")
  Weekends = new("Weekends")
end

# {urn:ebay:apis:eBLBaseComponents}DepositTypeCodeType
class DepositTypeCodeType < ::String
  CustomCode = new("CustomCode")
  FastDeposit = new("FastDeposit")
  None = new("None")
  OtherMethod = new("OtherMethod")
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionReviseModeCodeType
class DescriptionReviseModeCodeType < ::String
  Append = new("Append")
  CustomCode = new("CustomCode")
  Prepend = new("Prepend")
  Replace = new("Replace")
end

# {urn:ebay:apis:eBLBaseComponents}DescriptionTemplateCodeType
class DescriptionTemplateCodeType < ::String
  CustomCode = new("CustomCode")
  Layout = new("Layout")
  Theme = new("Theme")
end

# {urn:ebay:apis:eBLBaseComponents}DetailNameCodeType
class DetailNameCodeType < ::String
  BuyerRequirementDetails = new("BuyerRequirementDetails")
  CountryDetails = new("CountryDetails")
  CurrencyDetails = new("CurrencyDetails")
  CustomCode = new("CustomCode")
  DispatchTimeMaxDetails = new("DispatchTimeMaxDetails")
  ExcludeShippingLocationDetails = new("ExcludeShippingLocationDetails")
  ItemSpecificDetails = new("ItemSpecificDetails")
  ListingFeatureDetails = new("ListingFeatureDetails")
  ListingStartPriceDetails = new("ListingStartPriceDetails")
  PaymentOptionDetails = new("PaymentOptionDetails")
  ProductDetails = new("ProductDetails")
  RecoupmentPolicyDetails = new("RecoupmentPolicyDetails")
  RegionDetails = new("RegionDetails")
  RegionOfOriginDetails = new("RegionOfOriginDetails")
  ReturnPolicyDetails = new("ReturnPolicyDetails")
  ShippingCarrierDetails = new("ShippingCarrierDetails")
  ShippingCategoryDetails = new("ShippingCategoryDetails")
  ShippingLocationDetails = new("ShippingLocationDetails")
  ShippingPackageDetails = new("ShippingPackageDetails")
  ShippingServiceDetails = new("ShippingServiceDetails")
  SiteDetails = new("SiteDetails")
  TaxJurisdiction = new("TaxJurisdiction")
  TimeZoneDetails = new("TimeZoneDetails")
  URLDetails = new("URLDetails")
  UnitOfMeasurementDetails = new("UnitOfMeasurementDetails")
  VariationDetails = new("VariationDetails")
end

# {urn:ebay:apis:eBLBaseComponents}DeviceTypeCodeType
class DeviceTypeCodeType < ::String
  ClientAlerts = new("ClientAlerts")
  CustomCode = new("CustomCode")
  Platform = new("Platform")
  SMS = new("SMS")
end

# {urn:ebay:apis:eBLBaseComponents}DiscountCodeType
class DiscountCodeType < ::String
  CustomCode = new("CustomCode")
  Percentage = new("Percentage")
  Price = new("Price")
end

# {urn:ebay:apis:eBLBaseComponents}DiscountNameCodeType
class DiscountNameCodeType < ::String
  CombinedItemWeight = new("CombinedItemWeight")
  CustomCode = new("CustomCode")
  EachAdditionalAmount = new("EachAdditionalAmount")
  EachAdditionalAmountOff = new("EachAdditionalAmountOff")
  EachAdditionalPercentOff = new("EachAdditionalPercentOff")
  IndividualItemWeight = new("IndividualItemWeight")
  MaximumShippingCostPerOrder = new("MaximumShippingCostPerOrder")
  ShippingCostXForAmountY = new("ShippingCostXForAmountY")
  ShippingCostXForItemCountN = new("ShippingCostXForItemCountN")
  WeightOff = new("WeightOff")
end

# {urn:ebay:apis:eBLBaseComponents}DiscountReasonCodeType
class DiscountReasonCodeType < ::String
  CustomCode = new("CustomCode")
  Promotion = new("Promotion")
  SpecialOffer = new("SpecialOffer")
end

# {urn:ebay:apis:eBLBaseComponents}DisplayPayNowButtonCodeType
class DisplayPayNowButtonCodeType < ::String
  CustomCode = new("CustomCode")
  ShowPayNowButtonForAllPaymentMethods = new("ShowPayNowButtonForAllPaymentMethods")
  ShowPayNowButtonForPayPalOnly = new("ShowPayNowButtonForPayPalOnly")
end

# {urn:ebay:apis:eBLBaseComponents}EBaySubscriptionTypeCodeType
class EBaySubscriptionTypeCodeType < ::String
  CustomCode = new("CustomCode")
  EBayStoreAnchor = new("EBayStoreAnchor")
  EBayStoreBasic = new("EBayStoreBasic")
  EBayStoreFeatured = new("EBayStoreFeatured")
  FileExchange = new("FileExchange")
  LocalMarketPremium = new("LocalMarketPremium")
  LocalMarketRegular = new("LocalMarketRegular")
  LocalMarketSpecialty = new("LocalMarketSpecialty")
  PictureManagerLevel1 = new("PictureManagerLevel1")
  PictureManagerLevel2 = new("PictureManagerLevel2")
  PictureManagerLevel3 = new("PictureManagerLevel3")
  PictureManagerLevel4 = new("PictureManagerLevel4")
  PictureManagerLevel5 = new("PictureManagerLevel5")
  PictureManagerLevel6 = new("PictureManagerLevel6")
  PictureManagerLevel7 = new("PictureManagerLevel7")
  SellerAssistant = new("SellerAssistant")
  SellerAssistantPro = new("SellerAssistantPro")
  SellerReportsBasic = new("SellerReportsBasic")
  SellerReportsPlus = new("SellerReportsPlus")
  SellingManager = new("SellingManager")
  SellingManagerPro = new("SellingManagerPro")
end

# {urn:ebay:apis:eBLBaseComponents}EnableCodeType
class EnableCodeType < ::String
  CustomCode = new("CustomCode")
  Disable = new("Disable")
  Enable = new("Enable")
end

# {urn:ebay:apis:eBLBaseComponents}EndOfAuctionLogoTypeCodeType
class EndOfAuctionLogoTypeCodeType < ::String
  CustomCode = new("CustomCode")
  Customized = new("Customized")
  None = new("None")
  Store = new("Store")
  WinningBidderNotice = new("WinningBidderNotice")
end

# {urn:ebay:apis:eBLBaseComponents}EndReasonCodeType
class EndReasonCodeType < ::String
  CustomCode = new("CustomCode")
  Incorrect = new("Incorrect")
  LostOrBroken = new("LostOrBroken")
  NotAvailable = new("NotAvailable")
  OtherListingError = new("OtherListingError")
  SellToHighBidder = new("SellToHighBidder")
  Sold = new("Sold")
end

# {urn:ebay:apis:eBLBaseComponents}EscrowCodeType
class EscrowCodeType < ::String
  ByBuyer = new("ByBuyer")
  BySeller = new("BySeller")
  CustomCode = new("CustomCode")
  None = new("None")
end

# {urn:ebay:apis:eBLBaseComponents}ExternalProductCodeType
class ExternalProductCodeType < ::String
  CustomCode = new("CustomCode")
  EAN = new("EAN")
  ISBN = new("ISBN")
  Keywords = new("Keywords")
  MPN = new("MPN")
  ProductID = new("ProductID")
  UPC = new("UPC")
end

# {urn:ebay:apis:eBLBaseComponents}FeatureIDCodeType
class FeatureIDCodeType < ::String
  AdFormatEnabled = new("AdFormatEnabled")
  AdditionalCompatibilityEnabled = new("AdditionalCompatibilityEnabled")
  AttributeConversionEnabled = new("AttributeConversionEnabled")
  BasicUpgradePack = new("BasicUpgradePack")
  BestOfferAutoAcceptEnabled = new("BestOfferAutoAcceptEnabled")
  BestOfferAutoDeclineEnabled = new("BestOfferAutoDeclineEnabled")
  BestOfferCounterEnabled = new("BestOfferCounterEnabled")
  BestOfferEnabled = new("BestOfferEnabled")
  BrandMPNIdentifierEnabled = new("BrandMPNIdentifierEnabled")
  BuyerGuaranteeEnabled = new("BuyerGuaranteeEnabled")
  ClassifiedAdAutoAcceptEnabled = new("ClassifiedAdAutoAcceptEnabled")
  ClassifiedAdAutoDeclineEnabled = new("ClassifiedAdAutoDeclineEnabled")
  ClassifiedAdBestOfferEnabled = new("ClassifiedAdBestOfferEnabled")
  ClassifiedAdCompanyNameEnabled = new("ClassifiedAdCompanyNameEnabled")
  ClassifiedAdContactByAddressEnabled = new("ClassifiedAdContactByAddressEnabled")
  ClassifiedAdContactByEmailAvailable = new("ClassifiedAdContactByEmailAvailable")
  ClassifiedAdContactByEmailEnabled = new("ClassifiedAdContactByEmailEnabled")
  ClassifiedAdContactByPhoneEnabled = new("ClassifiedAdContactByPhoneEnabled")
  ClassifiedAdCounterOfferEnabled = new("ClassifiedAdCounterOfferEnabled")
  ClassifiedAdMaximumBestOffersAllowed = new("ClassifiedAdMaximumBestOffersAllowed")
  ClassifiedAdPayPerLeadEnabled = new("ClassifiedAdPayPerLeadEnabled")
  ClassifiedAdPaymentMethodEnabled = new("ClassifiedAdPaymentMethodEnabled")
  ClassifiedAdShippingMethodEnabled = new("ClassifiedAdShippingMethodEnabled")
  CombinedFixedPriceTreatment = new("CombinedFixedPriceTreatment")
  CompatibilityEnabled = new("CompatibilityEnabled")
  CompatibleVehicleType = new("CompatibleVehicleType")
  ConditionEnabled = new("ConditionEnabled")
  ConditionValues = new("ConditionValues")
  CrossBorderTradeEnabled = new("CrossBorderTradeEnabled")
  CustomCode = new("CustomCode")
  DepositSupported = new("DepositSupported")
  DigitalDeliveryEnabled = new("DigitalDeliveryEnabled")
  DutchBINEnabled = new("DutchBINEnabled")
  EANEnabled = new("EANEnabled")
  EANIdentifierEnabled = new("EANIdentifierEnabled")
  EBayMotorsProAdFormatEnabled = new("eBayMotorsProAdFormatEnabled")
  EBayMotorsProAutoAcceptEnabled = new("eBayMotorsProAutoAcceptEnabled")
  EBayMotorsProAutoDeclineEnabled = new("eBayMotorsProAutoDeclineEnabled")
  EBayMotorsProBestOfferEnabled = new("eBayMotorsProBestOfferEnabled")
  EBayMotorsProCompanyNameEnabled = new("eBayMotorsProCompanyNameEnabled")
  EBayMotorsProContactByAddressEnabled = new("eBayMotorsProContactByAddressEnabled")
  EBayMotorsProContactByEmailEnabled = new("eBayMotorsProContactByEmailEnabled")
  EBayMotorsProContactByPhoneEnabled = new("eBayMotorsProContactByPhoneEnabled")
  EBayMotorsProCounterOfferEnabled = new("eBayMotorsProCounterOfferEnabled")
  EBayMotorsProPaymentMethodCheckOutEnabled = new("eBayMotorsProPaymentMethodCheckOutEnabled")
  EBayMotorsProSellerContactDetailsEnabled = new("eBayMotorsProSellerContactDetailsEnabled")
  EBayMotorsProShippingMethodEnabled = new("eBayMotorsProShippingMethodEnabled")
  ExpressConditionRequired = new("ExpressConditionRequired")
  ExpressEnabled = new("ExpressEnabled")
  ExpressPicturesRequired = new("ExpressPicturesRequired")
  FreeGalleryPlusEnabled = new("FreeGalleryPlusEnabled")
  FreePicturePackEnabled = new("FreePicturePackEnabled")
  GalleryFeaturedDurations = new("GalleryFeaturedDurations")
  GlobalShippingEnabled = new("GlobalShippingEnabled")
  Group1MaxFlatShippingCost = new("Group1MaxFlatShippingCost")
  Group2MaxFlatShippingCost = new("Group2MaxFlatShippingCost")
  Group3MaxFlatShippingCost = new("Group3MaxFlatShippingCost")
  HandlingTimeEnabled = new("HandlingTimeEnabled")
  HomePageFeaturedEnabled = new("HomePageFeaturedEnabled")
  INEscrowWorkflowTimeline = new("INEscrowWorkflowTimeline")
  ISBNEnabled = new("ISBNEnabled")
  ISBNIdentifierEnabled = new("ISBNIdentifierEnabled")
  IntangibleEnabled = new("IntangibleEnabled")
  ItemSpecificsEnabled = new("ItemSpecificsEnabled")
  ListingDurations = new("ListingDurations")
  LocalListingDistances = new("LocalListingDistances")
  LocalMarketAdFormatEnabled = new("LocalMarketAdFormatEnabled")
  LocalMarketAutoAcceptEnabled = new("LocalMarketAutoAcceptEnabled")
  LocalMarketAutoDeclineEnabled = new("LocalMarketAutoDeclineEnabled")
  LocalMarketBestOfferEnabled = new("LocalMarketBestOfferEnabled")
  LocalMarketCompanyNameEnabled = new("LocalMarketCompanyNameEnabled")
  LocalMarketContactByAddressEnabled = new("LocalMarketContactByAddressEnabled")
  LocalMarketContactByEmailEnabled = new("LocalMarketContactByEmailEnabled")
  LocalMarketContactByPhoneEnabled = new("LocalMarketContactByPhoneEnabled")
  LocalMarketCounterOfferEnabled = new("LocalMarketCounterOfferEnabled")
  LocalMarketNonSubscription = new("LocalMarketNonSubscription")
  LocalMarketPaymentMethodCheckOutEnabled = new("LocalMarketPaymentMethodCheckOutEnabled")
  LocalMarketPremiumSubscription = new("LocalMarketPremiumSubscription")
  LocalMarketRegularSubscription = new("LocalMarketRegularSubscription")
  LocalMarketSellerContactDetailsEnabled = new("LocalMarketSellerContactDetailsEnabled")
  LocalMarketShippingMethodEnabled = new("LocalMarketShippingMethodEnabled")
  LocalMarketSpecialitySubscription = new("LocalMarketSpecialitySubscription")
  MaxCompatibleApplications = new("MaxCompatibleApplications")
  MaxFlatShippingCost = new("MaxFlatShippingCost")
  MaxFlatShippingCostCBTExempt = new("MaxFlatShippingCostCBTExempt")
  MaxGranularFitmentCount = new("MaxGranularFitmentCount")
  MaximumBestOffersAllowed = new("MaximumBestOffersAllowed")
  MinCompatibleApplications = new("MinCompatibleApplications")
  MinimumReservePrice = new("MinimumReservePrice")
  NonSubscription = new("NonSubscription")
  PaisaPayFullEscrowEnabled = new("PaisaPayFullEscrowEnabled")
  PayPalBuyerProtectionEnabled = new("PayPalBuyerProtectionEnabled")
  PayPalRequired = new("PayPalRequired")
  PayPalRequiredForStoreOwner = new("PayPalRequiredForStoreOwner")
  PaymentMethods = new("PaymentMethods")
  PaymentOptionsGroup = new("PaymentOptionsGroup")
  PaymentProfileCategoryGroup = new("PaymentProfileCategoryGroup")
  PickupDropOffEnabled = new("PickupDropOffEnabled")
  PremiumSubscription = new("PremiumSubscription")
  ProPack = new("ProPack")
  ProPackPlus = new("ProPackPlus")
  ProductCreationEnabled = new("ProductCreationEnabled")
  RegularSubscription = new("RegularSubscription")
  ReturnPolicyEnabled = new("ReturnPolicyEnabled")
  ReturnPolicyProfileCategoryGroup = new("ReturnPolicyProfileCategoryGroup")
  RevisePriceAllowed = new("RevisePriceAllowed")
  ReviseQuantityAllowed = new("ReviseQuantityAllowed")
  SafePaymentRequired = new("SafePaymentRequired")
  SellerContactDetailsEnabled = new("SellerContactDetailsEnabled")
  SellerProvidedTitleSupported = new("SellerProvidedTitleSupported")
  ShippingProfileCategoryGroup = new("ShippingProfileCategoryGroup")
  ShippingTermsRequired = new("ShippingTermsRequired")
  SkypeMeNonTransactionalEnabled = new("SkypeMeNonTransactionalEnabled")
  SkypeMeTransactionalEnabled = new("SkypeMeTransactionalEnabled")
  SpecialitySubscription = new("SpecialitySubscription")
  StoreInventoryEnabled = new("StoreInventoryEnabled")
  StoreOwnerExtendedListingDurations = new("StoreOwnerExtendedListingDurations")
  StoreOwnerExtendedListingDurationsEnabled = new("StoreOwnerExtendedListingDurationsEnabled")
  TransactionConfirmationRequestEnabled = new("TransactionConfirmationRequestEnabled")
  UPCEnabled = new("UPCEnabled")
  UPCIdentifierEnabled = new("UPCIdentifierEnabled")
  UserConsentRequired = new("UserConsentRequired")
  VINSupported = new("VINSupported")
  VRMSupported = new("VRMSupported")
  ValueCategory = new("ValueCategory")
  ValuePack = new("ValuePack")
  VariationsEnabled = new("VariationsEnabled")
end

# {urn:ebay:apis:eBLBaseComponents}FeaturedFirstCodeType
class FeaturedFirstCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
  PowerSellerOnly = new("PowerSellerOnly")
  TopRatedSellerOnly = new("TopRatedSellerOnly")
end

# {urn:ebay:apis:eBLBaseComponents}FeaturedPlusCodeType
class FeaturedPlusCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
  PowerSellerOnly = new("PowerSellerOnly")
  TopRatedSellerOnly = new("TopRatedSellerOnly")
end

# {urn:ebay:apis:eBLBaseComponents}FedExRateOptionCodeType
class FedExRateOptionCodeType < ::String
  CustomCode = new("CustomCode")
  FedExCounter = new("FedExCounter")
  FedExDiscounted = new("FedExDiscounted")
  FedExStandardList = new("FedExStandardList")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackRatingDetailCodeType
class FeedbackRatingDetailCodeType < ::String
  Communication = new("Communication")
  CustomCode = new("CustomCode")
  ItemAsDescribed = new("ItemAsDescribed")
  ShippingAndHandlingCharges = new("ShippingAndHandlingCharges")
  ShippingTime = new("ShippingTime")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackRatingStarCodeType
class FeedbackRatingStarCodeType < ::String
  Blue = new("Blue")
  CustomCode = new("CustomCode")
  Green = new("Green")
  GreenShooting = new("GreenShooting")
  None = new("None")
  Purple = new("Purple")
  PurpleShooting = new("PurpleShooting")
  Red = new("Red")
  RedShooting = new("RedShooting")
  SilverShooting = new("SilverShooting")
  Turquoise = new("Turquoise")
  TurquoiseShooting = new("TurquoiseShooting")
  Yellow = new("Yellow")
  YellowShooting = new("YellowShooting")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackResponseCodeType
class FeedbackResponseCodeType < ::String
  CustomCode = new("CustomCode")
  FollowUp = new("FollowUp")
  Reply = new("Reply")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackSummaryPeriodCodeType
class FeedbackSummaryPeriodCodeType < ::String
  CustomCode = new("CustomCode")
  FiftyTwoWeeks = new("FiftyTwoWeeks")
  ThirtyDays = new("ThirtyDays")
end

# {urn:ebay:apis:eBLBaseComponents}FeedbackTypeCodeType
class FeedbackTypeCodeType < ::String
  CustomCode = new("CustomCode")
  FeedbackLeft = new("FeedbackLeft")
  FeedbackReceived = new("FeedbackReceived")
  FeedbackReceivedAsBuyer = new("FeedbackReceivedAsBuyer")
  FeedbackReceivedAsSeller = new("FeedbackReceivedAsSeller")
end

# {urn:ebay:apis:eBLBaseComponents}FlatRateInsuranceRangeCodeType
class FlatRateInsuranceRangeCodeType < ::String
  CustomCode = new("CustomCode")
  FlatRateInsuranceRange1 = new("FlatRateInsuranceRange1")
  FlatRateInsuranceRange2 = new("FlatRateInsuranceRange2")
  FlatRateInsuranceRange3 = new("FlatRateInsuranceRange3")
  FlatRateInsuranceRange4 = new("FlatRateInsuranceRange4")
  FlatRateInsuranceRange5 = new("FlatRateInsuranceRange5")
  FlatRateInsuranceRange6 = new("FlatRateInsuranceRange6")
end

# {urn:ebay:apis:eBLBaseComponents}FlatShippingRateOptionCodeType
class FlatShippingRateOptionCodeType < ::String
  ChargeAmountForEachAdditionalItem = new("ChargeAmountForEachAdditionalItem")
  CustomCode = new("CustomCode")
  DeductAmountFromEachAdditionalItem = new("DeductAmountFromEachAdditionalItem")
  ShipAdditionalItemsFree = new("ShipAdditionalItemsFree")
end

# {urn:ebay:apis:eBLBaseComponents}GallerySortFilterCodeType
class GallerySortFilterCodeType < ::String
  CustomCode = new("CustomCode")
  ShowAnyItems = new("ShowAnyItems")
  ShowItemsWithGalleryImagesFirst = new("ShowItemsWithGalleryImagesFirst")
  ShowOnlyItemsWithGalleryImages = new("ShowOnlyItemsWithGalleryImages")
end

# {urn:ebay:apis:eBLBaseComponents}GalleryStatusCodeType
class GalleryStatusCodeType < ::String
  CustomCode = new("CustomCode")
  ImageNonExistent = new("ImageNonExistent")
  ImageProcessingError = new("ImageProcessingError")
  ImageReadTimeOut = new("ImageReadTimeOut")
  InvalidFile = new("InvalidFile")
  InvalidFileFormat = new("InvalidFileFormat")
  InvalidProtocol = new("InvalidProtocol")
  InvalidUrl = new("InvalidUrl")
  Pending = new("Pending")
  ServerDown = new("ServerDown")
  Success = new("Success")
end

# {urn:ebay:apis:eBLBaseComponents}GalleryTypeCodeType
class GalleryTypeCodeType < ::String
  CustomCode = new("CustomCode")
  Featured = new("Featured")
  Gallery = new("Gallery")
  None = new("None")
  Plus = new("Plus")
end

# {urn:ebay:apis:eBLBaseComponents}GeneralPaymentMethodCodeType
class GeneralPaymentMethodCodeType < ::String
  ACH = new("ACH")
  Creditcard = new("Creditcard")
  CustomCode = new("CustomCode")
  Echeck = new("Echeck")
  Other = new("Other")
  PayPalBalance = new("PayPalBalance")
end

# {urn:ebay:apis:eBLBaseComponents}GeographicExposureCodeType
class GeographicExposureCodeType < ::String
  CustomCode = new("CustomCode")
  LocalOnly = new("LocalOnly")
  LocalOptional = new("LocalOptional")
  National = new("National")
end

# {urn:ebay:apis:eBLBaseComponents}GetAllBiddersModeCodeType
class GetAllBiddersModeCodeType < ::String
  CustomCode = new("CustomCode")
  EndedListing = new("EndedListing")
  SecondChanceEligibleEndedListing = new("SecondChanceEligibleEndedListing")
  ViewAll = new("ViewAll")
end

# {urn:ebay:apis:eBLBaseComponents}GiftIconCodeType
class GiftIconCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
end

# {urn:ebay:apis:eBLBaseComponents}GiftServicesCodeType
class GiftServicesCodeType < ::String
  CustomCode = new("CustomCode")
  GiftExpressShipping = new("GiftExpressShipping")
  GiftShipToRecipient = new("GiftShipToRecipient")
  GiftWrap = new("GiftWrap")
end

# {urn:ebay:apis:eBLBaseComponents}GranularityLevelCodeType
class GranularityLevelCodeType < ::String
  Coarse = new("Coarse")
  CustomCode = new("CustomCode")
  Fine = new("Fine")
  Medium = new("Medium")
end

# {urn:ebay:apis:eBLBaseComponents}HandlingNameCodeType
class HandlingNameCodeType < ::String
  CombinedHandlingFee = new("CombinedHandlingFee")
  CustomCode = new("CustomCode")
  EachAdditionalAmount = new("EachAdditionalAmount")
  EachAdditionalAmountOff = new("EachAdditionalAmountOff")
  EachAdditionalPercentOff = new("EachAdditionalPercentOff")
  IndividualHandlingFee = new("IndividualHandlingFee")
end

# {urn:ebay:apis:eBLBaseComponents}HighlightCodeType
class HighlightCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
end

# {urn:ebay:apis:eBLBaseComponents}HitCounterCodeType
class HitCounterCodeType < ::String
  BasicStyle = new("BasicStyle")
  CustomCode = new("CustomCode")
  GreenLED = new("GreenLED")
  Hidden = new("Hidden")
  HiddenStyle = new("HiddenStyle")
  HonestyStyle = new("HonestyStyle")
  NoHitCounter = new("NoHitCounter")
  RetroStyle = new("RetroStyle")
end

# {urn:ebay:apis:eBLBaseComponents}HomePageFeaturedCodeType
class HomePageFeaturedCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
end

# {urn:ebay:apis:eBLBaseComponents}INEscrowWorkflowTimelineCodeType
class INEscrowWorkflowTimelineCodeType < ::String
  CustomCode = new("CustomCode")
  Default = new("Default")
  WorkflowA = new("WorkflowA")
  WorkflowB = new("WorkflowB")
end

# {urn:ebay:apis:eBLBaseComponents}InquiryStatusCodeType
class InquiryStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Invalid = new("Invalid")
  NotApplicable = new("NotApplicable")
  TrackInquiryClosedNoRefund = new("TrackInquiryClosedNoRefund")
  TrackInquiryClosedWithRefund = new("TrackInquiryClosedWithRefund")
  TrackInquiryEscalatedClosedNoRefund = new("TrackInquiryEscalatedClosedNoRefund")
  TrackInquiryEscalatedClosedWithRefund = new("TrackInquiryEscalatedClosedWithRefund")
  TrackInquiryEscalatedPendingBuyer = new("TrackInquiryEscalatedPendingBuyer")
  TrackInquiryEscalatedPendingCS = new("TrackInquiryEscalatedPendingCS")
  TrackInquiryEscalatedPendingSeller = new("TrackInquiryEscalatedPendingSeller")
  TrackInquiryPendingBuyerResponse = new("TrackInquiryPendingBuyerResponse")
  TrackInquiryPendingSellerResponse = new("TrackInquiryPendingSellerResponse")
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceOptionCodeType
class InsuranceOptionCodeType < ::String
  CustomCode = new("CustomCode")
  IncludedInShippingHandling = new("IncludedInShippingHandling")
  NotOffered = new("NotOffered")
  NotOfferedOnSite = new("NotOfferedOnSite")
  Optional = new("Optional")
  Required = new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}InsuranceSelectedCodeType
class InsuranceSelectedCodeType < ::String
  CustomCode = new("CustomCode")
  IncludedInShippingHandling = new("IncludedInShippingHandling")
  NotOffered = new("NotOffered")
  OfferedNotSelected = new("OfferedNotSelected")
  OfferedSelected = new("OfferedSelected")
  Required = new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}InventoryTrackingMethodCodeType
class InventoryTrackingMethodCodeType < ::String
  CustomCode = new("CustomCode")
  ItemID = new("ItemID")
  SKU = new("SKU")
end

# {urn:ebay:apis:eBLBaseComponents}ItemCompatibilityEnabledCodeType
class ItemCompatibilityEnabledCodeType < ::String
  ByApplication = new("ByApplication")
  BySpecification = new("BySpecification")
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
end

# {urn:ebay:apis:eBLBaseComponents}ItemConditionCodeType
class ItemConditionCodeType < ::String
  CustomCode = new("CustomCode")
  New = new("New")
  Used = new("Used")
end

# {urn:ebay:apis:eBLBaseComponents}ItemFormatSortFilterCodeType
class ItemFormatSortFilterCodeType < ::String
  CustomCode = new("CustomCode")
  ShowAnyItems = new("ShowAnyItems")
  ShowItemsWithBINFirst = new("ShowItemsWithBINFirst")
  ShowOnlyItemsWithBIN = new("ShowOnlyItemsWithBIN")
  ShowOnlyStoreItems = new("ShowOnlyStoreItems")
end

# {urn:ebay:apis:eBLBaseComponents}ItemSortFilterCodeType
class ItemSortFilterCodeType < ::String
  CustomCode = new("CustomCode")
  EndingLast = new("EndingLast")
  EndingSoonest = new("EndingSoonest")
  HighestPrice = new("HighestPrice")
  LowestPrice = new("LowestPrice")
  NewlyListed = new("NewlyListed")
  RandomlySelected = new("RandomlySelected")
end

# {urn:ebay:apis:eBLBaseComponents}ItemSortTypeCodeType
class ItemSortTypeCodeType < ::String
  BestOffer = new("BestOffer")
  BestOfferCount = new("BestOfferCount")
  BestOfferCountDescending = new("BestOfferCountDescending")
  BestOfferDescending = new("BestOfferDescending")
  BidCount = new("BidCount")
  BidCountDescending = new("BidCountDescending")
  BidderCount = new("BidderCount")
  BidderCountDescending = new("BidderCountDescending")
  BuyerEmail = new("BuyerEmail")
  BuyerEmailDescending = new("BuyerEmailDescending")
  BuyerPostalCode = new("BuyerPostalCode")
  BuyerPostalCodeDescending = new("BuyerPostalCodeDescending")
  BuyerUserID = new("BuyerUserID")
  BuyerUserIDDescending = new("BuyerUserIDDescending")
  ClassifiedAdPayPerLeadFee = new("ClassifiedAdPayPerLeadFee")
  ClassifiedAdPayPerLeadFeeDescending = new("ClassifiedAdPayPerLeadFeeDescending")
  CurrentPrice = new("CurrentPrice")
  CurrentPriceDescending = new("CurrentPriceDescending")
  CustomCode = new("CustomCode")
  EndTime = new("EndTime")
  EndTimeDescending = new("EndTimeDescending")
  FeedbackLeft = new("FeedbackLeft")
  FeedbackLeftDescending = new("FeedbackLeftDescending")
  FeedbackReceived = new("FeedbackReceived")
  FeedbackReceivedDescending = new("FeedbackReceivedDescending")
  HighBidderUserID = new("HighBidderUserID")
  HighBidderUserIDDescending = new("HighBidderUserIDDescending")
  ItemID = new("ItemID")
  ItemIDDescending = new("ItemIDDescending")
  LeadCount = new("LeadCount")
  LeadCountDescending = new("LeadCountDescending")
  ListingDuration = new("ListingDuration")
  ListingDurationDescending = new("ListingDurationDescending")
  ListingType = new("ListingType")
  ListingTypeDescending = new("ListingTypeDescending")
  MaxBid = new("MaxBid")
  MaxBidDescending = new("MaxBidDescending")
  NewLeadCount = new("NewLeadCount")
  NewLeadCountDescending = new("NewLeadCountDescending")
  Price = new("Price")
  PriceDescending = new("PriceDescending")
  Quantity = new("Quantity")
  QuantityAvailable = new("QuantityAvailable")
  QuantityAvailableDescending = new("QuantityAvailableDescending")
  QuantityDescending = new("QuantityDescending")
  QuantityPurchased = new("QuantityPurchased")
  QuantityPurchasedDescending = new("QuantityPurchasedDescending")
  QuantitySold = new("QuantitySold")
  QuantitySoldDescending = new("QuantitySoldDescending")
  QuestionCount = new("QuestionCount")
  QuestionCountDescending = new("QuestionCountDescending")
  ReservePrice = new("ReservePrice")
  ReservePriceDescending = new("ReservePriceDescending")
  SellerEmail = new("SellerEmail")
  SellerEmailDescending = new("SellerEmailDescending")
  SellerUserID = new("SellerUserID")
  SellerUserIDDescending = new("SellerUserIDDescending")
  ShippingServiceCost = new("ShippingServiceCost")
  ShippingServiceCostDescending = new("ShippingServiceCostDescending")
  SoldPlatform = new("SoldPlatform")
  SoldPlatformDescending = new("SoldPlatformDescending")
  StartPrice = new("StartPrice")
  StartPriceDescending = new("StartPriceDescending")
  StartTime = new("StartTime")
  StartTimeDescending = new("StartTimeDescending")
  TimeLeft = new("TimeLeft")
  TimeLeftDescending = new("TimeLeftDescending")
  Title = new("Title")
  TitleDescending = new("TitleDescending")
  TotalPrice = new("TotalPrice")
  TotalPriceDescending = new("TotalPriceDescending")
  UserID = new("UserID")
  UserIDDescending = new("UserIDDescending")
  WatchCount = new("WatchCount")
  WatchCountDescending = new("WatchCountDescending")
  WonPlatform = new("WonPlatform")
  WonPlatformDescending = new("WonPlatformDescending")
end

# {urn:ebay:apis:eBLBaseComponents}ItemSpecificSourceCodeType
class ItemSpecificSourceCodeType < ::String
  Attribute = new("Attribute")
  CustomCode = new("CustomCode")
  ItemSpecific = new("ItemSpecific")
  Product = new("Product")
end

# {urn:ebay:apis:eBLBaseComponents}ItemSpecificsEnabledCodeType
class ItemSpecificsEnabledCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
end

# {urn:ebay:apis:eBLBaseComponents}ItemTypeCodeType
class ItemTypeCodeType < ::String
  AdFormat = new("AdFormat")
  AllFixedPriceItemTypes = new("AllFixedPriceItemTypes")
  AllItemTypes = new("AllItemTypes")
  AllItems = new("AllItems")
  AuctionItemsOnly = new("AuctionItemsOnly")
  ClassifiedItemsOnly = new("ClassifiedItemsOnly")
  CustomCode = new("CustomCode")
  ExcludeStoreInventory = new("ExcludeStoreInventory")
  FixedPriceExcludeStoreInventory = new("FixedPriceExcludeStoreInventory")
  FixedPricedItem = new("FixedPricedItem")
  StoreInventoryOnly = new("StoreInventoryOnly")
end

# {urn:ebay:apis:eBLBaseComponents}ListingDurationCodeType
class ListingDurationCodeType < ::String
  CustomCode = new("CustomCode")
  Days_1 = new("Days_1")
  Days_10 = new("Days_10")
  Days_120 = new("Days_120")
  Days_14 = new("Days_14")
  Days_21 = new("Days_21")
  Days_3 = new("Days_3")
  Days_30 = new("Days_30")
  Days_5 = new("Days_5")
  Days_60 = new("Days_60")
  Days_7 = new("Days_7")
  Days_90 = new("Days_90")
  GTC = new("GTC")
end

# {urn:ebay:apis:eBLBaseComponents}ListingEnhancementDurationCodeType
class ListingEnhancementDurationCodeType < ::String
  CustomCode = new("CustomCode")
  Days_1 = new("Days_1")
  Days_10 = new("Days_10")
  Days_11 = new("Days_11")
  Days_12 = new("Days_12")
  Days_13 = new("Days_13")
  Days_14 = new("Days_14")
  Days_15 = new("Days_15")
  Days_16 = new("Days_16")
  Days_17 = new("Days_17")
  Days_18 = new("Days_18")
  Days_19 = new("Days_19")
  Days_2 = new("Days_2")
  Days_20 = new("Days_20")
  Days_21 = new("Days_21")
  Days_22 = new("Days_22")
  Days_23 = new("Days_23")
  Days_24 = new("Days_24")
  Days_25 = new("Days_25")
  Days_26 = new("Days_26")
  Days_27 = new("Days_27")
  Days_28 = new("Days_28")
  Days_29 = new("Days_29")
  Days_3 = new("Days_3")
  Days_30 = new("Days_30")
  Days_31 = new("Days_31")
  Days_32 = new("Days_32")
  Days_33 = new("Days_33")
  Days_34 = new("Days_34")
  Days_35 = new("Days_35")
  Days_36 = new("Days_36")
  Days_37 = new("Days_37")
  Days_38 = new("Days_38")
  Days_39 = new("Days_39")
  Days_4 = new("Days_4")
  Days_40 = new("Days_40")
  Days_41 = new("Days_41")
  Days_42 = new("Days_42")
  Days_43 = new("Days_43")
  Days_44 = new("Days_44")
  Days_45 = new("Days_45")
  Days_46 = new("Days_46")
  Days_47 = new("Days_47")
  Days_48 = new("Days_48")
  Days_49 = new("Days_49")
  Days_5 = new("Days_5")
  Days_50 = new("Days_50")
  Days_6 = new("Days_6")
  Days_7 = new("Days_7")
  Days_8 = new("Days_8")
  Days_9 = new("Days_9")
  Lifetime = new("Lifetime")
end

# {urn:ebay:apis:eBLBaseComponents}ListingEnhancementsCodeType
class ListingEnhancementsCodeType < ::String
  BasicUpgradePackBundle = new("BasicUpgradePackBundle")
  BoldTitle = new("BoldTitle")
  Border = new("Border")
  CustomCode = new("CustomCode")
  Featured = new("Featured")
  Highlight = new("Highlight")
  HomePageFeatured = new("HomePageFeatured")
  ProPackBundle = new("ProPackBundle")
  ProPackPlusBundle = new("ProPackPlusBundle")
  ValuePackBundle = new("ValuePackBundle")
end

# {urn:ebay:apis:eBLBaseComponents}ListingFlowCodeType
class ListingFlowCodeType < ::String
  AddItem = new("AddItem")
  CustomCode = new("CustomCode")
  RelistItem = new("RelistItem")
  ReviseItem = new("ReviseItem")
end

# {urn:ebay:apis:eBLBaseComponents}ListingStatusCodeType
class ListingStatusCodeType < ::String
  Active = new("Active")
  Completed = new("Completed")
  Custom = new("Custom")
  CustomCode = new("CustomCode")
  Ended = new("Ended")
end

# {urn:ebay:apis:eBLBaseComponents}ListingSubtypeCodeType
class ListingSubtypeCodeType < ::String
  ClassifiedAd = new("ClassifiedAd")
  CustomCode = new("CustomCode")
  LocalMarketBestOfferOnly = new("LocalMarketBestOfferOnly")
end

# {urn:ebay:apis:eBLBaseComponents}ListingTypeCodeType
class ListingTypeCodeType < ::String
  AdType = new("AdType")
  Auction = new("Auction")
  Chinese = new("Chinese")
  CustomCode = new("CustomCode")
  Dutch = new("Dutch")
  Express = new("Express")
  FixedPriceItem = new("FixedPriceItem")
  Half = new("Half")
  LeadGeneration = new("LeadGeneration")
  Live = new("Live")
  PersonalOffer = new("PersonalOffer")
  Shopping = new("Shopping")
  StoresFixedPrice = new("StoresFixedPrice")
  Unknown = new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}LogisticsPlanCodeType
class LogisticsPlanCodeType < ::String
  CustomCode = new("CustomCode")
  PickUpDropOff = new("PickUpDropOff")
end

# {urn:ebay:apis:eBLBaseComponents}LogoTypeCodeType
class LogoTypeCodeType < ::String
  Custom = new("Custom")
  CustomCode = new("CustomCode")
  Store = new("Store")
  WinningBidderNotice = new("WinningBidderNotice")
end

# {urn:ebay:apis:eBLBaseComponents}MailOptionsTypeCodeType
class MailOptionsTypeCodeType < ::String
  CustomCode = new("CustomCode")
  DoNotSendEmail = new("DoNotSendEmail")
  EmailCopyToSender = new("EmailCopyToSender")
  HideSenderEmailAddress = new("HideSenderEmailAddress")
end

# {urn:ebay:apis:eBLBaseComponents}MarkUpMarkDownEventTypeCodeType
class MarkUpMarkDownEventTypeCodeType < ::String
  CustomCode = new("CustomCode")
  MarkDown = new("MarkDown")
  MarkUp = new("MarkUp")
end

# {urn:ebay:apis:eBLBaseComponents}MerchDisplayCodeType
class MerchDisplayCodeType < ::String
  CustomCode = new("CustomCode")
  DefaultTheme = new("DefaultTheme")
  StoreTheme = new("StoreTheme")
end

# {urn:ebay:apis:eBLBaseComponents}MerchandizingPrefCodeType
class MerchandizingPrefCodeType < ::String
  CustomCode = new("CustomCode")
  OptIn = new("OptIn")
  OptOut = new("OptOut")
end

# {urn:ebay:apis:eBLBaseComponents}MessageStatusTypeCodeType
class MessageStatusTypeCodeType < ::String
  Answered = new("Answered")
  CustomCode = new("CustomCode")
  Unanswered = new("Unanswered")
end

# {urn:ebay:apis:eBLBaseComponents}MessageTypeCodeType
class MessageTypeCodeType < ::String
  All = new("All")
  AskSellerQuestion = new("AskSellerQuestion")
  ClassifiedsBestOffer = new("ClassifiedsBestOffer")
  ClassifiedsContactSeller = new("ClassifiedsContactSeller")
  ContactEbayMember = new("ContactEbayMember")
  ContactMyBidder = new("ContactMyBidder")
  ContactTransactionPartner = new("ContactTransactionPartner")
  ContacteBayMemberViaAnonymousEmail = new("ContacteBayMemberViaAnonymousEmail")
  ContacteBayMemberViaCommunityLink = new("ContacteBayMemberViaCommunityLink")
  CustomCode = new("CustomCode")
  ResponseToASQQuestion = new("ResponseToASQQuestion")
  ResponseToContacteBayMember = new("ResponseToContacteBayMember")
end

# {urn:ebay:apis:eBLBaseComponents}MinimumAdvertisedPriceExposureCodeType
class MinimumAdvertisedPriceExposureCodeType < ::String
  CustomCode = new("CustomCode")
  DuringCheckout = new("DuringCheckout")
  None = new("None")
  PreCheckout = new("PreCheckout")
end

# {urn:ebay:apis:eBLBaseComponents}MismatchTypeCodeType
class MismatchTypeCodeType < ::String
  CustomCode = new("CustomCode")
  OverPayment = new("OverPayment")
  UnderPayment = new("UnderPayment")
end

# {urn:ebay:apis:eBLBaseComponents}ModifyActionCodeType
class ModifyActionCodeType < ::String
  Add = new("Add")
  CustomCode = new("CustomCode")
  Delete = new("Delete")
  Update = new("Update")
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesAlertResolutionStatusCode
class MyMessagesAlertResolutionStatusCode < ::String
  CustomCode = new("CustomCode")
  ResolvedByAutoResolution = new("ResolvedByAutoResolution")
  ResolvedByUser = new("ResolvedByUser")
  Unresolved = new("Unresolved")
end

# {urn:ebay:apis:eBLBaseComponents}MyMessagesFolderOperationCodeType
class MyMessagesFolderOperationCodeType < ::String
  CustomCode = new("CustomCode")
  Display = new("Display")
  Remove = new("Remove")
  Rename = new("Rename")
end

# {urn:ebay:apis:eBLBaseComponents}AddressTypeCodeType
class AddressTypeCodeType < ::String
  Contact = new("Contact")
  CustomCode = new("CustomCode")
  Registered = new("Registered")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationDeliveryStatusCodeType
class NotificationDeliveryStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Delivered = new("Delivered")
  Failed = new("Failed")
  MarkedDown = new("MarkedDown")
  Rejected = new("Rejected")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventPropertyNameCodeType
class NotificationEventPropertyNameCodeType < ::String
  CustomCode = new("CustomCode")
  TimeLeft = new("TimeLeft")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventStateCodeType
class NotificationEventStateCodeType < ::String
  Canceled = new("Canceled")
  CustomCode = new("CustomCode")
  Delivered = new("Delivered")
  Failed = new("Failed")
  FailedPending = new("FailedPending")
  MarkedDown = new("MarkedDown")
  MarkedDownPending = new("MarkedDownPending")
  New = new("New")
  Pending = new("Pending")
  Rejected = new("Rejected")
  Undeliverable = new("Undeliverable")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationEventTypeCodeType
class NotificationEventTypeCodeType < ::String
  AccountSummary = new("AccountSummary")
  AccountSuspended = new("AccountSuspended")
  AddToBidGroup = new("AddToBidGroup")
  AddToWatchList = new("AddToWatchList")
  AskSellerQuestion = new("AskSellerQuestion")
  AuctionCheckoutComplete = new("AuctionCheckoutComplete")
  BestOffer = new("BestOffer")
  BestOfferDeclined = new("BestOfferDeclined")
  BestOfferPlaced = new("BestOfferPlaced")
  BidItemEndingSoon = new("BidItemEndingSoon")
  BidPlaced = new("BidPlaced")
  BidReceived = new("BidReceived")
  BulkDataExchangeJobCompleted = new("BulkDataExchangeJobCompleted")
  BuyerResponseDispute = new("BuyerResponseDispute")
  Checkout = new("Checkout")
  CheckoutBuyerRequestsTotal = new("CheckoutBuyerRequestsTotal")
  CounterOfferReceived = new("CounterOfferReceived")
  CustomCode = new("CustomCode")
  EBNOrderCanceled = new("EBNOrderCanceled")
  EBNOrderPickedUp = new("EBNOrderPickedUp")
  EBPAppealedCase = new("EBPAppealedCase")
  EBPClosedAppeal = new("EBPClosedAppeal")
  EBPClosedCase = new("EBPClosedCase")
  EBPEscalatedCase = new("EBPEscalatedCase")
  EBPMyPaymentDue = new("EBPMyPaymentDue")
  EBPMyResponseDue = new("EBPMyResponseDue")
  EBPOnHoldCase = new("EBPOnHoldCase")
  EBPOtherPartyResponseDue = new("EBPOtherPartyResponseDue")
  EBPPaymentDone = new("EBPPaymentDone")
  EmailAddressChanged = new("EmailAddressChanged")
  EndOfAuction = new("EndOfAuction")
  Feedback = new("Feedback")
  FeedbackForSeller = new("FeedbackForSeller")
  FeedbackLeft = new("FeedbackLeft")
  FeedbackReceived = new("FeedbackReceived")
  FeedbackStarChanged = new("FeedbackStarChanged")
  FixedPriceTransaction = new("FixedPriceTransaction")
  INRBuyerClosedDispute = new("INRBuyerClosedDispute")
  INRBuyerOpenedDispute = new("INRBuyerOpenedDispute")
  INRBuyerRespondedToDispute = new("INRBuyerRespondedToDispute")
  INRSellerRespondedToDispute = new("INRSellerRespondedToDispute")
  ItemAddedToBidGroup = new("ItemAddedToBidGroup")
  ItemAddedToWatchList = new("ItemAddedToWatchList")
  ItemClosed = new("ItemClosed")
  ItemExtended = new("ItemExtended")
  ItemListed = new("ItemListed")
  ItemLost = new("ItemLost")
  ItemMarkedPaid = new("ItemMarkedPaid")
  ItemMarkedShipped = new("ItemMarkedShipped")
  ItemRemovedFromBidGroup = new("ItemRemovedFromBidGroup")
  ItemRemovedFromWatchList = new("ItemRemovedFromWatchList")
  ItemRevised = new("ItemRevised")
  ItemRevisedAddCharity = new("ItemRevisedAddCharity")
  ItemSold = new("ItemSold")
  ItemSuspended = new("ItemSuspended")
  ItemUnsold = new("ItemUnsold")
  ItemWon = new("ItemWon")
  ItemsCanceled = new("ItemsCanceled")
  M2MMessageStatusChange = new("M2MMessageStatusChange")
  MyMessagesAlert = new("MyMessagesAlert")
  MyMessagesAlertHeader = new("MyMessagesAlertHeader")
  MyMessagesHighPriorityMessage = new("MyMessagesHighPriorityMessage")
  MyMessagesHighPriorityMessageHeader = new("MyMessagesHighPriorityMessageHeader")
  MyMessagesM2MMessage = new("MyMessagesM2MMessage")
  MyMessagesM2MMessageHeader = new("MyMessagesM2MMessageHeader")
  MyMessageseBayMessage = new("MyMessageseBayMessage")
  MyMessageseBayMessageHeader = new("MyMessageseBayMessageHeader")
  None = new("None")
  OutBid = new("OutBid")
  PasswordChanged = new("PasswordChanged")
  PasswordHintChanged = new("PasswordHintChanged")
  PaymentDetailChanged = new("PaymentDetailChanged")
  PaymentReminder = new("PaymentReminder")
  PlaceOffer = new("PlaceOffer")
  ReadyForPayout = new("ReadyForPayout")
  ReadyToShip = new("ReadyToShip")
  RefundFailure = new("RefundFailure")
  RefundSuccess = new("RefundSuccess")
  RemoveFromBidGroup = new("RemoveFromBidGroup")
  RemoveFromWatchList = new("RemoveFromWatchList")
  ReturnClosed = new("ReturnClosed")
  ReturnCreated = new("ReturnCreated")
  ReturnDelivered = new("ReturnDelivered")
  ReturnEscalated = new("ReturnEscalated")
  ReturnRefundOverdue = new("ReturnRefundOverdue")
  ReturnSellerInfoOverdue = new("ReturnSellerInfoOverdue")
  ReturnShipped = new("ReturnShipped")
  ReturnWaitingForSellerInfo = new("ReturnWaitingForSellerInfo")
  SecondChanceOffer = new("SecondChanceOffer")
  SellerClosedDispute = new("SellerClosedDispute")
  SellerOpenedDispute = new("SellerOpenedDispute")
  SellerRespondedToDispute = new("SellerRespondedToDispute")
  ShoppingCartItemEndingSoon = new("ShoppingCartItemEndingSoon")
  ThirdPartyCartCheckout = new("ThirdPartyCartCheckout")
  TokenRevocation = new("TokenRevocation")
  UnmatchedPaymentReceived = new("UnmatchedPaymentReceived")
  UserIDChanged = new("UserIDChanged")
  WatchedItemEndingSoon = new("WatchedItemEndingSoon")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationPayloadTypeCodeType
class NotificationPayloadTypeCodeType < ::String
  CustomCode = new("CustomCode")
  EBLSchemaSOAP = new("eBLSchemaSOAP")
end

# {urn:ebay:apis:eBLBaseComponents}NotificationRoleCodeType
class NotificationRoleCodeType < ::String
  Application = new("Application")
  CustomCode = new("CustomCode")
  Event = new("Event")
  User = new("User")
  UserData = new("UserData")
end

# {urn:ebay:apis:eBLBaseComponents}OrderRoleCodeType
class OrderRoleCodeType < ::String
  Buyer = new("Buyer")
  CustomCode = new("CustomCode")
  Seller = new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}OrderStatusCodeType
class OrderStatusCodeType < ::String
  Active = new("Active")
  All = new("All")
  Authenticated = new("Authenticated")
  CancelPending = new("CancelPending")
  Cancelled = new("Cancelled")
  Completed = new("Completed")
  CustomCode = new("CustomCode")
  Default = new("Default")
  InProcess = new("InProcess")
  Inactive = new("Inactive")
  Invalid = new("Invalid")
  Shipped = new("Shipped")
end

# {urn:ebay:apis:eBLBaseComponents}OrderStatusFilterCodeType
class OrderStatusFilterCodeType < ::String
  All = new("All")
  AwaitingPayment = new("AwaitingPayment")
  AwaitingShipment = new("AwaitingShipment")
  CustomCode = new("CustomCode")
  PaidAndShipped = new("PaidAndShipped")
end

# {urn:ebay:apis:eBLBaseComponents}PaidStatusCodeType
class PaidStatusCodeType < ::String
  BuyerHasNotCompletedCheckout = new("BuyerHasNotCompletedCheckout")
  CustomCode = new("CustomCode")
  EscrowPaymentCancelled = new("EscrowPaymentCancelled")
  MarkedAsPaid = new("MarkedAsPaid")
  NotPaid = new("NotPaid")
  Paid = new("Paid")
  PaidCOD = new("PaidCOD")
  PaidWithEscrow = new("PaidWithEscrow")
  PaidWithPaisaPay = new("PaidWithPaisaPay")
  PaidWithPaisaPayEscrow = new("PaidWithPaisaPayEscrow")
  PaidWithPayPal = new("PaidWithPayPal")
  PaisaPayNotPaid = new("PaisaPayNotPaid")
  PayUponInvoice = new("PayUponInvoice")
  PaymentPending = new("PaymentPending")
  PaymentPendingWithEscrow = new("PaymentPendingWithEscrow")
  PaymentPendingWithPaisaPay = new("PaymentPendingWithPaisaPay")
  PaymentPendingWithPaisaPayEscrow = new("PaymentPendingWithPaisaPayEscrow")
  PaymentPendingWithPayPal = new("PaymentPendingWithPayPal")
  Refunded = new("Refunded")
  WaitingForCODPayment = new("WaitingForCODPayment")
end

# {urn:ebay:apis:eBLBaseComponents}PayPalAccountLevelCodeType
class PayPalAccountLevelCodeType < ::String
  CustomCode = new("CustomCode")
  InternationalUnverified = new("InternationalUnverified")
  InternationalVerified = new("InternationalVerified")
  Invalid = new("Invalid")
  Trusted = new("Trusted")
  Unknown = new("Unknown")
  Unverified = new("Unverified")
  Verified = new("Verified")
end

# {urn:ebay:apis:eBLBaseComponents}PayPalAccountStatusCodeType
class PayPalAccountStatusCodeType < ::String
  Active = new("Active")
  Closed = new("Closed")
  CustomCode = new("CustomCode")
  HighRestricted = new("HighRestricted")
  Invalid = new("Invalid")
  Locked = new("Locked")
  LowRestricted = new("LowRestricted")
  Unknown = new("Unknown")
  WireOff = new("WireOff")
end

# {urn:ebay:apis:eBLBaseComponents}PayPalAccountTypeCodeType
class PayPalAccountTypeCodeType < ::String
  Business = new("Business")
  CustomCode = new("CustomCode")
  Invalid = new("Invalid")
  Personal = new("Personal")
  Premier = new("Premier")
  Unknown = new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentHoldReasonCodeType
class PaymentHoldReasonCodeType < ::String
  BelowStandardSeller = new("BelowStandardSeller")
  CasualSeller = new("CasualSeller")
  CustomCode = new("CustomCode")
  EbpCaseOpen = new("EbpCaseOpen")
  NewPaypalAccountAdded = new("NewPaypalAccountAdded")
  NewSeller = new("NewSeller")
  None = new("None")
  NotAvailable = new("NotAvailable")
  Other = new("Other")
  ReinstatementAfterSuspension = new("ReinstatementAfterSuspension")
  SellerIsOnBlackList = new("SellerIsOnBlackList")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentHoldStatusCodeType
class PaymentHoldStatusCodeType < ::String
  CustomCode = new("CustomCode")
  MerchantHold = new("MerchantHold")
  NewSellerHold = new("NewSellerHold")
  None = new("None")
  PaymentHold = new("PaymentHold")
  PaymentReview = new("PaymentReview")
  ReleaseConfirmed = new("ReleaseConfirmed")
  ReleaseFailed = new("ReleaseFailed")
  ReleasePending = new("ReleasePending")
  Released = new("Released")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentInstructionCodeType
class PaymentInstructionCodeType < ::String
  CustomCode = new("CustomCode")
  PaymentInstruction = new("PaymentInstruction")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentMethodSearchCodeType
class PaymentMethodSearchCodeType < ::String
  CustomCode = new("CustomCode")
  PaisaPay = new("PaisaPay")
  PaisaPayEscrowEMI = new("PaisaPayEscrowEMI")
  PayPal = new("PayPal")
  PayPalOrPaisaPay = new("PayPalOrPaisaPay")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentOptionsGroupEnabledCodeType
class PaymentOptionsGroupEnabledCodeType < ::String
  CustomCode = new("CustomCode")
  EBayPaymentProcessEnabled = new("eBayPaymentProcessEnabled")
  EBayPaymentProcessExcluded = new("eBayPaymentProcessExcluded")
  NonStandardPaymentsEnabled = new("NonStandardPaymentsEnabled")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentStatusCodeType
class PaymentStatusCodeType < ::String
  BuyerCreditCardFailed = new("BuyerCreditCardFailed")
  BuyerECheckBounced = new("BuyerECheckBounced")
  BuyerFailedPaymentReportedBySeller = new("BuyerFailedPaymentReportedBySeller")
  CustomCode = new("CustomCode")
  NoPaymentFailure = new("NoPaymentFailure")
  PayPalPaymentInProcess = new("PayPalPaymentInProcess")
  PaymentInProcess = new("PaymentInProcess")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentTransactionStatusCodeType
class PaymentTransactionStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Failed = new("Failed")
  Pending = new("Pending")
  Succeeded = new("Succeeded")
end

# {urn:ebay:apis:eBLBaseComponents}PaymentTypeCodeType
class PaymentTypeCodeType < ::String
  AdminReversal = new("AdminReversal")
  AllOther = new("AllOther")
  CustomCode = new("CustomCode")
  Refund = new("Refund")
  RentalBuyout = new("RentalBuyout")
  RentalExtension = new("RentalExtension")
  Sale = new("Sale")
  SellerDeniedPayment = new("SellerDeniedPayment")
end

# {urn:ebay:apis:eBLBaseComponents}PayoutMethodType
class PayoutMethodType < ::String
  EFT = new("EFT")
  MONEYBOOKERS = new("MONEYBOOKERS")
  PAYPAL = new("PAYPAL")
end

# {urn:ebay:apis:eBLBaseComponents}PerformanceStatusCodeType
class PerformanceStatusCodeType < ::String
  AboveStandard = new("AboveStandard")
  BelowStandard = new("BelowStandard")
  CustomCode = new("CustomCode")
  Standard = new("Standard")
  TopRated = new("TopRated")
end

# {urn:ebay:apis:eBLBaseComponents}PeriodCodeType
class PeriodCodeType < ::String
  CustomCode = new("CustomCode")
  Days_1 = new("Days_1")
  Days_180 = new("Days_180")
  Days_30 = new("Days_30")
  Days_360 = new("Days_360")
  Days_540 = new("Days_540")
end

# {urn:ebay:apis:eBLBaseComponents}PhotoDisplayCodeType
class PhotoDisplayCodeType < ::String
  CustomCode = new("CustomCode")
  None = new("None")
  PicturePack = new("PicturePack")
  SiteHostedPictureShow = new("SiteHostedPictureShow")
  SlideShow = new("SlideShow")
  SuperSize = new("SuperSize")
  SuperSizePictureShow = new("SuperSizePictureShow")
  VendorHostedPictureShow = new("VendorHostedPictureShow")
end

# {urn:ebay:apis:eBLBaseComponents}PickupMethodCodeType
class PickupMethodCodeType < ::String
  CustomCode = new("CustomCode")
  InStorePickup = new("InStorePickup")
  PickUpDropOff = new("PickUpDropOff")
end

# {urn:ebay:apis:eBLBaseComponents}PickupStatusCodeType
class PickupStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Invalid = new("Invalid")
  NotApplicable = new("NotApplicable")
  PendingMerchantConfirmation = new("PendingMerchantConfirmation")
  Pickedup = new("Pickedup")
  PickupCancelled = new("PickupCancelled")
  PickupCancelledBuyerNoShow = new("PickupCancelledBuyerNoShow")
  PickupCancelledBuyerRejected = new("PickupCancelledBuyerRejected")
  PickupCancelledOutOfStock = new("PickupCancelledOutOfStock")
  ReadyToPickup = new("ReadyToPickup")
end

# {urn:ebay:apis:eBLBaseComponents}PictureFormatCodeType
class PictureFormatCodeType < ::String
  CustomCode = new("CustomCode")
  GIF = new("GIF")
  JPG = new("JPG")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerActionCodeType
class PictureManagerActionCodeType < ::String
  Add = new("Add")
  Change = new("Change")
  CustomCode = new("CustomCode")
  Delete = new("Delete")
  Move = new("Move")
  Rename = new("Rename")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerDetailLevelCodeType
class PictureManagerDetailLevelCodeType < ::String
  CustomCode = new("CustomCode")
  ReturnAll = new("ReturnAll")
  ReturnPicture = new("ReturnPicture")
  ReturnSubscription = new("ReturnSubscription")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerPictureDisplayTypeCodeType
class PictureManagerPictureDisplayTypeCodeType < ::String
  BIBO = new("BIBO")
  CustomCode = new("CustomCode")
  Large = new("Large")
  Original = new("Original")
  Standard = new("Standard")
  Supersize = new("Supersize")
  Thumbnail = new("Thumbnail")
end

# {urn:ebay:apis:eBLBaseComponents}PictureManagerSubscriptionLevelCodeType
class PictureManagerSubscriptionLevelCodeType < ::String
  CustomCode = new("CustomCode")
  Free = new("Free")
  Level1 = new("Level1")
  Level2 = new("Level2")
  Level3 = new("Level3")
  Level4 = new("Level4")
end

# {urn:ebay:apis:eBLBaseComponents}PictureSetCodeType
class PictureSetCodeType < ::String
  CustomCode = new("CustomCode")
  Large = new("Large")
  Standard = new("Standard")
  Supersize = new("Supersize")
end

# {urn:ebay:apis:eBLBaseComponents}PictureSourceCodeType
class PictureSourceCodeType < ::String
  CustomCode = new("CustomCode")
  EPS = new("EPS")
  PictureManager = new("PictureManager")
  Vendor = new("Vendor")
end

# {urn:ebay:apis:eBLBaseComponents}PictureUploadPolicyCodeType
class PictureUploadPolicyCodeType < ::String
  Add = new("Add")
  ClearAndAdd = new("ClearAndAdd")
  CustomCode = new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}PictureWatermarkCodeType
class PictureWatermarkCodeType < ::String
  CustomCode = new("CustomCode")
  Icon = new("Icon")
  User = new("User")
end

# {urn:ebay:apis:eBLBaseComponents}PolicyComplianceStatusCodeType
class PolicyComplianceStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Failing = new("Failing")
  Fair = new("Fair")
  Good = new("Good")
  Poor = new("Poor")
end

# {urn:ebay:apis:eBLBaseComponents}PreferredLocationCodeType
class PreferredLocationCodeType < ::String
  AvailableInCountryImplied = new("AvailableInCountryImplied")
  BelgiumListing = new("BelgiumListing")
  CustomCode = new("CustomCode")
  ListedInCurrencyImplied = new("ListedInCurrencyImplied")
  LocatedInCountryImplied = new("LocatedInCountryImplied")
  SiteImplied = new("SiteImplied")
end

# {urn:ebay:apis:eBLBaseComponents}PricingTreatmentCodeType
class PricingTreatmentCodeType < ::String
  CustomCode = new("CustomCode")
  MAP = new("MAP")
  MFO = new("MFO")
  None = new("None")
  STP = new("STP")
end

# {urn:ebay:apis:eBLBaseComponents}ProPackCodeType
class ProPackCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
  PowerSellerOnly = new("PowerSellerOnly")
  TopRatedSellerOnly = new("TopRatedSellerOnly")
end

# {urn:ebay:apis:eBLBaseComponents}ProductCreationEnabledCodeType
class ProductCreationEnabledCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
  Required = new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}ProductIdentiferEnabledCodeType
class ProductIdentiferEnabledCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
  Required = new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}ProductSortCodeType
class ProductSortCodeType < ::String
  CustomCode = new("CustomCode")
  ItemCountAsc = new("ItemCountAsc")
  ItemCountDesc = new("ItemCountDesc")
  PopularityAsc = new("PopularityAsc")
  PopularityDesc = new("PopularityDesc")
  RatingAsc = new("RatingAsc")
  RatingDesc = new("RatingDesc")
  ReviewCountAsc = new("ReviewCountAsc")
  ReviewCountDesc = new("ReviewCountDesc")
  TitleAsc = new("TitleAsc")
  TitleDesc = new("TitleDesc")
end

# {urn:ebay:apis:eBLBaseComponents}ProductStateCodeType
class ProductStateCodeType < ::String
  CustomCode = new("CustomCode")
  Delete = new("Delete")
  Merge = new("Merge")
  Update = new("Update")
  UpdateMajor = new("UpdateMajor")
  UpdateNoDetails = new("UpdateNoDetails")
end

# {urn:ebay:apis:eBLBaseComponents}ProductUseCaseCodeType
class ProductUseCaseCodeType < ::String
  AddItem = new("AddItem")
  CustomCode = new("CustomCode")
  RelistItem = new("RelistItem")
  ReviseItem = new("ReviseItem")
end

# {urn:ebay:apis:eBLBaseComponents}ProfileCategoryGroupCodeType
class ProfileCategoryGroupCodeType < ::String
  ALL = new("ALL")
  Inherit = new("Inherit")
  MOTORS_VEHICLE = new("MOTORS_VEHICLE")
  None = new("None")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionItemPriceTypeCodeType
class PromotionItemPriceTypeCodeType < ::String
  AuctionPrice = new("AuctionPrice")
  BestOfferOnlyPrice = new("BestOfferOnlyPrice")
  BuyItNowPrice = new("BuyItNowPrice")
  ClassifiedAdPrice = new("ClassifiedAdPrice")
  CustomCode = new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionItemSelectionCodeType
class PromotionItemSelectionCodeType < ::String
  Automatic = new("Automatic")
  CustomCode = new("CustomCode")
  Manual = new("Manual")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionMethodCodeType
class PromotionMethodCodeType < ::String
  CrossSell = new("CrossSell")
  CustomCode = new("CustomCode")
  UpSell = new("UpSell")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionSchemeCodeType
class PromotionSchemeCodeType < ::String
  CategoryProximity = new("CategoryProximity")
  CustomCode = new("CustomCode")
  DefaultCrossSellLogic = new("DefaultCrossSellLogic")
  DefaultRule = new("DefaultRule")
  DefaultUpSellLogic = new("DefaultUpSellLogic")
  ItemToDefaultRule = new("ItemToDefaultRule")
  ItemToItem = new("ItemToItem")
  ItemToStoreCat = new("ItemToStoreCat")
  RelatedCategoryRule = new("RelatedCategoryRule")
  StoreToStoreCat = new("StoreToStoreCat")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalSaleStatusCodeType
class PromotionalSaleStatusCodeType < ::String
  Active = new("Active")
  CustomCode = new("CustomCode")
  Deleted = new("Deleted")
  Inactive = new("Inactive")
  Processing = new("Processing")
  Scheduled = new("Scheduled")
end

# {urn:ebay:apis:eBLBaseComponents}PromotionalSaleTypeCodeType
class PromotionalSaleTypeCodeType < ::String
  CustomCode = new("CustomCode")
  FreeShippingOnly = new("FreeShippingOnly")
  PriceDiscountAndFreeShipping = new("PriceDiscountAndFreeShipping")
  PriceDiscountOnly = new("PriceDiscountOnly")
end

# {urn:ebay:apis:eBLBaseComponents}PurchasePurposeTypeCodeType
class PurchasePurposeTypeCodeType < ::String
  AuctionItem = new("AuctionItem")
  BuyNowItem = new("BuyNowItem")
  CustomCode = new("CustomCode")
  Donation = new("Donation")
  EBayBilling = new("eBayBilling")
  GiftCertificates = new("GiftCertificates")
  Other = new("Other")
  ShoppingCart = new("ShoppingCart")
  Subscription = new("Subscription")
end

# {urn:ebay:apis:eBLBaseComponents}QuantityAvailableHintCodeType
class QuantityAvailableHintCodeType < ::String
  CustomCode = new("CustomCode")
  Limited = new("Limited")
  MoreThan = new("MoreThan")
end

# {urn:ebay:apis:eBLBaseComponents}QuantityOperatorCodeType
class QuantityOperatorCodeType < ::String
  CustomCode = new("CustomCode")
  Equal = new("Equal")
  GreaterThan = new("GreaterThan")
  GreaterThanOrEqual = new("GreaterThanOrEqual")
  LessThan = new("LessThan")
  LessThanOrEqual = new("LessThanOrEqual")
end

# {urn:ebay:apis:eBLBaseComponents}QuestionTypeCodeType
class QuestionTypeCodeType < ::String
  CustomCode = new("CustomCode")
  CustomizedSubject = new("CustomizedSubject")
  General = new("General")
  MultipleItemShipping = new("MultipleItemShipping")
  None = new("None")
  Payment = new("Payment")
  Shipping = new("Shipping")
end

# {urn:ebay:apis:eBLBaseComponents}RCSPaymentStatusCodeType
class RCSPaymentStatusCodeType < ::String
  Canceled = new("Canceled")
  CustomCode = new("CustomCode")
  Paid = new("Paid")
  Pending = new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}RangeCodeType
class RangeCodeType < ::String
  CustomCode = new("CustomCode")
  High = new("High")
  Low = new("Low")
end

# {urn:ebay:apis:eBLBaseComponents}ReasonHideFromSearchCodeType
class ReasonHideFromSearchCodeType < ::String
  DuplicateListing = new("DuplicateListing")
  OutOfStock = new("OutOfStock")
end

# {urn:ebay:apis:eBLBaseComponents}RecipientRelationCodeType
class RecipientRelationCodeType < ::String
  C_1 = new("1")
  C_2 = new("2")
  C_3 = new("3")
  C_4 = new("4")
  CustomCode = new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}RecommendationEngineCodeType
class RecommendationEngineCodeType < ::String
  CustomCode = new("CustomCode")
  ItemSpecifics = new("ItemSpecifics")
  ListingAnalyzer = new("ListingAnalyzer")
  ProductPricing = new("ProductPricing")
  SIFFTAS = new("SIFFTAS")
  SuggestedAttributes = new("SuggestedAttributes")
end

# {urn:ebay:apis:eBLBaseComponents}RefundOptionsCodeType
class RefundOptionsCodeType < ::String
  CustomCode = new("CustomCode")
  Exchange = new("Exchange")
  MerchandiseCredit = new("MerchandiseCredit")
  MoneyBack = new("MoneyBack")
  MoneyBackOrExchange = new("MoneyBackOrExchange")
  MoneyBackOrReplacement = new("MoneyBackOrReplacement")
end

# {urn:ebay:apis:eBLBaseComponents}RefundFailureCodeType
class RefundFailureCodeType < ::String
  CustomCode = new("CustomCode")
  PaypalBillingAgreementCanceled = new("PaypalBillingAgreementCanceled")
  PaypalRiskDeclinesTransaction = new("PaypalRiskDeclinesTransaction")
end

# {urn:ebay:apis:eBLBaseComponents}RefundLineTypeCodeType
class RefundLineTypeCodeType < ::String
  Additional = new("Additional")
  CustomCode = new("CustomCode")
  PurchasePrice = new("PurchasePrice")
  ShippingPrice = new("ShippingPrice")
end

# {urn:ebay:apis:eBLBaseComponents}RefundReasonCodeType
class RefundReasonCodeType < ::String
  BuyerRemorse = new("BuyerRemorse")
  CannotShipProduct = new("CannotShipProduct")
  CustomCode = new("CustomCode")
  ItemBadQuality = new("ItemBadQuality")
  ItemDamaged = new("ItemDamaged")
  Other = new("Other")
  WrongItemShipped = new("WrongItemShipped")
end

# {urn:ebay:apis:eBLBaseComponents}RefundStatusCodeType
class RefundStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Failed = new("Failed")
  Pending = new("Pending")
  Successful = new("Successful")
end

# {urn:ebay:apis:eBLBaseComponents}RefundTypeCodeType
class RefundTypeCodeType < ::String
  CustomCode = new("CustomCode")
  CustomOrPartial = new("CustomOrPartial")
  Full = new("Full")
  FullPlusShipping = new("FullPlusShipping")
end

# {urn:ebay:apis:eBLBaseComponents}RefundSourceTypeCodeType
class RefundSourceTypeCodeType < ::String
  CustomCode = new("CustomCode")
  PaymentRefund = new("PaymentRefund")
  StoreCredit = new("StoreCredit")
end

# {urn:ebay:apis:eBLBaseComponents}RefundingSourceTypeCodeType
class RefundingSourceTypeCodeType < ::String
  BankAccount = new("BankAccount")
  CustomCode = new("CustomCode")
  Paypal = new("Paypal")
  ScheduledPayout = new("ScheduledPayout")
end

# {urn:ebay:apis:eBLBaseComponents}RequiredSellerActionCodeType
class RequiredSellerActionCodeType < ::String
  ContacteBayCS = new("ContacteBayCS")
  CustomCode = new("CustomCode")
  MarkAsShipped = new("MarkAsShipped")
  None = new("None")
  ResolveBuyerMessageInr = new("ResolveBuyerMessageInr")
  ResolveBuyerMessageSnad = new("ResolveBuyerMessageSnad")
  ResolvePPPIcase = new("ResolvePPPIcase")
  ResolveReturn = new("ResolveReturn")
  ResolveeBPCase = new("ResolveeBPCase")
  SetupPayoutMethod = new("SetupPayoutMethod")
  UpdatePayoutMethod = new("UpdatePayoutMethod")
  UploadTrackingInfo = new("UploadTrackingInfo")
end

# {urn:ebay:apis:eBLBaseComponents}RestockingFeeCodeType
class RestockingFeeCodeType < ::String
  CustomCode = new("CustomCode")
  NoRestockingFee = new("NoRestockingFee")
  Percent_10 = new("Percent_10")
  Percent_15 = new("Percent_15")
  Percent_20 = new("Percent_20")
  Percent_25 = new("Percent_25")
end

# {urn:ebay:apis:eBLBaseComponents}ReturnStatusCodeType
class ReturnStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Invalid = new("Invalid")
  NotApplicable = new("NotApplicable")
  ReturnClosedEscalated = new("ReturnClosedEscalated")
  ReturnClosedNoRefund = new("ReturnClosedNoRefund")
  ReturnClosedWithRefund = new("ReturnClosedWithRefund")
  ReturnDelivered = new("ReturnDelivered")
  ReturnEscalated = new("ReturnEscalated")
  ReturnEscalatedClosedNoRefund = new("ReturnEscalatedClosedNoRefund")
  ReturnEscalatedClosedWithRefund = new("ReturnEscalatedClosedWithRefund")
  ReturnEscalatedPendingBuyer = new("ReturnEscalatedPendingBuyer")
  ReturnEscalatedPendingCS = new("ReturnEscalatedPendingCS")
  ReturnEscalatedPendingSeller = new("ReturnEscalatedPendingSeller")
  ReturnOpen = new("ReturnOpen")
  ReturnRequestClosedNoRefund = new("ReturnRequestClosedNoRefund")
  ReturnRequestClosedWithRefund = new("ReturnRequestClosedWithRefund")
  ReturnRequestPending = new("ReturnRequestPending")
  ReturnRequestPendingApproval = new("ReturnRequestPendingApproval")
  ReturnRequestRejected = new("ReturnRequestRejected")
  ReturnShipped = new("ReturnShipped")
end

# {urn:ebay:apis:eBLBaseComponents}ReturnsAcceptedOptionsCodeType
class ReturnsAcceptedOptionsCodeType < ::String
  CustomCode = new("CustomCode")
  ReturnsAccepted = new("ReturnsAccepted")
  ReturnsNotAccepted = new("ReturnsNotAccepted")
end

# {urn:ebay:apis:eBLBaseComponents}ReturnsWithinOptionsCodeType
class ReturnsWithinOptionsCodeType < ::String
  CustomCode = new("CustomCode")
  Days_10 = new("Days_10")
  Days_14 = new("Days_14")
  Days_3 = new("Days_3")
  Days_30 = new("Days_30")
  Days_60 = new("Days_60")
  Days_7 = new("Days_7")
  Months_1 = new("Months_1")
end

# {urn:ebay:apis:eBLBaseComponents}SMSSubscriptionErrorCodeCodeType
class SMSSubscriptionErrorCodeCodeType < ::String
  CustomCode = new("CustomCode")
  PhoneNumberCarrierChanged = new("PhoneNumberCarrierChanged")
  PhoneNumberChanged = new("PhoneNumberChanged")
  PhoneNumberInvalid = new("PhoneNumberInvalid")
  SMSAggregatorNotAvailable = new("SMSAggregatorNotAvailable")
  UserRequestedUnregistration = new("UserRequestedUnregistration")
end

# {urn:ebay:apis:eBLBaseComponents}SMSSubscriptionUserStatusCodeType
class SMSSubscriptionUserStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Failed = new("Failed")
  Pending = new("Pending")
  Registered = new("Registered")
  Unregistered = new("Unregistered")
end

# {urn:ebay:apis:eBLBaseComponents}SearchFlagCodeType
class SearchFlagCodeType < ::String
  Charity = new("Charity")
  CustomCode = new("CustomCode")
  DigitalDelivery = new("DigitalDelivery")
  FreeShipping = new("FreeShipping")
  Gallery = new("Gallery")
  GermanMotorsSearchable = new("GermanMotorsSearchable")
  GetItFast = new("GetItFast")
  Gift = new("Gift")
  LocalSearch = new("LocalSearch")
  Lot = new("Lot")
  NowAndNew = new("NowAndNew")
  Picture = new("Picture")
  WorldOfGood = new("WorldOfGood")
end

# {urn:ebay:apis:eBLBaseComponents}SearchStandingStatusCodeType
class SearchStandingStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Lowered = new("Lowered")
  Raised = new("Raised")
  Standard = new("Standard")
end

# {urn:ebay:apis:eBLBaseComponents}SecondChanceOfferDurationCodeType
class SecondChanceOfferDurationCodeType < ::String
  CustomCode = new("CustomCode")
  Days_1 = new("Days_1")
  Days_3 = new("Days_3")
  Days_5 = new("Days_5")
  Days_7 = new("Days_7")
end

# {urn:ebay:apis:eBLBaseComponents}SelectionModeCodeType
class SelectionModeCodeType < ::String
  Automatic = new("Automatic")
  CustomCode = new("CustomCode")
  FreeText = new("FreeText")
  Manual = new("Manual")
  Prefilled = new("Prefilled")
  SelectionOnly = new("SelectionOnly")
end

# {urn:ebay:apis:eBLBaseComponents}SellerAccountStatusCodeType
class SellerAccountStatusCodeType < ::String
  Current = new("Current")
  CustomCode = new("CustomCode")
  OnHold = new("OnHold")
  PastDue = new("PastDue")
end

# {urn:ebay:apis:eBLBaseComponents}SellerBusinessCodeType
class SellerBusinessCodeType < ::String
  Commercial = new("Commercial")
  CustomCode = new("CustomCode")
  Private = new("Private")
  Undefined = new("Undefined")
end

# {urn:ebay:apis:eBLBaseComponents}SellerDashboardAlertSeverityCodeType
class SellerDashboardAlertSeverityCodeType < ::String
  CustomCode = new("CustomCode")
  Informational = new("Informational")
  StrongWarning = new("StrongWarning")
  Warning = new("Warning")
end

# {urn:ebay:apis:eBLBaseComponents}SellerGuaranteeLevelCodeType
class SellerGuaranteeLevelCodeType < ::String
  CustomCode = new("CustomCode")
  NotEligible = new("NotEligible")
  Premium = new("Premium")
  Regular = new("Regular")
  Ultra = new("Ultra")
end

# {urn:ebay:apis:eBLBaseComponents}SellerLevelCodeType
class SellerLevelCodeType < ::String
  Bronze = new("Bronze")
  CustomCode = new("CustomCode")
  Gold = new("Gold")
  None = new("None")
  Platinum = new("Platinum")
  Silver = new("Silver")
  Titanium = new("Titanium")
end

# {urn:ebay:apis:eBLBaseComponents}SellerPIStatusCodeType
class SellerPIStatusCodeType < ::String
  AcceptedUA = new("AcceptedUA")
  CustomCode = new("CustomCode")
  MustAcceptUA = new("MustAcceptUA")
  PIEnabled = new("PIEnabled")
end

# {urn:ebay:apis:eBLBaseComponents}SellerPaymentMethodCodeType
class SellerPaymentMethodCodeType < ::String
  CreditCard = new("CreditCard")
  CustomCode = new("CustomCode")
  DirectDebit = new("DirectDebit")
  DirectDebitPendingSignatureMandate = new("DirectDebitPendingSignatureMandate")
  DirectDebitPendingVerification = new("DirectDebitPendingVerification")
  EBayDirectPay = new("eBayDirectPay")
  NothingOnFile = new("NothingOnFile")
  PayPal = new("PayPal")
end

# {urn:ebay:apis:eBLBaseComponents}SellereBayPaymentProcessStatusCodeType
class SellereBayPaymentProcessStatusCodeType < ::String
  AcceptedUA = new("AcceptedUA")
  CustomCode = new("CustomCode")
  EBayPaymentProcessEnabled = new("eBayPaymentProcessEnabled")
  MustAcceptUA = new("MustAcceptUA")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAlertTypeCodeType
class SellingManagerAlertTypeCodeType < ::String
  Automation = new("Automation")
  CustomCode = new("CustomCode")
  General = new("General")
  Inventory = new("Inventory")
  PaisaPay = new("PaisaPay")
  Sold = new("Sold")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAutoRelistOptionCodeType
class SellingManagerAutoRelistOptionCodeType < ::String
  CustomCode = new("CustomCode")
  RelistAfterDaysHours = new("RelistAfterDaysHours")
  RelistAtSpecificTimeOfDay = new("RelistAtSpecificTimeOfDay")
  RelistImmediately = new("RelistImmediately")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAutoRelistTypeCodeType
class SellingManagerAutoRelistTypeCodeType < ::String
  CustomCode = new("CustomCode")
  RelistContinuously = new("RelistContinuously")
  RelistContinuouslyUntilSold = new("RelistContinuouslyUntilSold")
  RelistOnceIfNotSold = new("RelistOnceIfNotSold")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAutoSecondChanceOfferTypeCodeType
class SellingManagerAutoSecondChanceOfferTypeCodeType < ::String
  BidsGreaterThanAmount = new("BidsGreaterThanAmount")
  BidsGreaterThanCostPlusAmount = new("BidsGreaterThanCostPlusAmount")
  BidsGreaterThanCostPlusPercentage = new("BidsGreaterThanCostPlusPercentage")
  CustomCode = new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerAutomationPropertyTypeCodeType
class SellingManagerAutomationPropertyTypeCodeType < ::String
  CustomCode = new("CustomCode")
  ItemListFailedAutomationRules = new("ItemListFailedAutomationRules")
  ItemListFailedSecondChanceOfferAutoRules = new("ItemListFailedSecondChanceOfferAutoRules")
  ItemRelistFailedAutomationRules = new("ItemRelistFailedAutomationRules")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerEmailSentStatusCodeType
class SellingManagerEmailSentStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Failed = new("Failed")
  Pending = new("Pending")
  Successful = new("Successful")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerEmailTypeCodeType
class SellingManagerEmailTypeCodeType < ::String
  CustomCode = new("CustomCode")
  CustomEmailTemplate1 = new("CustomEmailTemplate1")
  CustomEmailTemplate10 = new("CustomEmailTemplate10")
  CustomEmailTemplate11 = new("CustomEmailTemplate11")
  CustomEmailTemplate12 = new("CustomEmailTemplate12")
  CustomEmailTemplate13 = new("CustomEmailTemplate13")
  CustomEmailTemplate14 = new("CustomEmailTemplate14")
  CustomEmailTemplate15 = new("CustomEmailTemplate15")
  CustomEmailTemplate16 = new("CustomEmailTemplate16")
  CustomEmailTemplate17 = new("CustomEmailTemplate17")
  CustomEmailTemplate18 = new("CustomEmailTemplate18")
  CustomEmailTemplate19 = new("CustomEmailTemplate19")
  CustomEmailTemplate2 = new("CustomEmailTemplate2")
  CustomEmailTemplate20 = new("CustomEmailTemplate20")
  CustomEmailTemplate3 = new("CustomEmailTemplate3")
  CustomEmailTemplate4 = new("CustomEmailTemplate4")
  CustomEmailTemplate5 = new("CustomEmailTemplate5")
  CustomEmailTemplate6 = new("CustomEmailTemplate6")
  CustomEmailTemplate7 = new("CustomEmailTemplate7")
  CustomEmailTemplate8 = new("CustomEmailTemplate8")
  CustomEmailTemplate9 = new("CustomEmailTemplate9")
  FeedbackReminderEmail = new("FeedbackReminderEmail")
  InvoiceNotification = new("InvoiceNotification")
  ManualEntry = new("ManualEntry")
  PaymentReceivedEmail = new("PaymentReceivedEmail")
  PaymentReminderEmail = new("PaymentReminderEmail")
  PersonalizedEmail = new("PersonalizedEmail")
  RequestForShippingAddressEmail = new("RequestForShippingAddressEmail")
  ShipmentSentEmail = new("ShipmentSentEmail")
  WinningBuyerEmail = new("WinningBuyerEmail")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerGeneralPropertyTypeCodeType
class SellingManagerGeneralPropertyTypeCodeType < ::String
  BadEmailTemplate = new("BadEmailTemplate")
  CustomCode = new("CustomCode")
  NegativeFeedbackReceived = new("NegativeFeedbackReceived")
  UnpaidItemDispute = new("UnpaidItemDispute")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerInventoryPropertyTypeCodeType
class SellingManagerInventoryPropertyTypeCodeType < ::String
  Active = new("Active")
  CustomCode = new("CustomCode")
  InActive = new("InActive")
  LowStock = new("LowStock")
  ProductsOutOfStock = new("ProductsOutOfStock")
  WithListings = new("WithListings")
  WithoutListings = new("WithoutListings")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerPaidStatusCodeType
class SellingManagerPaidStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Paid = new("Paid")
  PartiallyPaid = new("PartiallyPaid")
  Pending = new("Pending")
  Refunded = new("Refunded")
  Unpaid = new("Unpaid")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerPaisaPayPropertyTypeCodeType
class SellingManagerPaisaPayPropertyTypeCodeType < ::String
  CustomCode = new("CustomCode")
  PaisaPayAwaitingShipment = new("PaisaPayAwaitingShipment")
  PaisaPayPendingReceived = new("PaisaPayPendingReceived")
  PaisaPayRefundInitiated = new("PaisaPayRefundInitiated")
  PaisaPayTimeExtensionRequestDeclined = new("PaisaPayTimeExtensionRequestDeclined")
  PaisaPayTimeExtensionRequested = new("PaisaPayTimeExtensionRequested")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerProductSortCodeType
class SellingManagerProductSortCodeType < ::String
  ActiveQuantity = new("ActiveQuantity")
  AvailableToList = new("AvailableToList")
  AveragePrice = new("AveragePrice")
  AverageUnitCost = new("AverageUnitCost")
  CustomCode = new("CustomCode")
  CustomLabel = new("CustomLabel")
  FolderName = new("FolderName")
  LastSubmittedDate = new("LastSubmittedDate")
  ProductName = new("ProductName")
  ScheduledQuantity = new("ScheduledQuantity")
  SoldQuantity = new("SoldQuantity")
  SuccessPercent = new("SuccessPercent")
  UnsoldQuantity = new("UnsoldQuantity")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerSearchTypeCodeType
class SellingManagerSearchTypeCodeType < ::String
  BuyerEmail = new("BuyerEmail")
  BuyerFullName = new("BuyerFullName")
  BuyerUserID = new("BuyerUserID")
  CustomCode = new("CustomCode")
  CustomLabel = new("CustomLabel")
  ItemID = new("ItemID")
  ProductID = new("ProductID")
  ProductName = new("ProductName")
  SaleRecordID = new("SaleRecordID")
  Title = new("Title")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerShippedStatusCodeType
class SellingManagerShippedStatusCodeType < ::String
  CustomCode = new("CustomCode")
  Shipped = new("Shipped")
  Unshipped = new("Unshipped")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerSoldListingsPropertyTypeCodeType
class SellingManagerSoldListingsPropertyTypeCodeType < ::String
  CustomCode = new("CustomCode")
  CustomEmailTemplate10SendError = new("CustomEmailTemplate10SendError")
  CustomEmailTemplate11SendError = new("CustomEmailTemplate11SendError")
  CustomEmailTemplate12SendError = new("CustomEmailTemplate12SendError")
  CustomEmailTemplate13SendError = new("CustomEmailTemplate13SendError")
  CustomEmailTemplate14SendError = new("CustomEmailTemplate14SendError")
  CustomEmailTemplate15SendError = new("CustomEmailTemplate15SendError")
  CustomEmailTemplate16SendError = new("CustomEmailTemplate16SendError")
  CustomEmailTemplate17SendError = new("CustomEmailTemplate17SendError")
  CustomEmailTemplate18SendError = new("CustomEmailTemplate18SendError")
  CustomEmailTemplate19SendError = new("CustomEmailTemplate19SendError")
  CustomEmailTemplate1SendError = new("CustomEmailTemplate1SendError")
  CustomEmailTemplate20SendError = new("CustomEmailTemplate20SendError")
  CustomEmailTemplate2SendError = new("CustomEmailTemplate2SendError")
  CustomEmailTemplate3SendError = new("CustomEmailTemplate3SendError")
  CustomEmailTemplate4SendError = new("CustomEmailTemplate4SendError")
  CustomEmailTemplate5SendError = new("CustomEmailTemplate5SendError")
  CustomEmailTemplate6SendError = new("CustomEmailTemplate6SendError")
  CustomEmailTemplate7SendError = new("CustomEmailTemplate7SendError")
  CustomEmailTemplate8SendError = new("CustomEmailTemplate8SendError")
  CustomEmailTemplate9SendError = new("CustomEmailTemplate9SendError")
  EBayGivingWorksDonationOwed = new("eBayGivingWorksDonationOwed")
  EscrowCancelled = new("EscrowCancelled")
  EscrowCompleted = new("EscrowCompleted")
  EscrowInitiated = new("EscrowInitiated")
  EscrowManageRefund = new("EscrowManageRefund")
  EscrowReleasePayment = new("EscrowReleasePayment")
  EscrowShipToBuyer = new("EscrowShipToBuyer")
  EscrowSoldAll = new("EscrowSoldAll")
  FeeCreditRequest = new("FeeCreditRequest")
  FeedbackMessageNotSent = new("FeedbackMessageNotSent")
  FeedbackReminderSendError = new("FeedbackReminderSendError")
  InternationalSale = new("InternationalSale")
  NotPaidNotShipped = new("NotPaidNotShipped")
  NotShipped = new("NotShipped")
  PadiWithPaisaPayEscrow = new("PadiWithPaisaPayEscrow")
  PaidNoFeedback = new("PaidNoFeedback")
  PaidNotShipped = new("PaidNotShipped")
  PaidShipped = new("PaidShipped")
  PayPalPayment = new("PayPalPayment")
  PaymentOverDue = new("PaymentOverDue")
  PaymentReceivedNotificationSendError = new("PaymentReceivedNotificationSendError")
  PaymentReminderSendError = new("PaymentReminderSendError")
  PersonalizedEmailsSendError = new("PersonalizedEmailsSendError")
  PrintShippingLabel = new("PrintShippingLabel")
  RequestForShippingAddressSendError = new("RequestForShippingAddressSendError")
  ResponseRequiredForReturnCase = new("ResponseRequiredForReturnCase")
  ShippedAndAwaitingFeedback = new("ShippedAndAwaitingFeedback")
  ShippingNotificationSendError = new("ShippingNotificationSendError")
  UnpaidItemReminder = new("UnpaidItemReminder")
  WinningBuyerNotificationSendError = new("WinningBuyerNotificationSendError")
end

# {urn:ebay:apis:eBLBaseComponents}SellingManagerSoldListingsSortTypeCodeType
class SellingManagerSoldListingsSortTypeCodeType < ::String
  BuyerEmail = new("BuyerEmail")
  BuyerPostalCode = new("BuyerPostalCode")
  CheckoutState = new("CheckoutState")
  CustomCode = new("CustomCode")
  CustomLabel = new("CustomLabel")
  DaysSinceSale = new("DaysSinceSale")
  EmailsSent = new("EmailsSent")
  FeedbackLeft = new("FeedbackLeft")
  FeedbackReceived = new("FeedbackReceived")
  ListedOn = new("ListedOn")
  PaidDate = new("PaidDate")
  PaidState = new("PaidState")
  ReservePrice = new("ReservePrice")
  SaleDate = new("SaleDate")
  SaleFormat = new("SaleFormat")
  SalesRecordID = new("SalesRecordID")
  ShippedDate = new("ShippedDate")
  ShippedState = new("ShippedState")
  ShippingCost = new("ShippingCost")
  SoldOn = new("SoldOn")
  StartPrice = new("StartPrice")
  TotalPrice = new("TotalPrice")
end

# {urn:ebay:apis:eBLBaseComponents}SetUserNotesActionCodeType
class SetUserNotesActionCodeType < ::String
  AddOrUpdate = new("AddOrUpdate")
  CustomCode = new("CustomCode")
  Delete = new("Delete")
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentDeliveryStatusCodeType
class ShipmentDeliveryStatusCodeType < ::String
  Canceled = new("Canceled")
  Created = new("Created")
  CustomCode = new("CustomCode")
  Delivered = new("Delivered")
  DroppedOff = new("DroppedOff")
  Error = new("Error")
  InTransit = new("InTransit")
  LabelPrinted = new("LabelPrinted")
  Returned = new("Returned")
  Unconfirmed = new("Unconfirmed")
  Unknown = new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}ShipmentStatusCodeType
class ShipmentStatusCodeType < ::String
  Active = new("Active")
  Canceled = new("Canceled")
  CustomCode = new("CustomCode")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCarrierCodeType
class ShippingCarrierCodeType < ::String
  Chronopost = new("Chronopost")
  ColiposteDomestic = new("ColiposteDomestic")
  ColiposteInternational = new("ColiposteInternational")
  Correos = new("Correos")
  CustomCode = new("CustomCode")
  DHL = new("DHL")
  DeutschePost = new("DeutschePost")
  FedEx = new("FedEx")
  Hermes = new("Hermes")
  ILoxx = new("iLoxx")
  Nacex = new("Nacex")
  Other = new("Other")
  Seur = new("Seur")
  UPS = new("UPS")
  USPS = new("USPS")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingCostPaidByOptionsCodeType
class ShippingCostPaidByOptionsCodeType < ::String
  Buyer = new("Buyer")
  CustomCode = new("CustomCode")
  EUBuyer_CancelRightsUnder40 = new("EUBuyer_CancelRightsUnder40")
  EUSeller_CancelRights = new("EUSeller_CancelRights")
  EUSeller_ReturnRights = new("EUSeller_ReturnRights")
  Seller = new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingFeatureCodeType
class ShippingFeatureCodeType < ::String
  CustomCode = new("CustomCode")
  DeliveryConfirmation = new("DeliveryConfirmation")
  NotDefined = new("NotDefined")
  Other = new("Other")
  SaturdayDelivery = new("SaturdayDelivery")
  SignatureConfirmation = new("SignatureConfirmation")
  StealthPostage = new("StealthPostage")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingPackageCodeType
class ShippingPackageCodeType < ::String
  BulkyGoods = new("BulkyGoods")
  Caravan = new("Caravan")
  Cars = new("Cars")
  CustomCode = new("CustomCode")
  Europallet = new("Europallet")
  ExpandableToughBags = new("ExpandableToughBags")
  ExtraLargePack = new("ExtraLargePack")
  Furniture = new("Furniture")
  IndustryVehicles = new("IndustryVehicles")
  LargeCanadaPostBox = new("LargeCanadaPostBox")
  LargeCanadaPostBubbleMailer = new("LargeCanadaPostBubbleMailer")
  LargeEnvelope = new("LargeEnvelope")
  Letter = new("Letter")
  MailingBoxes = new("MailingBoxes")
  MediumCanadaPostBox = new("MediumCanadaPostBox")
  MediumCanadaPostBubbleMailer = new("MediumCanadaPostBubbleMailer")
  Motorbikes = new("Motorbikes")
  None = new("None")
  OneWayPallet = new("OneWayPallet")
  PackageThickEnvelope = new("PackageThickEnvelope")
  PaddedBags = new("PaddedBags")
  ParcelOrPaddedEnvelope = new("ParcelOrPaddedEnvelope")
  Roll = new("Roll")
  SmallCanadaPostBox = new("SmallCanadaPostBox")
  SmallCanadaPostBubbleMailer = new("SmallCanadaPostBubbleMailer")
  ToughBags = new("ToughBags")
  UPSLetter = new("UPSLetter")
  USPSFlatRateEnvelope = new("USPSFlatRateEnvelope")
  USPSLargePack = new("USPSLargePack")
  VeryLargePack = new("VeryLargePack")
  Winepak = new("Winepak")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingRateTypeCodeType
class ShippingRateTypeCodeType < ::String
  CommercialPlus = new("CommercialPlus")
  Counter = new("Counter")
  CustomCode = new("CustomCode")
  DailyPickup = new("DailyPickup")
  Discounted = new("Discounted")
  GoldSilver = new("GoldSilver")
  OnDemand = new("OnDemand")
  PlatTitanium = new("PlatTitanium")
  StandardList = new("StandardList")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingRegionCodeType
class ShippingRegionCodeType < ::String
  Africa = new("Africa")
  Americas = new("Americas")
  Asia = new("Asia")
  Caribbean = new("Caribbean")
  CustomCode = new("CustomCode")
  Europe = new("Europe")
  EuropeanUnion = new("EuropeanUnion")
  LatinAmerica = new("LatinAmerica")
  MiddleEast = new("MiddleEast")
  None = new("None")
  NorthAmerica = new("NorthAmerica")
  Oceania = new("Oceania")
  SouthAmerica = new("SouthAmerica")
  WillNotShip = new("WillNotShip")
  Worldwide = new("Worldwide")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceCodeType
class ShippingServiceCodeType < ::String
  AT_BitteTreffenSieEineAuswahl = new("AT_BitteTreffenSieEineAuswahl")
  AT_COD = new("AT_COD")
  AT_EconomyDeliveryFromAbroad = new("AT_EconomyDeliveryFromAbroad")
  AT_EinschreibenVersandInklEinschreibengebuhr = new("AT_EinschreibenVersandInklEinschreibengebuhr")
  AT_ExpeditedInternational = new("AT_ExpeditedInternational")
  AT_ExpressDeliveryFromAbroad = new("AT_ExpressDeliveryFromAbroad")
  AT_ExpressOrCourier = new("AT_ExpressOrCourier")
  AT_ExpressOrCourierInternational = new("AT_ExpressOrCourierInternational")
  AT_InsuredDispatch = new("AT_InsuredDispatch")
  AT_InsuredExpressOrCourier = new("AT_InsuredExpressOrCourier")
  AT_InsuredExpressOrCourierInternational = new("AT_InsuredExpressOrCourierInternational")
  AT_InsuredSpecialDispatch = new("AT_InsuredSpecialDispatch")
  AT_InsuredSpecialDispatchInternational = new("AT_InsuredSpecialDispatchInternational")
  AT_NachnahmeVersandInklNachnahmegebuhr = new("AT_NachnahmeVersandInklNachnahmegebuhr")
  AT_OtherInternationalShipping = new("AT_OtherInternationalShipping")
  AT_Pickup = new("AT_Pickup")
  AT_Sonstige = new("AT_Sonstige")
  AT_SonstigerVersandInternational = new("AT_SonstigerVersandInternational")
  AT_SpecialDispatch = new("AT_SpecialDispatch")
  AT_SpecialDispatchInternational = new("AT_SpecialDispatchInternational")
  AT_StandardDeliveryFromAbroad = new("AT_StandardDeliveryFromAbroad")
  AT_StandardDispatch = new("AT_StandardDispatch")
  AT_StandardInternational = new("AT_StandardInternational")
  AT_TrackedDeliveryFromAbroad = new("AT_TrackedDeliveryFromAbroad")
  AT_UnversicherterExpressVersandInternational = new("AT_UnversicherterExpressVersandInternational")
  AT_UnversicherterVersandInternational = new("AT_UnversicherterVersandInternational")
  AT_VersicherterExpressVersandInternational = new("AT_VersicherterExpressVersandInternational")
  AT_VersicherterVersandInternational = new("AT_VersicherterVersandInternational")
  AT_Writing = new("AT_Writing")
  AU_AirMailInternational = new("AU_AirMailInternational")
  AU_AusPostRegisteredPostInternationalPaddedBag1kg = new("AU_AusPostRegisteredPostInternationalPaddedBag1kg")
  AU_AusPostRegisteredPostInternationalPaddedBag500g = new("AU_AusPostRegisteredPostInternationalPaddedBag500g")
  AU_AusPostRegisteredPostInternationalParcel = new("AU_AusPostRegisteredPostInternationalParcel")
  AU_AustralianAirExpressFlatRate1kg = new("AU_AustralianAirExpressFlatRate1kg")
  AU_AustralianAirExpressFlatRate3kg = new("AU_AustralianAirExpressFlatRate3kg")
  AU_AustralianAirExpressFlatRate5kg = new("AU_AustralianAirExpressFlatRate5kg")
  AU_AustralianAirExpressMetro15kg = new("AU_AustralianAirExpressMetro15kg")
  AU_Courier = new("AU_Courier")
  AU_EMSInternationalCourierDocuments = new("AU_EMSInternationalCourierDocuments")
  AU_EMSInternationalCourierParcels = new("AU_EMSInternationalCourierParcels")
  AU_EconomyAirInternational = new("AU_EconomyAirInternational")
  AU_EconomyDeliveryFromOutsideAU = new("AU_EconomyDeliveryFromOutsideAU")
  AU_ExpeditedDeliveryFromOutsideAU = new("AU_ExpeditedDeliveryFromOutsideAU")
  AU_ExpeditedInternational = new("AU_ExpeditedInternational")
  AU_Express = new("AU_Express")
  AU_ExpressCourierInternational = new("AU_ExpressCourierInternational")
  AU_ExpressDelivery = new("AU_ExpressDelivery")
  AU_ExpressPostInternational = new("AU_ExpressPostInternational")
  AU_ExpressPostInternationalDocuments = new("AU_ExpressPostInternationalDocuments")
  AU_ExpressPostSatchel3kg = new("AU_ExpressPostSatchel3kg")
  AU_ExpressPostSatchel500g = new("AU_ExpressPostSatchel500g")
  AU_ExpressWithInsurance = new("AU_ExpressWithInsurance")
  AU_Freight = new("AU_Freight")
  AU_Other = new("AU_Other")
  AU_OtherInternational = new("AU_OtherInternational")
  AU_Pickup = new("AU_Pickup")
  AU_PrePaidExpressPostInternationalBox10kg = new("AU_PrePaidExpressPostInternationalBox10kg")
  AU_PrePaidExpressPostInternationalBox20kg = new("AU_PrePaidExpressPostInternationalBox20kg")
  AU_PrePaidExpressPostInternationalBox5kg = new("AU_PrePaidExpressPostInternationalBox5kg")
  AU_PrePaidExpressPostInternationalEnvelopeB4 = new("AU_PrePaidExpressPostInternationalEnvelopeB4")
  AU_PrePaidExpressPostInternationalEnvelopeC5 = new("AU_PrePaidExpressPostInternationalEnvelopeC5")
  AU_PrePaidExpressPostInternationalSatchels2kg = new("AU_PrePaidExpressPostInternationalSatchels2kg")
  AU_PrePaidExpressPostInternationalSatchels3kg = new("AU_PrePaidExpressPostInternationalSatchels3kg")
  AU_PrePaidExpressPostPlatinum3kg = new("AU_PrePaidExpressPostPlatinum3kg")
  AU_PrePaidExpressPostPlatinum500g = new("AU_PrePaidExpressPostPlatinum500g")
  AU_PrePaidExpressPostSatchel3kg = new("AU_PrePaidExpressPostSatchel3kg")
  AU_PrePaidExpressPostSatchel500g = new("AU_PrePaidExpressPostSatchel500g")
  AU_PrePaidExpressPostSatchel5kg = new("AU_PrePaidExpressPostSatchel5kg")
  AU_PrePaidParcelPostSatchels3kg = new("AU_PrePaidParcelPostSatchels3kg")
  AU_PrePaidParcelPostSatchels500g = new("AU_PrePaidParcelPostSatchels500g")
  AU_PrePaidParcelPostSatchels5kg = new("AU_PrePaidParcelPostSatchels5kg")
  AU_Registered = new("AU_Registered")
  AU_RegisteredParcelPost = new("AU_RegisteredParcelPost")
  AU_RegisteredParcelPostPrepaidSatchel3kg = new("AU_RegisteredParcelPostPrepaidSatchel3kg")
  AU_RegisteredParcelPostPrepaidSatchel500g = new("AU_RegisteredParcelPostPrepaidSatchel500g")
  AU_RegisteredParcelPostPrepaidSatchel5kg = new("AU_RegisteredParcelPostPrepaidSatchel5kg")
  AU_RegisteredSmallParcel = new("AU_RegisteredSmallParcel")
  AU_Regular = new("AU_Regular")
  AU_RegularParcelWithTracking = new("AU_RegularParcelWithTracking")
  AU_RegularParcelWithTrackingAndSignature = new("AU_RegularParcelWithTrackingAndSignature")
  AU_RegularWithInsurance = new("AU_RegularWithInsurance")
  AU_SeaMailInternational = new("AU_SeaMailInternational")
  AU_SmallParcelWithTracking = new("AU_SmallParcelWithTracking")
  AU_SmallParcelWithTrackingAndSignature = new("AU_SmallParcelWithTrackingAndSignature")
  AU_SmallParcels = new("AU_SmallParcels")
  AU_StandardDelivery = new("AU_StandardDelivery")
  AU_StandardDeliveryFromOutsideAU = new("AU_StandardDeliveryFromOutsideAU")
  AU_StandardInternational = new("AU_StandardInternational")
  AU_eBayAusPost3kgFlatRateSatchel = new("AU_eBayAusPost3kgFlatRateSatchel")
  AU_eBayAusPost500gFlatRateSatchel = new("AU_eBayAusPost500gFlatRateSatchel")
  BEFR_DHLInternational = new("BEFR_DHLInternational")
  BEFR_DePostInternational = new("BEFR_DePostInternational")
  BEFR_EconomyDeliveryFromAbroad = new("BEFR_EconomyDeliveryFromAbroad")
  BEFR_ExpeditedInternational = new("BEFR_ExpeditedInternational")
  BEFR_ExpressDeliveryFromAbroad = new("BEFR_ExpressDeliveryFromAbroad")
  BEFR_ExpressTaxipost = new("BEFR_ExpressTaxipost")
  BEFR_FedExInternational = new("BEFR_FedExInternational")
  BEFR_LaPosteCertifiedShipping = new("BEFR_LaPosteCertifiedShipping")
  BEFR_LaPosteEnvoiNONPRIOR = new("BEFR_LaPosteEnvoiNONPRIOR")
  BEFR_LaPosteEnvoiPRIOR = new("BEFR_LaPosteEnvoiPRIOR")
  BEFR_LaPosteEnvoiRecommande = new("BEFR_LaPosteEnvoiRecommande")
  BEFR_LaPosteInternational = new("BEFR_LaPosteInternational")
  BEFR_LaPosteStandardShipping = new("BEFR_LaPosteStandardShipping")
  BEFR_LaPosteTaxipost24h = new("BEFR_LaPosteTaxipost24h")
  BEFR_LaPosteTaxipostLLS = new("BEFR_LaPosteTaxipostLLS")
  BEFR_LaPosteTaxipostSecur = new("BEFR_LaPosteTaxipostSecur")
  BEFR_LaPosteenvoieNONPRIOR = new("BEFR_LaPosteenvoieNONPRIOR")
  BEFR_LaPosteenvoiePRIOR = new("BEFR_LaPosteenvoiePRIOR")
  BEFR_LaPosteenvoieRecommande = new("BEFR_LaPosteenvoieRecommande")
  BEFR_LivraisonExpressInternationalePrixforFaitaire = new("BEFR_LivraisonExpressInternationalePrixforFaitaire")
  BEFR_LivraisonExpressPrixforFaitaire = new("BEFR_LivraisonExpressPrixforFaitaire")
  BEFR_LivraisonSecurise = new("BEFR_LivraisonSecurise")
  BEFR_LivraisonSecuriseInternational = new("BEFR_LivraisonSecuriseInternational")
  BEFR_LivraisonStandardInternationalePrixforFaitaire = new("BEFR_LivraisonStandardInternationalePrixforFaitaire")
  BEFR_LivraisonStandardPrixforFaitaire = new("BEFR_LivraisonStandardPrixforFaitaire")
  BEFR_Other = new("BEFR_Other")
  BEFR_OtherInternational = new("BEFR_OtherInternational")
  BEFR_PaquetKilopost = new("BEFR_PaquetKilopost")
  BEFR_PaquetKilopostInternationale = new("BEFR_PaquetKilopostInternationale")
  BEFR_ParcelPost = new("BEFR_ParcelPost")
  BEFR_Pickup = new("BEFR_Pickup")
  BEFR_PointRetraitKiala = new("BEFR_PointRetraitKiala")
  BEFR_PostInternationalRegistered = new("BEFR_PostInternationalRegistered")
  BEFR_PostInternationalStandard = new("BEFR_PostInternationalStandard")
  BEFR_PriorityDelivery = new("BEFR_PriorityDelivery")
  BEFR_RegisteredMail = new("BEFR_RegisteredMail")
  BEFR_StandardDelivery = new("BEFR_StandardDelivery")
  BEFR_StandardDeliveryFromAbroad = new("BEFR_StandardDeliveryFromAbroad")
  BEFR_StandardInternational = new("BEFR_StandardInternational")
  BEFR_TNTInternational = new("BEFR_TNTInternational")
  BEFR_TPGPostTNTInternational = new("BEFR_TPGPostTNTInternational")
  BEFR_Taxipost = new("BEFR_Taxipost")
  BEFR_TrackedDeliveryFromAbroad = new("BEFR_TrackedDeliveryFromAbroad")
  BEFR_UPSInternational = new("BEFR_UPSInternational")
  BENL_DHLInternational = new("BENL_DHLInternational")
  BENL_DePostCertifiedShipping = new("BENL_DePostCertifiedShipping")
  BENL_DePostInternational = new("BENL_DePostInternational")
  BENL_DePostStandardShipping = new("BENL_DePostStandardShipping")
  BENL_DePostTaxipost24h = new("BENL_DePostTaxipost24h")
  BENL_DePostTaxipostLLS = new("BENL_DePostTaxipostLLS")
  BENL_DePostTaxipostSecur = new("BENL_DePostTaxipostSecur")
  BENL_DePostZendingAangetekend = new("BENL_DePostZendingAangetekend")
  BENL_DePostZendingAangetekendInternational = new("BENL_DePostZendingAangetekendInternational")
  BENL_DePostZendingNONPRIOR = new("BENL_DePostZendingNONPRIOR")
  BENL_DePostZendingNONPRIORInternational = new("BENL_DePostZendingNONPRIORInternational")
  BENL_DePostZendingPRIOR = new("BENL_DePostZendingPRIOR")
  BENL_DePostZendingPRIORInternational = new("BENL_DePostZendingPRIORInternational")
  BENL_EconomyDeliveryFromAbroad = new("BENL_EconomyDeliveryFromAbroad")
  BENL_ExpeditedInternational = new("BENL_ExpeditedInternational")
  BENL_ExpressDeliveryFromAbroad = new("BENL_ExpressDeliveryFromAbroad")
  BENL_FedExInternational = new("BENL_FedExInternational")
  BENL_KialaAfhaalpunt = new("BENL_KialaAfhaalpunt")
  BENL_KilopostPakje = new("BENL_KilopostPakje")
  BENL_KilopostPakjeInternational = new("BENL_KilopostPakjeInternational")
  BENL_LaPosteInternational = new("BENL_LaPosteInternational")
  BENL_Other = new("BENL_Other")
  BENL_OtherInternational = new("BENL_OtherInternational")
  BENL_OtherShippingMethods = new("BENL_OtherShippingMethods")
  BENL_ParcelPost = new("BENL_ParcelPost")
  BENL_Pickup = new("BENL_Pickup")
  BENL_PostInternationalRegistered = new("BENL_PostInternationalRegistered")
  BENL_PostInternationalStandard = new("BENL_PostInternationalStandard")
  BENL_PriorityDelivery = new("BENL_PriorityDelivery")
  BENL_RegisteredMail = new("BENL_RegisteredMail")
  BENL_StandardDelivery = new("BENL_StandardDelivery")
  BENL_StandardDeliveryFromAbroad = new("BENL_StandardDeliveryFromAbroad")
  BENL_StandardInternational = new("BENL_StandardInternational")
  BENL_TNTInternational = new("BENL_TNTInternational")
  BENL_TPGPostTNTInternational = new("BENL_TPGPostTNTInternational")
  BENL_Taxipost = new("BENL_Taxipost")
  BENL_TaxipostExpressverzending = new("BENL_TaxipostExpressverzending")
  BENL_TrackedDeliveryFromAbroad = new("BENL_TrackedDeliveryFromAbroad")
  BENL_UPSInternational = new("BENL_UPSInternational")
  BENL_VasteKostenStandaardVerzending = new("BENL_VasteKostenStandaardVerzending")
  BENL_VasteKostenVersneldeVerzending = new("BENL_VasteKostenVersneldeVerzending")
  BENL_VerzekerdeVerzending = new("BENL_VerzekerdeVerzending")
  BENL_VerzekerdeVerzendingInternational = new("BENL_VerzekerdeVerzendingInternational")
  CAFR_ExpeditedDelivery = new("CAFR_ExpeditedDelivery")
  CAFR_ExpeditedInternational = new("CAFR_ExpeditedInternational")
  CAFR_OtherInternational = new("CAFR_OtherInternational")
  CAFR_PostExpeditedParcel = new("CAFR_PostExpeditedParcel")
  CAFR_PostExpeditedParcelUSA = new("CAFR_PostExpeditedParcelUSA")
  CAFR_PostInternationalLetterPost = new("CAFR_PostInternationalLetterPost")
  CAFR_PostInternationalParcelAir = new("CAFR_PostInternationalParcelAir")
  CAFR_PostInternationalParcelSurface = new("CAFR_PostInternationalParcelSurface")
  CAFR_PostLettermail = new("CAFR_PostLettermail")
  CAFR_PostPriorityCourier = new("CAFR_PostPriorityCourier")
  CAFR_PostRegularParcel = new("CAFR_PostRegularParcel")
  CAFR_PostSmallPacketsUSA = new("CAFR_PostSmallPacketsUSA")
  CAFR_PostSmallPacketsUSAAir = new("CAFR_PostSmallPacketsUSAAir")
  CAFR_PostSmallPacketsUSAGround = new("CAFR_PostSmallPacketsUSAGround")
  CAFR_PostUSALetterPost = new("CAFR_PostUSALetterPost")
  CAFR_PostXpresspost = new("CAFR_PostXpresspost")
  CAFR_PostXpresspostInternational = new("CAFR_PostXpresspostInternational")
  CAFR_PostXpresspostUSA = new("CAFR_PostXpresspostUSA")
  CAFR_PurolatorInternational = new("CAFR_PurolatorInternational")
  CAFR_SmallPacketsInternational = new("CAFR_SmallPacketsInternational")
  CAFR_SmallPacketsInternationalAir = new("CAFR_SmallPacketsInternationalAir")
  CAFR_SmallPacketsInternationalGround = new("CAFR_SmallPacketsInternationalGround")
  CAFR_StandardDelivery = new("CAFR_StandardDelivery")
  CAFR_StandardInternational = new("CAFR_StandardInternational")
  CAFR_UPS3DaySelectUnitedStates = new("CAFR_UPS3DaySelectUnitedStates")
  CAFR_UPSExpeditedCanada = new("CAFR_UPSExpeditedCanada")
  CAFR_UPSExpeditedUnitedStates = new("CAFR_UPSExpeditedUnitedStates")
  CAFR_UPSExpressCanada = new("CAFR_UPSExpressCanada")
  CAFR_UPSExpressSaverCanada = new("CAFR_UPSExpressSaverCanada")
  CAFR_UPSExpressUnitedStates = new("CAFR_UPSExpressUnitedStates")
  CAFR_UPSStandardCanada = new("CAFR_UPSStandardCanada")
  CAFR_UPSStandardUnitedStates = new("CAFR_UPSStandardUnitedStates")
  CAFR_UPSWorldWideExpedited = new("CAFR_UPSWorldWideExpedited")
  CAFR_UPSWorldWideExpress = new("CAFR_UPSWorldWideExpress")
  CA_ExpeditedDelivery = new("CA_ExpeditedDelivery")
  CA_ExpeditedInternational = new("CA_ExpeditedInternational")
  CA_Freight = new("CA_Freight")
  CA_OtherInternational = new("CA_OtherInternational")
  CA_Pickup = new("CA_Pickup")
  CA_PostExpeditedFlatRateBox = new("CA_PostExpeditedFlatRateBox")
  CA_PostExpeditedFlatRateBoxUSA = new("CA_PostExpeditedFlatRateBoxUSA")
  CA_PostExpeditedParcel = new("CA_PostExpeditedParcel")
  CA_PostExpeditedParcelUSA = new("CA_PostExpeditedParcelUSA")
  CA_PostInternationalLetterPost = new("CA_PostInternationalLetterPost")
  CA_PostInternationalParcelAir = new("CA_PostInternationalParcelAir")
  CA_PostInternationalParcelSurface = new("CA_PostInternationalParcelSurface")
  CA_PostLettermail = new("CA_PostLettermail")
  CA_PostLightPacketInternational = new("CA_PostLightPacketInternational")
  CA_PostLightPacketUSA = new("CA_PostLightPacketUSA")
  CA_PostPriorityCourier = new("CA_PostPriorityCourier")
  CA_PostRegularParcel = new("CA_PostRegularParcel")
  CA_PostSmallPacketsUSA = new("CA_PostSmallPacketsUSA")
  CA_PostSmallPacketsUSAAir = new("CA_PostSmallPacketsUSAAir")
  CA_PostSmallPacketsUSAGround = new("CA_PostSmallPacketsUSAGround")
  CA_PostTrackedPacketsInternational = new("CA_PostTrackedPacketsInternational")
  CA_PostTrackedPacketsUSA = new("CA_PostTrackedPacketsUSA")
  CA_PostUSALetterPost = new("CA_PostUSALetterPost")
  CA_PostXpresspost = new("CA_PostXpresspost")
  CA_PostXpresspostInternational = new("CA_PostXpresspostInternational")
  CA_PostXpresspostUSA = new("CA_PostXpresspostUSA")
  CA_PriorityWorldwide = new("CA_PriorityWorldwide")
  CA_PurolatorInternational = new("CA_PurolatorInternational")
  CA_SmallPacketsInternational = new("CA_SmallPacketsInternational")
  CA_SmallPacketsInternationalAir = new("CA_SmallPacketsInternationalAir")
  CA_SmallPacketsInternationalGround = new("CA_SmallPacketsInternationalGround")
  CA_StandardDelivery = new("CA_StandardDelivery")
  CA_StandardInternational = new("CA_StandardInternational")
  CA_UPS3DaySelectUnitedStates = new("CA_UPS3DaySelectUnitedStates")
  CA_UPSExpeditedCanada = new("CA_UPSExpeditedCanada")
  CA_UPSExpeditedUnitedStates = new("CA_UPSExpeditedUnitedStates")
  CA_UPSExpressCanada = new("CA_UPSExpressCanada")
  CA_UPSExpressSaverCanada = new("CA_UPSExpressSaverCanada")
  CA_UPSExpressUnitedStates = new("CA_UPSExpressUnitedStates")
  CA_UPSStandardCanada = new("CA_UPSStandardCanada")
  CA_UPSStandardUnitedStates = new("CA_UPSStandardUnitedStates")
  CA_UPSWorldWideExpedited = new("CA_UPSWorldWideExpedited")
  CA_UPSWorldWideExpress = new("CA_UPSWorldWideExpress")
  CH_BitteTreffenSieEineAuswahl = new("CH_BitteTreffenSieEineAuswahl")
  CH_COD = new("CH_COD")
  CH_EconomyDeliveryFromAbroad = new("CH_EconomyDeliveryFromAbroad")
  CH_EconomySendungenInternational = new("CH_EconomySendungenInternational")
  CH_EinschreibenVersandInklEinschreibengebuhr = new("CH_EinschreibenVersandInklEinschreibengebuhr")
  CH_ExpeditedInternational = new("CH_ExpeditedInternational")
  CH_ExpressDeliveryFromAbroad = new("CH_ExpressDeliveryFromAbroad")
  CH_ExpressOrCourier = new("CH_ExpressOrCourier")
  CH_ExpressOrCourierInternational = new("CH_ExpressOrCourierInternational")
  CH_InsuredDispatch = new("CH_InsuredDispatch")
  CH_InsuredExpressOrCourier = new("CH_InsuredExpressOrCourier")
  CH_InsuredExpressOrCourierInternational = new("CH_InsuredExpressOrCourierInternational")
  CH_InsuredSpecialDispatch = new("CH_InsuredSpecialDispatch")
  CH_NachnahmeVersandInklNachnahmegebuhr = new("CH_NachnahmeVersandInklNachnahmegebuhr")
  CH_Pickup = new("CH_Pickup")
  CH_PrioritySendungenInternational = new("CH_PrioritySendungenInternational")
  CH_SonderversandZBSperrgutKFZ = new("CH_SonderversandZBSperrgutKFZ")
  CH_Sonstige = new("CH_Sonstige")
  CH_SonstigerVersandInternational = new("CH_SonstigerVersandInternational")
  CH_SonstigerVersandSieheArtikelbeschreibung = new("CH_SonstigerVersandSieheArtikelbeschreibung")
  CH_SpecialDispatch = new("CH_SpecialDispatch")
  CH_StandardDeliveryFromAbroad = new("CH_StandardDeliveryFromAbroad")
  CH_StandardDispatchAPost = new("CH_StandardDispatchAPost")
  CH_StandardDispatchBPost = new("CH_StandardDispatchBPost")
  CH_StandardInternational = new("CH_StandardInternational")
  CH_StandardversandAPostPriority = new("CH_StandardversandAPostPriority")
  CH_StandardversandBPostEconomy = new("CH_StandardversandBPostEconomy")
  CH_TrackedDeliveryFromAbroad = new("CH_TrackedDeliveryFromAbroad")
  CH_UnversicherterVersand = new("CH_UnversicherterVersand")
  CH_UrgentSendungenInternational = new("CH_UrgentSendungenInternational")
  CH_VersicherterSonderversandZBSperrgutKFZ = new("CH_VersicherterSonderversandZBSperrgutKFZ")
  CH_VersicherterVersand = new("CH_VersicherterVersand")
  CH_Writing = new("CH_Writing")
  CN_CODInternational = new("CN_CODInternational")
  CN_DeliveryCompanyExpress = new("CN_DeliveryCompanyExpress")
  CN_EMSInternational = new("CN_EMSInternational")
  CN_ExpeditedInternational = new("CN_ExpeditedInternational")
  CN_ExpressDeliveryOtherCities = new("CN_ExpressDeliveryOtherCities")
  CN_ExpressDeliverySameCity = new("CN_ExpressDeliverySameCity")
  CN_FastPostOffice = new("CN_FastPostOffice")
  CN_OtherInternational = new("CN_OtherInternational")
  CN_Others = new("CN_Others")
  CN_OthersInternational = new("CN_OthersInternational")
  CN_PersonalDelivery = new("CN_PersonalDelivery")
  CN_PostOfficeExpress = new("CN_PostOfficeExpress")
  CN_RegularLogisticsInternational = new("CN_RegularLogisticsInternational")
  CN_RegularPackage = new("CN_RegularPackage")
  CN_StandardInternational = new("CN_StandardInternational")
  CN_StandardMailingInternational = new("CN_StandardMailingInternational")
  CanadaPostExpeditedFlatRateBox = new("CanadaPostExpeditedFlatRateBox")
  CanadaPostExpeditedFlatRateBoxUSA = new("CanadaPostExpeditedFlatRateBoxUSA")
  Courier = new("Courier")
  CustomCode = new("CustomCode")
  DE_BitteTreffenSieEineAuswahl = new("DE_BitteTreffenSieEineAuswahl")
  DE_COD = new("DE_COD")
  DE_DHL2KGPaket = new("DE_DHL2KGPaket")
  DE_DHLPackchen = new("DE_DHLPackchen")
  DE_DHLPackchenInternational = new("DE_DHLPackchenInternational")
  DE_DHLPaeckchenPackstation = new("DE_DHLPaeckchenPackstation")
  DE_DHLPaket = new("DE_DHLPaket")
  DE_DHLPaketInternational = new("DE_DHLPaketInternational")
  DE_DHLPaketIntlExpress = new("DE_DHLPaketIntlExpress")
  DE_DHLPaketPackstation = new("DE_DHLPaketPackstation")
  DE_DHLPostpaket = new("DE_DHLPostpaket")
  DE_DHLPostpaketInternational = new("DE_DHLPostpaketInternational")
  DE_DHLStarPaeckchen = new("DE_DHLStarPaeckchen")
  DE_DPBriefInternational = new("DE_DPBriefInternational")
  DE_DPBuecherWarensendung = new("DE_DPBuecherWarensendung")
  DE_DPD = new("DE_DPD")
  DE_DPDInternational = new("DE_DPDInternational")
  DE_DeutschePostBrief = new("DE_DeutschePostBrief")
  DE_DeutschePostBriefInternational = new("DE_DeutschePostBriefInternational")
  DE_DeutschePostBriefIntlEcon = new("DE_DeutschePostBriefIntlEcon")
  DE_DeutschePostBriefIntlPri = new("DE_DeutschePostBriefIntlPri")
  DE_DeutschePostBriefLandInternational = new("DE_DeutschePostBriefLandInternational")
  DE_DeutschePostBriefLuftInternational = new("DE_DeutschePostBriefLuftInternational")
  DE_DeutschePostBuchersendung = new("DE_DeutschePostBuchersendung")
  DE_DeutschePostByendung = new("DE_DeutschePostByendung")
  DE_DeutschePostWarensendung = new("DE_DeutschePostWarensendung")
  DE_DeutschePostWarensendungInternational = new("DE_DeutschePostWarensendungInternational")
  DE_Einschreiben = new("DE_Einschreiben")
  DE_EinschreibenVersandInklEinschreibengebuhr = new("DE_EinschreibenVersandInklEinschreibengebuhr")
  DE_ExpeditedInternational = new("DE_ExpeditedInternational")
  DE_Express = new("DE_Express")
  DE_ExpressInternational = new("DE_ExpressInternational")
  DE_ExpressOrCourier = new("DE_ExpressOrCourier")
  DE_ExpressOrCourierInternational = new("DE_ExpressOrCourierInternational")
  DE_ExpressversandAusDemAusland = new("DE_ExpressversandAusDemAusland")
  DE_GLS = new("DE_GLS")
  DE_GLSInternational = new("DE_GLSInternational")
  DE_HermesPaket = new("DE_HermesPaket")
  DE_HermesPaketInternational = new("DE_HermesPaketInternational")
  DE_HermesPaketShop2Shop = new("DE_HermesPaketShop2Shop")
  DE_HermesPaketShop2ShopKaeufer = new("DE_HermesPaketShop2ShopKaeufer")
  DE_HermesPaketSperrgut = new("DE_HermesPaketSperrgut")
  DE_HermesPaketUnversichert = new("DE_HermesPaketUnversichert")
  DE_HermesPaketUnversichertInternational = new("DE_HermesPaketUnversichertInternational")
  DE_HermesPaketVersichert = new("DE_HermesPaketVersichert")
  DE_HermesPaketVersichertInternational = new("DE_HermesPaketVersichertInternational")
  DE_IloxxEuropaInternational = new("DE_IloxxEuropaInternational")
  DE_IloxxStandard = new("DE_IloxxStandard")
  DE_IloxxTransport = new("DE_IloxxTransport")
  DE_IloxxTransportInternational = new("DE_IloxxTransportInternational")
  DE_IloxxTransportXXL = new("DE_IloxxTransportXXL")
  DE_IloxxUbernachtExpress = new("DE_IloxxUbernachtExpress")
  DE_IloxxWorldWideInternational = new("DE_IloxxWorldWideInternational")
  DE_InsuredDispatch = new("DE_InsuredDispatch")
  DE_InsuredExpressOrCourier = new("DE_InsuredExpressOrCourier")
  DE_InsuredExpressOrCourierInternational = new("DE_InsuredExpressOrCourierInternational")
  DE_InsuredSpecialDispatch = new("DE_InsuredSpecialDispatch")
  DE_NachnahmeVersandInklNachnahmegebuhr = new("DE_NachnahmeVersandInklNachnahmegebuhr")
  DE_Nachname = new("DE_Nachname")
  DE_Paket = new("DE_Paket")
  DE_PaketInternational = new("DE_PaketInternational")
  DE_Pickup = new("DE_Pickup")
  DE_SonderversandZBMobelKFZ = new("DE_SonderversandZBMobelKFZ")
  DE_Sonstige = new("DE_Sonstige")
  DE_SonstigeDomestic = new("DE_SonstigeDomestic")
  DE_SonstigeInternational = new("DE_SonstigeInternational")
  DE_SonstigerVersandInternational = new("DE_SonstigerVersandInternational")
  DE_SparversandAusDemAusland = new("DE_SparversandAusDemAusland")
  DE_SpecialDelivery = new("DE_SpecialDelivery")
  DE_SpecialDispatch = new("DE_SpecialDispatch")
  DE_StandardDispatch = new("DE_StandardDispatch")
  DE_StandardInternational = new("DE_StandardInternational")
  DE_StandardversandAusDemAusland = new("DE_StandardversandAusDemAusland")
  DE_TrackedDeliveryFromAbroad = new("DE_TrackedDeliveryFromAbroad")
  DE_UPS = new("DE_UPS")
  DE_UPSInternational = new("DE_UPSInternational")
  DE_UnversicherterExpressVersandInternational = new("DE_UnversicherterExpressVersandInternational")
  DE_UnversicherterVersand = new("DE_UnversicherterVersand")
  DE_UnversicherterVersandInternational = new("DE_UnversicherterVersandInternational")
  DE_VersicherterExpressVersandInternational = new("DE_VersicherterExpressVersandInternational")
  DE_VersicherterSonderversandZBMobelKFZ = new("DE_VersicherterSonderversandZBMobelKFZ")
  DE_VersicherterVersandInternational = new("DE_VersicherterVersandInternational")
  DE_Writing = new("DE_Writing")
  DE_eBayDHLPaeckchen = new("DE_eBayDHLPaeckchen")
  DE_eBayDHLPaket24x7 = new("DE_eBayDHLPaket24x7")
  DE_eBayHermesPaketShop2Shop = new("DE_eBayHermesPaketShop2Shop")
  DE_eBayHermesPaketShop2ShopKaeufer = new("DE_eBayHermesPaketShop2ShopKaeufer")
  DE_eBayHermesPaketSperrgutShop2Shop = new("DE_eBayHermesPaketSperrgutShop2Shop")
  DE_iLoxxStandardInternational = new("DE_iLoxxStandardInternational")
  DE_iLoxxTransportXXLInternational = new("DE_iLoxxTransportXXLInternational")
  DE_iLoxxUbernachtExpressInternational = new("DE_iLoxxUbernachtExpressInternational")
  Delivery = new("Delivery")
  EBayNowImmediateDelivery = new("eBayNowImmediateDelivery")
  ES_CartasInternacionalesDeMas20 = new("ES_CartasInternacionalesDeMas20")
  ES_CartasInternacionalesHasta20 = new("ES_CartasInternacionalesHasta20")
  ES_CartasNacionalesDeMas20 = new("ES_CartasNacionalesDeMas20")
  ES_CartasNacionalesHasta20 = new("ES_CartasNacionalesHasta20")
  ES_CartasPostalInternational = new("ES_CartasPostalInternational")
  ES_ENTREGA_KIALA_8KG = new("ES_ENTREGA_KIALA_8KG")
  ES_EconomyDeliveryFromAbroad = new("ES_EconomyDeliveryFromAbroad")
  ES_EconomyPacketInternational = new("ES_EconomyPacketInternational")
  ES_EmsPostalExpressInternational = new("ES_EmsPostalExpressInternational")
  ES_ExpeditedInternational = new("ES_ExpeditedInternational")
  ES_ExpressDeliveryFromAbroad = new("ES_ExpressDeliveryFromAbroad")
  ES_OtherInternational = new("ES_OtherInternational")
  ES_Otros = new("ES_Otros")
  ES_PaqueteAzulDeMas2kg = new("ES_PaqueteAzulDeMas2kg")
  ES_PaqueteAzulHasta2kg = new("ES_PaqueteAzulHasta2kg")
  ES_PaqueteInternacionalEconomico = new("ES_PaqueteInternacionalEconomico")
  ES_Pickup = new("ES_Pickup")
  ES_StandardDeliveryFromAbroad = new("ES_StandardDeliveryFromAbroad")
  ES_StandardInternational = new("ES_StandardInternational")
  ES_TrackedDeliveryFromAbroad = new("ES_TrackedDeliveryFromAbroad")
  ES_Urgente = new("ES_Urgente")
  EconomyShippingFromOutsideUS = new("EconomyShippingFromOutsideUS")
  ExpeditedInternational = new("ExpeditedInternational")
  ExpeditedShippingFromOutsideUS = new("ExpeditedShippingFromOutsideUS")
  FR_AuteModeDenvoiDeColis = new("FR_AuteModeDenvoiDeColis")
  FR_Autre = new("FR_Autre")
  FR_Chrono10 = new("FR_Chrono10")
  FR_Chrono13 = new("FR_Chrono13")
  FR_Chrono18 = new("FR_Chrono18")
  FR_Chronopost = new("FR_Chronopost")
  FR_ChronopostChronoRelais = new("FR_ChronopostChronoRelais")
  FR_ChronopostClassicInternational = new("FR_ChronopostClassicInternational")
  FR_ChronopostExpressInternational = new("FR_ChronopostExpressInternational")
  FR_ChronopostPremiumInternational = new("FR_ChronopostPremiumInternational")
  FR_ChronoposteInternationalClassic = new("FR_ChronoposteInternationalClassic")
  FR_Colieco = new("FR_Colieco")
  FR_ColiposteColissimo = new("FR_ColiposteColissimo")
  FR_ColiposteColissimoDirect = new("FR_ColiposteColissimoDirect")
  FR_ColiposteColissimoRecommended = new("FR_ColiposteColissimoRecommended")
  FR_DHLExpressEuropack = new("FR_DHLExpressEuropack")
  FR_DHLInternational = new("FR_DHLInternational")
  FR_Ecopli = new("FR_Ecopli")
  FR_ExpeditedInternational = new("FR_ExpeditedInternational")
  FR_KIALA_DELIVERY = new("FR_KIALA_DELIVERY")
  FR_LaPosteColisEconomiqueInternational = new("FR_LaPosteColisEconomiqueInternational")
  FR_LaPosteColissimoEmballageInternational = new("FR_LaPosteColissimoEmballageInternational")
  FR_LaPosteColissimoInternational = new("FR_LaPosteColissimoInternational")
  FR_LaPosteInternationalEconomyCourier = new("FR_LaPosteInternationalEconomyCourier")
  FR_LaPosteInternationalPriorityCourier = new("FR_LaPosteInternationalPriorityCourier")
  FR_LaPosteLetterMax = new("FR_LaPosteLetterMax")
  FR_OtherInternational = new("FR_OtherInternational")
  FR_Pickup = new("FR_Pickup")
  FR_PostOfficeLetter = new("FR_PostOfficeLetter")
  FR_PostOfficeLetterFollowed = new("FR_PostOfficeLetterFollowed")
  FR_PostOfficeLetterRecommended = new("FR_PostOfficeLetterRecommended")
  FR_RemiseEnMainPropre = new("FR_RemiseEnMainPropre")
  FR_StandardInternational = new("FR_StandardInternational")
  FR_TrackedDeliveryFromAbroad = new("FR_TrackedDeliveryFromAbroad")
  FR_UPSExpressInternational = new("FR_UPSExpressInternational")
  FR_UPSStandard = new("FR_UPSStandard")
  FR_UPSStandardAgainstRefund = new("FR_UPSStandardAgainstRefund")
  FR_UPSStandardInternational = new("FR_UPSStandardInternational")
  FedEx2Day = new("FedEx2Day")
  FedExExpressSaver = new("FedExExpressSaver")
  FedExGround = new("FedExGround")
  FedExGroundDisabled = new("FedExGroundDisabled")
  FedExHomeDelivery = new("FedExHomeDelivery")
  FedExHomeDeliveryDisabled = new("FedExHomeDeliveryDisabled")
  FedExInternationalEconomy = new("FedExInternationalEconomy")
  FedExInternationalFirst = new("FedExInternationalFirst")
  FedExInternationalGround = new("FedExInternationalGround")
  FedExInternationalPriority = new("FedExInternationalPriority")
  FedExPriorityOvernight = new("FedExPriorityOvernight")
  FedExStandardOvernight = new("FedExStandardOvernight")
  Freight = new("Freight")
  FreightOtherShipping = new("FreightOtherShipping")
  FreightShipping = new("FreightShipping")
  FreightShippingInternational = new("FreightShippingInternational")
  HK_DomesticRegularShipping = new("HK_DomesticRegularShipping")
  HK_DomesticSpecialShipping = new("HK_DomesticSpecialShipping")
  HK_InternationalRegularShipping = new("HK_InternationalRegularShipping")
  HK_InternationalSpecialShipping = new("HK_InternationalSpecialShipping")
  HK_LocalCourier = new("HK_LocalCourier")
  HK_LocalPickUpOnly = new("HK_LocalPickUpOnly")
  IE_CollectionInPerson = new("IE_CollectionInPerson")
  IE_CollectionInPersonInternational = new("IE_CollectionInPersonInternational")
  IE_EMSSDSCourier = new("IE_EMSSDSCourier")
  IE_EMSSDSCourierInternational = new("IE_EMSSDSCourierInternational")
  IE_EconomyDeliveryFromAbroad = new("IE_EconomyDeliveryFromAbroad")
  IE_EconomySDSCourier = new("IE_EconomySDSCourier")
  IE_EconomySDSCourierInternational = new("IE_EconomySDSCourierInternational")
  IE_ExpeditedInternationalFlatRatePostage = new("IE_ExpeditedInternationalFlatRatePostage")
  IE_ExpressDeliveryFromAbroad = new("IE_ExpressDeliveryFromAbroad")
  IE_FirstClassLetterService = new("IE_FirstClassLetterService")
  IE_InternationalEconomyService = new("IE_InternationalEconomyService")
  IE_InternationalPriorityService = new("IE_InternationalPriorityService")
  IE_OtherCourier = new("IE_OtherCourier")
  IE_OtherCourierInternational = new("IE_OtherCourierInternational")
  IE_OtherInternationalPostage = new("IE_OtherInternationalPostage")
  IE_RegisteredPost = new("IE_RegisteredPost")
  IE_SellersStandardRate = new("IE_SellersStandardRate")
  IE_SellersStandardRateInternational = new("IE_SellersStandardRateInternational")
  IE_StandardDeliveryFromAbroad = new("IE_StandardDeliveryFromAbroad")
  IE_StandardInternationalFlatRatePostage = new("IE_StandardInternationalFlatRatePostage")
  IE_SwiftPostExpressInternational = new("IE_SwiftPostExpressInternational")
  IE_SwiftPostInternational = new("IE_SwiftPostInternational")
  IE_SwiftPostNational = new("IE_SwiftPostNational")
  IE_TrackedDeliveryFromAbroad = new("IE_TrackedDeliveryFromAbroad")
  IN_BuyerPicksUpAndPays = new("IN_BuyerPicksUpAndPays")
  IN_Courier = new("IN_Courier")
  IN_ExpeditedInternational = new("IN_ExpeditedInternational")
  IN_Express = new("IN_Express")
  IN_FlatRateCOD = new("IN_FlatRateCOD")
  IN_LocalCOD = new("IN_LocalCOD")
  IN_NationalCOD = new("IN_NationalCOD")
  IN_OtherInternational = new("IN_OtherInternational")
  IN_Regular = new("IN_Regular")
  IN_StandardInternational = new("IN_StandardInternational")
  IT_ExpeditedInternational = new("IT_ExpeditedInternational")
  IT_ExpressCourier = new("IT_ExpressCourier")
  IT_ExpressPackageMaxi = new("IT_ExpressPackageMaxi")
  IT_InsuredMail = new("IT_InsuredMail")
  IT_MailRegisteredLetter = new("IT_MailRegisteredLetter")
  IT_MailRegisteredLetterWithMark = new("IT_MailRegisteredLetterWithMark")
  IT_OtherInternational = new("IT_OtherInternational")
  IT_Pickup = new("IT_Pickup")
  IT_PriorityMail = new("IT_PriorityMail")
  IT_QuickMail = new("IT_QuickMail")
  IT_QuickPackage1 = new("IT_QuickPackage1")
  IT_QuickPackage3 = new("IT_QuickPackage3")
  IT_RegularMail = new("IT_RegularMail")
  IT_RegularPackage = new("IT_RegularPackage")
  IT_StandardInternational = new("IT_StandardInternational")
  IT_TrackedDeliveryFromAbroad = new("IT_TrackedDeliveryFromAbroad")
  InternationalNotSelected = new("InternationalNotSelected")
  InternationalPriorityShipping = new("InternationalPriorityShipping")
  LocalDelivery = new("LocalDelivery")
  NL_DHLInternational = new("NL_DHLInternational")
  NL_DPDGBRInternational = new("NL_DPDGBRInternational")
  NL_EconomyDeliveryFromAbroad = new("NL_EconomyDeliveryFromAbroad")
  NL_ExpeditedInternational = new("NL_ExpeditedInternational")
  NL_ExpressDeliveryFromAbroad = new("NL_ExpressDeliveryFromAbroad")
  NL_FedExInternational = new("NL_FedExInternational")
  NL_GLSBusinessInternational = new("NL_GLSBusinessInternational")
  NL_Other = new("NL_Other")
  NL_OtherInternational = new("NL_OtherInternational")
  NL_ParcelPost = new("NL_ParcelPost")
  NL_Pickup = new("NL_Pickup")
  NL_RegisteredMail = new("NL_RegisteredMail")
  NL_StandardDelivery = new("NL_StandardDelivery")
  NL_StandardDeliveryFromAbroad = new("NL_StandardDeliveryFromAbroad")
  NL_StandardInternational = new("NL_StandardInternational")
  NL_TPGPostTNTInternational = new("NL_TPGPostTNTInternational")
  NL_TrackedDeliveryFromAbroad = new("NL_TrackedDeliveryFromAbroad")
  NL_UPSInternational = new("NL_UPSInternational")
  NotSelected = new("NotSelected")
  Other = new("Other")
  OtherInternational = new("OtherInternational")
  PL_DHLInternational = new("PL_DHLInternational")
  PL_DomesticRegular = new("PL_DomesticRegular")
  PL_DomesticSpecial = new("PL_DomesticSpecial")
  PL_EconomyDeliveryFromAbroad = new("PL_EconomyDeliveryFromAbroad")
  PL_ExpressDeliveryFromAbroad = new("PL_ExpressDeliveryFromAbroad")
  PL_InternationalRegular = new("PL_InternationalRegular")
  PL_InternationalSpecial = new("PL_InternationalSpecial")
  PL_Pickup = new("PL_Pickup")
  PL_StandardDeliveryFromAbroad = new("PL_StandardDeliveryFromAbroad")
  PL_TrackedDeliveryFromAbroad = new("PL_TrackedDeliveryFromAbroad")
  PL_UPSInternational = new("PL_UPSInternational")
  Pickup = new("Pickup")
  SG_Delivery = new("SG_Delivery")
  SG_DomesticNonStandardMail = new("SG_DomesticNonStandardMail")
  SG_DomesticSpeedpostIslandwide = new("SG_DomesticSpeedpostIslandwide")
  SG_DomesticStandardMail = new("SG_DomesticStandardMail")
  SG_InternationalCourier = new("SG_InternationalCourier")
  SG_InternationalExpressMailService = new("SG_InternationalExpressMailService")
  SG_InternationalStandardMail = new("SG_InternationalStandardMail")
  SG_LocalCourier = new("SG_LocalCourier")
  SG_LocalPickUpOnly = new("SG_LocalPickUpOnly")
  SameDayShipping = new("SameDayShipping")
  ShippingMethodExpress = new("ShippingMethodExpress")
  ShippingMethodOvernight = new("ShippingMethodOvernight")
  ShippingMethodStandard = new("ShippingMethodStandard")
  StandardInternational = new("StandardInternational")
  StandardShippingFromOutsideUS = new("StandardShippingFromOutsideUS")
  TW_COD = new("TW_COD")
  TW_CPInternationalEMS = new("TW_CPInternationalEMS")
  TW_CPInternationalLetterPost = new("TW_CPInternationalLetterPost")
  TW_CPInternationalOceanShippingParcel = new("TW_CPInternationalOceanShippingParcel")
  TW_CPInternationalParcelPost = new("TW_CPInternationalParcelPost")
  TW_CPInternationalRegisteredLetterPost = new("TW_CPInternationalRegisteredLetterPost")
  TW_CPInternationalRegisteredParcelPost = new("TW_CPInternationalRegisteredParcelPost")
  TW_DwellingMatchCOD = new("TW_DwellingMatchCOD")
  TW_DwellingMatchPost = new("TW_DwellingMatchPost")
  TW_ExpeditedInternationalFixedRate = new("TW_ExpeditedInternationalFixedRate")
  TW_ExpressMail = new("TW_ExpressMail")
  TW_FedExInternationalEconomy = new("TW_FedExInternationalEconomy")
  TW_FedExInternationalPriority = new("TW_FedExInternationalPriority")
  TW_Other = new("TW_Other")
  TW_OtherInternational = new("TW_OtherInternational")
  TW_ParcelPost = new("TW_ParcelPost")
  TW_RegisteredMail = new("TW_RegisteredMail")
  TW_SelfPickup = new("TW_SelfPickup")
  TW_StandardInternationalFixedRate = new("TW_StandardInternationalFixedRate")
  TW_UPSWorldwideExpedited = new("TW_UPSWorldwideExpedited")
  TW_UPSWorldwideExpress = new("TW_UPSWorldwideExpress")
  TW_UPSWorldwideExpressPlus = new("TW_UPSWorldwideExpressPlus")
  TW_UnregisteredMail = new("TW_UnregisteredMail")
  UK_CollectDropAtStoreDeliveryToDoor = new("UK_CollectDropAtStoreDeliveryToDoor")
  UK_CollectInPerson = new("UK_CollectInPerson")
  UK_CollectInPersonInternational = new("UK_CollectInPersonInternational")
  UK_EconomyShippingFromOutside = new("UK_EconomyShippingFromOutside")
  UK_ExpeditedInternationalFlatRatePostage = new("UK_ExpeditedInternationalFlatRatePostage")
  UK_ExpeditedShippingFromOutside = new("UK_ExpeditedShippingFromOutside")
  UK_IntlTrackedPostage = new("UK_IntlTrackedPostage")
  UK_OtherCourier = new("UK_OtherCourier")
  UK_OtherCourier24 = new("UK_OtherCourier24")
  UK_OtherCourier3Days = new("UK_OtherCourier3Days")
  UK_OtherCourier48 = new("UK_OtherCourier48")
  UK_OtherCourier5Days = new("UK_OtherCourier5Days")
  UK_OtherCourierOrDeliveryInternational = new("UK_OtherCourierOrDeliveryInternational")
  UK_OtherInternationalPostage = new("UK_OtherInternationalPostage")
  UK_ParcelForceEuro48International = new("UK_ParcelForceEuro48International")
  UK_ParcelForceInternationalDatapost = new("UK_ParcelForceInternationalDatapost")
  UK_ParcelForceInternationalScheduled = new("UK_ParcelForceInternationalScheduled")
  UK_ParcelForceIntlEconomy = new("UK_ParcelForceIntlEconomy")
  UK_ParcelForceIntlExpress = new("UK_ParcelForceIntlExpress")
  UK_ParcelForceIntlValue = new("UK_ParcelForceIntlValue")
  UK_ParcelForceIreland24International = new("UK_ParcelForceIreland24International")
  UK_Parcelforce24 = new("UK_Parcelforce24")
  UK_Parcelforce48 = new("UK_Parcelforce48")
  UK_RoyalMailAirmailInternational = new("UK_RoyalMailAirmailInternational")
  UK_RoyalMailAirsureInternational = new("UK_RoyalMailAirsureInternational")
  UK_RoyalMailFirstClassRecorded = new("UK_RoyalMailFirstClassRecorded")
  UK_RoyalMailFirstClassStandard = new("UK_RoyalMailFirstClassStandard")
  UK_RoyalMailHMForcesMailInternational = new("UK_RoyalMailHMForcesMailInternational")
  UK_RoyalMailInternationalSignedFor = new("UK_RoyalMailInternationalSignedFor")
  UK_RoyalMailNextDay = new("UK_RoyalMailNextDay")
  UK_RoyalMailSecondClassRecorded = new("UK_RoyalMailSecondClassRecorded")
  UK_RoyalMailSecondClassStandard = new("UK_RoyalMailSecondClassStandard")
  UK_RoyalMailSpecialDelivery = new("UK_RoyalMailSpecialDelivery")
  UK_RoyalMailSpecialDelivery9am = new("UK_RoyalMailSpecialDelivery9am")
  UK_RoyalMailSpecialDeliveryNextDay = new("UK_RoyalMailSpecialDeliveryNextDay")
  UK_RoyalMailStandardParcel = new("UK_RoyalMailStandardParcel")
  UK_RoyalMailSurfaceMailInternational = new("UK_RoyalMailSurfaceMailInternational")
  UK_RoyalMailTracked = new("UK_RoyalMailTracked")
  UK_SellersStandardInternationalRate = new("UK_SellersStandardInternationalRate")
  UK_SellersStandardRate = new("UK_SellersStandardRate")
  UK_StandardInternationalFlatRatePostage = new("UK_StandardInternationalFlatRatePostage")
  UK_StandardShippingFromOutside = new("UK_StandardShippingFromOutside")
  UK_TrackedDeliveryFromAbroad = new("UK_TrackedDeliveryFromAbroad")
  UK_myHermesDoorToDoorService = new("UK_myHermesDoorToDoorService")
  UPS2DayAirAM = new("UPS2DayAirAM")
  UPS2ndDay = new("UPS2ndDay")
  UPS3rdDay = new("UPS3rdDay")
  UPSGround = new("UPSGround")
  UPSNextDay = new("UPSNextDay")
  UPSNextDayAir = new("UPSNextDayAir")
  UPSStandardToCanada = new("UPSStandardToCanada")
  UPSWorldWideExpedited = new("UPSWorldWideExpedited")
  UPSWorldWideExpress = new("UPSWorldWideExpress")
  UPSWorldWideExpressBox10kg = new("UPSWorldWideExpressBox10kg")
  UPSWorldWideExpressBox25kg = new("UPSWorldWideExpressBox25kg")
  UPSWorldWideExpressPlus = new("UPSWorldWideExpressPlus")
  UPSWorldWideExpressPlusBox10kg = new("UPSWorldWideExpressPlusBox10kg")
  UPSWorldWideExpressPlusBox25kg = new("UPSWorldWideExpressPlusBox25kg")
  UPSWorldwideSaver = new("UPSWorldwideSaver")
  USPSAirmailLetter = new("USPSAirmailLetter")
  USPSAirmailParcel = new("USPSAirmailParcel")
  USPSEconomyLetter = new("USPSEconomyLetter")
  USPSEconomyParcel = new("USPSEconomyParcel")
  USPSExpressFlatRateEnvelope = new("USPSExpressFlatRateEnvelope")
  USPSExpressMail = new("USPSExpressMail")
  USPSExpressMailFlatRateBox = new("USPSExpressMailFlatRateBox")
  USPSExpressMailFlatRateEnvelope = new("USPSExpressMailFlatRateEnvelope")
  USPSExpressMailInternational = new("USPSExpressMailInternational")
  USPSExpressMailInternationalFlatRateBox = new("USPSExpressMailInternationalFlatRateBox")
  USPSExpressMailInternationalFlatRateEnvelope = new("USPSExpressMailInternationalFlatRateEnvelope")
  USPSExpressMailInternationalLegalFlatRateEnvelope = new("USPSExpressMailInternationalLegalFlatRateEnvelope")
  USPSExpressMailInternationalPaddedFlatRateEnvelope = new("USPSExpressMailInternationalPaddedFlatRateEnvelope")
  USPSExpressMailLegalFlatRateEnvelope = new("USPSExpressMailLegalFlatRateEnvelope")
  USPSExpressMailPaddedFlatRateEnvelope = new("USPSExpressMailPaddedFlatRateEnvelope")
  USPSFirstClass = new("USPSFirstClass")
  USPSFirstClassMailInternational = new("USPSFirstClassMailInternational")
  USPSGlobalExpress = new("USPSGlobalExpress")
  USPSGlobalExpressGuaranteed = new("USPSGlobalExpressGuaranteed")
  USPSGlobalPriority = new("USPSGlobalPriority")
  USPSGlobalPriorityLargeEnvelope = new("USPSGlobalPriorityLargeEnvelope")
  USPSGlobalPrioritySmallEnvelope = new("USPSGlobalPrioritySmallEnvelope")
  USPSGround = new("USPSGround")
  USPSMedia = new("USPSMedia")
  USPSParcel = new("USPSParcel")
  USPSPriority = new("USPSPriority")
  USPSPriorityFlatRateBox = new("USPSPriorityFlatRateBox")
  USPSPriorityFlatRateEnvelope = new("USPSPriorityFlatRateEnvelope")
  USPSPriorityMailFlatRateBox = new("USPSPriorityMailFlatRateBox")
  USPSPriorityMailFlatRateEnvelope = new("USPSPriorityMailFlatRateEnvelope")
  USPSPriorityMailInternational = new("USPSPriorityMailInternational")
  USPSPriorityMailInternationalFlatRateBox = new("USPSPriorityMailInternationalFlatRateBox")
  USPSPriorityMailInternationalFlatRateEnvelope = new("USPSPriorityMailInternationalFlatRateEnvelope")
  USPSPriorityMailInternationalLargeFlatRateBox = new("USPSPriorityMailInternationalLargeFlatRateBox")
  USPSPriorityMailInternationalLegalFlatRateEnvelope = new("USPSPriorityMailInternationalLegalFlatRateEnvelope")
  USPSPriorityMailInternationalPaddedFlatRateEnvelope = new("USPSPriorityMailInternationalPaddedFlatRateEnvelope")
  USPSPriorityMailInternationalSmallFlatRateBox = new("USPSPriorityMailInternationalSmallFlatRateBox")
  USPSPriorityMailLargeFlatRateBox = new("USPSPriorityMailLargeFlatRateBox")
  USPSPriorityMailLegalFlatRateEnvelope = new("USPSPriorityMailLegalFlatRateEnvelope")
  USPSPriorityMailPaddedFlatRateEnvelope = new("USPSPriorityMailPaddedFlatRateEnvelope")
  USPSPriorityMailRegionalBoxA = new("USPSPriorityMailRegionalBoxA")
  USPSPriorityMailRegionalBoxB = new("USPSPriorityMailRegionalBoxB")
  USPSPriorityMailRegionalBoxC = new("USPSPriorityMailRegionalBoxC")
  USPSPriorityMailSmallFlatRateBox = new("USPSPriorityMailSmallFlatRateBox")
  USPSStandardPost = new("USPSStandardPost")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingServiceType
class ShippingServiceType < ::String
  Domestic = new("Domestic")
  International = new("International")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTrackingEventCodeType
class ShippingTrackingEventCodeType < ::String
  CustomCode = new("CustomCode")
  ValetPickedUpOrder = new("ValetPickedUpOrder")
  ValetReadyForPickup = new("ValetReadyForPickup")
end

# {urn:ebay:apis:eBLBaseComponents}ShippingTypeCodeType
class ShippingTypeCodeType < ::String
  Calculated = new("Calculated")
  CalculatedDomesticFlatInternational = new("CalculatedDomesticFlatInternational")
  CustomCode = new("CustomCode")
  Flat = new("Flat")
  FlatDomesticCalculatedInternational = new("FlatDomesticCalculatedInternational")
  Free = new("Free")
  Freight = new("Freight")
  FreightFlat = new("FreightFlat")
  NotSpecified = new("NotSpecified")
end

# {urn:ebay:apis:eBLBaseComponents}SimpleItemSortCodeType
class SimpleItemSortCodeType < ::String
  BestMatch = new("BestMatch")
  BestMatchCategoryGroup = new("BestMatchCategoryGroup")
  BidCount = new("BidCount")
  Country = new("Country")
  CurrentBid = new("CurrentBid")
  CustomCode = new("CustomCode")
  Distance = new("Distance")
  EndTime = new("EndTime")
  PricePlusShipping = new("PricePlusShipping")
  StartDate = new("StartDate")
end

# {urn:ebay:apis:eBLBaseComponents}SiteCodeType
class SiteCodeType < ::String
  Australia = new("Australia")
  Austria = new("Austria")
  Belgium_Dutch = new("Belgium_Dutch")
  Belgium_French = new("Belgium_French")
  Canada = new("Canada")
  CanadaFrench = new("CanadaFrench")
  China = new("China")
  CustomCode = new("CustomCode")
  EBayMotors = new("eBayMotors")
  France = new("France")
  Germany = new("Germany")
  HongKong = new("HongKong")
  India = new("India")
  Ireland = new("Ireland")
  Italy = new("Italy")
  Malaysia = new("Malaysia")
  Netherlands = new("Netherlands")
  Philippines = new("Philippines")
  Poland = new("Poland")
  Russia = new("Russia")
  Singapore = new("Singapore")
  Spain = new("Spain")
  Sweden = new("Sweden")
  Switzerland = new("Switzerland")
  Taiwan = new("Taiwan")
  UK = new("UK")
  US = new("US")
end

# {urn:ebay:apis:eBLBaseComponents}SiteIDFilterCodeType
class SiteIDFilterCodeType < ::String
  AvailableInCountryImplied = new("AvailableInCountryImplied")
  BelgiumListing = new("BelgiumListing")
  CustomCode = new("CustomCode")
  ListedInCurrencyImplied = new("ListedInCurrencyImplied")
  LocatedInCountryImplied = new("LocatedInCountryImplied")
  SiteImplied = new("SiteImplied")
end

# {urn:ebay:apis:eBLBaseComponents}SkypeContactOptionCodeType
class SkypeContactOptionCodeType < ::String
  Chat = new("Chat")
  CustomCode = new("CustomCode")
  Voice = new("Voice")
end

# {urn:ebay:apis:eBLBaseComponents}SortOrderCodeType
class SortOrderCodeType < ::String
  Ascending = new("Ascending")
  CustomCode = new("CustomCode")
  Descending = new("Descending")
end

# {urn:ebay:apis:eBLBaseComponents}StatusCodeType
class StatusCodeType < ::String
  Active = new("Active")
  CustomCode = new("CustomCode")
  Inactive = new("Inactive")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCategoryUpdateActionCodeType
class StoreCategoryUpdateActionCodeType < ::String
  Add = new("Add")
  CustomCode = new("CustomCode")
  Delete = new("Delete")
  Move = new("Move")
  Rename = new("Rename")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomHeaderLayoutCodeType
class StoreCustomHeaderLayoutCodeType < ::String
  CustomCode = new("CustomCode")
  CustomHeaderShown = new("CustomHeaderShown")
  NoHeader = new("NoHeader")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderDisplayCodeType
class StoreCustomListingHeaderDisplayCodeType < ::String
  CustomCode = new("CustomCode")
  Full = new("Full")
  FullAndLeftNavigationBar = new("FullAndLeftNavigationBar")
  None = new("None")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomListingHeaderLinkCodeType
class StoreCustomListingHeaderLinkCodeType < ::String
  AboutMePage = new("AboutMePage")
  CustomCategory = new("CustomCategory")
  CustomCode = new("CustomCode")
  CustomPage = new("CustomPage")
  None = new("None")
end

# {urn:ebay:apis:eBLBaseComponents}StoreCustomPageStatusCodeType
class StoreCustomPageStatusCodeType < ::String
  Active = new("Active")
  CustomCode = new("CustomCode")
  Delete = new("Delete")
  Inactive = new("Inactive")
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontFaceCodeType
class StoreFontFaceCodeType < ::String
  Arial = new("Arial")
  Courier = new("Courier")
  CustomCode = new("CustomCode")
  Times = new("Times")
  Verdana = new("Verdana")
end

# {urn:ebay:apis:eBLBaseComponents}StoreFontSizeCodeType
class StoreFontSizeCodeType < ::String
  CustomCode = new("CustomCode")
  L = new("L")
  M = new("M")
  S = new("S")
  XL = new("XL")
  XS = new("XS")
  XXL = new("XXL")
  XXS = new("XXS")
end

# {urn:ebay:apis:eBLBaseComponents}StoreHeaderStyleCodeType
class StoreHeaderStyleCodeType < ::String
  CustomCode = new("CustomCode")
  Full = new("Full")
  Minimized = new("Minimized")
end

# {urn:ebay:apis:eBLBaseComponents}StoreItemListLayoutCodeType
class StoreItemListLayoutCodeType < ::String
  CustomCode = new("CustomCode")
  GalleryView = new("GalleryView")
  ListView = new("ListView")
end

# {urn:ebay:apis:eBLBaseComponents}StoreItemListSortOrderCodeType
class StoreItemListSortOrderCodeType < ::String
  CustomCode = new("CustomCode")
  EndingFirst = new("EndingFirst")
  HighestPriced = new("HighestPriced")
  HighestPricedPlusShipping = new("HighestPricedPlusShipping")
  LowestPriced = new("LowestPriced")
  LowestPricedPlusShipping = new("LowestPricedPlusShipping")
  NewlyListed = new("NewlyListed")
end

# {urn:ebay:apis:eBLBaseComponents}StoreSubscriptionLevelCodeType
class StoreSubscriptionLevelCodeType < ::String
  Anchor = new("Anchor")
  Basic = new("Basic")
  Close = new("Close")
  CustomCode = new("CustomCode")
  Featured = new("Featured")
end

# {urn:ebay:apis:eBLBaseComponents}StringMatchCodeType
class StringMatchCodeType < ::String
  Contains = new("Contains")
  CustomCode = new("CustomCode")
  StartsWith = new("StartsWith")
end

# {urn:ebay:apis:eBLBaseComponents}SummaryFrequencyCodeType
class SummaryFrequencyCodeType < ::String
  CustomCode = new("CustomCode")
  Every31Days = new("Every31Days")
  Every60Days = new("Every60Days")
  EveryFriday = new("EveryFriday")
  EveryMonday = new("EveryMonday")
  EverySaturday = new("EverySaturday")
  EverySunday = new("EverySunday")
  EveryThursday = new("EveryThursday")
  EveryTuesday = new("EveryTuesday")
  EveryWednesday = new("EveryWednesday")
  MonthlyOn10th = new("MonthlyOn10th")
  MonthlyOn11th = new("MonthlyOn11th")
  MonthlyOn12th = new("MonthlyOn12th")
  MonthlyOn13th = new("MonthlyOn13th")
  MonthlyOn14th = new("MonthlyOn14th")
  MonthlyOn15th = new("MonthlyOn15th")
  MonthlyOn16th = new("MonthlyOn16th")
  MonthlyOn17th = new("MonthlyOn17th")
  MonthlyOn18th = new("MonthlyOn18th")
  MonthlyOn19th = new("MonthlyOn19th")
  MonthlyOn1st = new("MonthlyOn1st")
  MonthlyOn20th = new("MonthlyOn20th")
  MonthlyOn21st = new("MonthlyOn21st")
  MonthlyOn22nd = new("MonthlyOn22nd")
  MonthlyOn23rd = new("MonthlyOn23rd")
  MonthlyOn24th = new("MonthlyOn24th")
  MonthlyOn25th = new("MonthlyOn25th")
  MonthlyOn26th = new("MonthlyOn26th")
  MonthlyOn27th = new("MonthlyOn27th")
  MonthlyOn28th = new("MonthlyOn28th")
  MonthlyOn29th = new("MonthlyOn29th")
  MonthlyOn2nd = new("MonthlyOn2nd")
  MonthlyOn30th = new("MonthlyOn30th")
  MonthlyOn31st = new("MonthlyOn31st")
  MonthlyOn3rd = new("MonthlyOn3rd")
  MonthlyOn4th = new("MonthlyOn4th")
  MonthlyOn5th = new("MonthlyOn5th")
  MonthlyOn6th = new("MonthlyOn6th")
  MonthlyOn7th = new("MonthlyOn7th")
  MonthlyOn8th = new("MonthlyOn8th")
  MonthlyOn9th = new("MonthlyOn9th")
end

# {urn:ebay:apis:eBLBaseComponents}SummaryWindowPeriodCodeType
class SummaryWindowPeriodCodeType < ::String
  CurrentMonth = new("CurrentMonth")
  CurrentWeek = new("CurrentWeek")
  CustomCode = new("CustomCode")
  Last24Hours = new("Last24Hours")
  Last31Days = new("Last31Days")
  Last60Days = new("Last60Days")
  Last7Days = new("Last7Days")
  LastMonth = new("LastMonth")
  LastWeek = new("LastWeek")
end

# {urn:ebay:apis:eBLBaseComponents}TaskStatusCodeType
class TaskStatusCodeType < ::String
  Complete = new("Complete")
  CustomCode = new("CustomCode")
  Failed = new("Failed")
  InProgress = new("InProgress")
  Pending = new("Pending")
end

# {urn:ebay:apis:eBLBaseComponents}TaxDescriptionCodeType
class TaxDescriptionCodeType < ::String
  CustomCode = new("CustomCode")
  ElectronicWasteRecyclingFee = new("ElectronicWasteRecyclingFee")
  SalesTax = new("SalesTax")
  TireRecyclingFee = new("TireRecyclingFee")
end

# {urn:ebay:apis:eBLBaseComponents}TaxIdentifierAttributeCodeType
class TaxIdentifierAttributeCodeType < ::String
  CustomCode = new("CustomCode")
  IssuingCountry = new("IssuingCountry")
end

# {urn:ebay:apis:eBLBaseComponents}TaxIdentifierCodeType
class TaxIdentifierCodeType < ::String
  CPFTaxID = new("CPFTaxID")
  CodiceFiscale = new("CodiceFiscale")
  CustomCode = new("CustomCode")
  DNI = new("DNI")
  RussianPassport = new("RussianPassport")
  TurkeyID = new("TurkeyID")
end

# {urn:ebay:apis:eBLBaseComponents}TaxTypeCodeType
class TaxTypeCodeType < ::String
  CustomCode = new("CustomCode")
  SalesTax = new("SalesTax")
  WasteRecyclingFee = new("WasteRecyclingFee")
end

# {urn:ebay:apis:eBLBaseComponents}TicketEventTypeCodeType
class TicketEventTypeCodeType < ::String
  Any = new("Any")
  CustomCode = new("CustomCode")
  DE_ComedyAndKabarett = new("DE_ComedyAndKabarett")
  DE_FreizeitAndEvents = new("DE_FreizeitAndEvents")
  DE_KonzerteAndFestivals = new("DE_KonzerteAndFestivals")
  DE_KulturAndKlassik = new("DE_KulturAndKlassik")
  DE_MusicalsAndShows = new("DE_MusicalsAndShows")
  DE_Sonstige = new("DE_Sonstige")
  DE_Sportveranstaltungen = new("DE_Sportveranstaltungen")
  UK_AmusementParks = new("UK_AmusementParks")
  UK_Comedy = new("UK_Comedy")
  UK_ConcertsAndGigs = new("UK_ConcertsAndGigs")
  UK_ConferencesAndSeminars = new("UK_ConferencesAndSeminars")
  UK_ExhibitionsAndShows = new("UK_ExhibitionsAndShows")
  UK_Experiences = new("UK_Experiences")
  UK_Other = new("UK_Other")
  UK_SportingEvents = new("UK_SportingEvents")
  UK_TheatreCinemaAndCircus = new("UK_TheatreCinemaAndCircus")
  US_Concerts = new("US_Concerts")
  US_Movies = new("US_Movies")
  US_Other = new("US_Other")
  US_SportingEvents = new("US_SportingEvents")
  US_Theater = new("US_Theater")
end

# {urn:ebay:apis:eBLBaseComponents}TokenReturnMethodCodeType
class TokenReturnMethodCodeType < ::String
  CustomCode = new("CustomCode")
  FetchToken = new("FetchToken")
  Redirect = new("Redirect")
end

# {urn:ebay:apis:eBLBaseComponents}TokenStatusCodeType
class TokenStatusCodeType < ::String
  Active = new("Active")
  CustomCode = new("CustomCode")
  Expired = new("Expired")
  Invalid = new("Invalid")
  RevokedByApp = new("RevokedByApp")
  RevokedByUser = new("RevokedByUser")
  RevokedByeBay = new("RevokedByeBay")
end

# {urn:ebay:apis:eBLBaseComponents}TopRatedProgramCodeType
class TopRatedProgramCodeType < ::String
  CustomCode = new("CustomCode")
  DE = new("DE")
  Global = new("Global")
  UK = new("UK")
  US = new("US")
end

# {urn:ebay:apis:eBLBaseComponents}TradingRoleCodeType
class TradingRoleCodeType < ::String
  Buyer = new("Buyer")
  CustomCode = new("CustomCode")
  Seller = new("Seller")
end

# {urn:ebay:apis:eBLBaseComponents}TransactionPlatformCodeType
class TransactionPlatformCodeType < ::String
  CustomCode = new("CustomCode")
  EBay = new("eBay")
  Express = new("Express")
  Half = new("Half")
  Shopping = new("Shopping")
  WorldOfGood = new("WorldOfGood")
end

# {urn:ebay:apis:eBLBaseComponents}TransactionReferenceCodeType
class TransactionReferenceCodeType < ::String
  CustomCode = new("CustomCode")
  ExternalTransactionID = new("ExternalTransactionID")
  MandateReferenceNumber = new("MandateReferenceNumber")
end

# {urn:ebay:apis:eBLBaseComponents}UPSRateOptionCodeType
class UPSRateOptionCodeType < ::String
  CustomCode = new("CustomCode")
  UPSDailyRates = new("UPSDailyRates")
  UPSOnDemandRates = new("UPSOnDemandRates")
end

# {urn:ebay:apis:eBLBaseComponents}URLTypeCodeType
class URLTypeCodeType < ::String
  CustomCode = new("CustomCode")
  EBayStoreURL = new("eBayStoreURL")
  LargeLogoURL = new("LargeLogoURL")
  MediumLogoURL = new("MediumLogoURL")
  MyeBayBiddingURL = new("MyeBayBiddingURL")
  MyeBayNotWonURL = new("MyeBayNotWonURL")
  MyeBayURL = new("MyeBayURL")
  MyeBayWatchingURL = new("MyeBayWatchingURL")
  MyeBayWonURL = new("MyeBayWonURL")
  SmallLogoURL = new("SmallLogoURL")
  ViewItemURL = new("ViewItemURL")
  ViewUserURL = new("ViewUserURL")
end

# {urn:ebay:apis:eBLBaseComponents}USPSRateOptionCodeType
class USPSRateOptionCodeType < ::String
  CustomCode = new("CustomCode")
  USPSDiscounted = new("USPSDiscounted")
  USPSRetail = new("USPSRetail")
end

# {urn:ebay:apis:eBLBaseComponents}UnitCodeType
class UnitCodeType < ::String
  Cm = new("cm")
  CustomCode = new("CustomCode")
  Ft = new("ft")
  Gm = new("gm")
  Inches = new("inches")
  Kg = new("kg")
  Lbs = new("lbs")
  Mm = new("mm")
  Oz = new("oz")
end

# {urn:ebay:apis:eBLBaseComponents}UnpaidItemCaseOpenTypeCodeType
class UnpaidItemCaseOpenTypeCodeType < ::String
  Auto = new("Auto")
  CustomCode = new("CustomCode")
  Manual = new("Manual")
end

# {urn:ebay:apis:eBLBaseComponents}UnpaidItemCaseStatusTypeCodeType
class UnpaidItemCaseStatusTypeCodeType < ::String
  ClosedWithPayment = new("ClosedWithPayment")
  ClosedWithoutPayment = new("ClosedWithoutPayment")
  CustomCode = new("CustomCode")
  Open = new("Open")
end

# {urn:ebay:apis:eBLBaseComponents}UnpaidItemStatusTypeCodeType
class UnpaidItemStatusTypeCodeType < ::String
  AwaitingBuyerResponse = new("AwaitingBuyerResponse")
  AwaitingSellerResponse = new("AwaitingSellerResponse")
  CustomCode = new("CustomCode")
  FinalValueFeeCredited = new("FinalValueFeeCredited")
  FinalValueFeeDenied = new("FinalValueFeeDenied")
  FinalValueFeeEligible = new("FinalValueFeeEligible")
  UnpaidItemEligible = new("UnpaidItemEligible")
  UnpaidItemFiled = new("UnpaidItemFiled")
end

# {urn:ebay:apis:eBLBaseComponents}UserIdentityCodeType
class UserIdentityCodeType < ::String
  CustomCode = new("CustomCode")
  EBayPartner = new("eBayPartner")
  EBayUser = new("eBayUser")
end

# {urn:ebay:apis:eBLBaseComponents}UserStatusCodeType
class UserStatusCodeType < ::String
  AccountOnHold = new("AccountOnHold")
  Confirmed = new("Confirmed")
  CreditCardVerify = new("CreditCardVerify")
  CreditCardVerifyHalfOptIn = new("CreditCardVerifyHalfOptIn")
  CreditCardVerifyPassport = new("CreditCardVerifyPassport")
  CustomCode = new("CustomCode")
  Deleted = new("Deleted")
  Ghost = new("Ghost")
  Guest = new("Guest")
  InMaintenance = new("InMaintenance")
  Merged = new("Merged")
  RegistrationCodeMailOut = new("RegistrationCodeMailOut")
  Suspended = new("Suspended")
  TermPending = new("TermPending")
  Unconfirmed = new("Unconfirmed")
  UnconfirmedExpress = new("UnconfirmedExpress")
  UnconfirmedHalfOptIn = new("UnconfirmedHalfOptIn")
  UnconfirmedPassport = new("UnconfirmedPassport")
  Unknown = new("Unknown")
end

# {urn:ebay:apis:eBLBaseComponents}VATStatusCodeType
class VATStatusCodeType < ::String
  CustomCode = new("CustomCode")
  NoVATTax = new("NoVATTax")
  VATExempt = new("VATExempt")
  VATTax = new("VATTax")
end

# {urn:ebay:apis:eBLBaseComponents}ValueFormatCodeType
class ValueFormatCodeType < ::String
  CustomCode = new("CustomCode")
  FullDate = new("FullDate")
  PartialDate = new("PartialDate")
  Year = new("Year")
end

# {urn:ebay:apis:eBLBaseComponents}ValueTypeCodeType
class ValueTypeCodeType < ::String
  CEDULA = new("CEDULA")
  CNPJ = new("CNPJ")
  CPFTaxID = new("CPFTaxID")
  CodiceFiscale = new("CodiceFiscale")
  CustomCode = new("CustomCode")
  DNI = new("DNI")
  Date = new("Date")
  Decimal = new("Decimal")
  DriverLicense = new("DriverLicense")
  EAN = new("EAN")
  ISBN = new("ISBN")
  NIE = new("NIE")
  NIF = new("NIF")
  NIT = new("NIT")
  RussianPassport = new("RussianPassport")
  Text = new("Text")
  TurkeyID = new("TurkeyID")
  UPC = new("UPC")
end

# {urn:ebay:apis:eBLBaseComponents}VariationPictureRuleCodeType
class VariationPictureRuleCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
  Required = new("Required")
end

# {urn:ebay:apis:eBLBaseComponents}VariationSpecificsRuleCodeType
class VariationSpecificsRuleCodeType < ::String
  CustomCode = new("CustomCode")
  Disabled = new("Disabled")
  Enabled = new("Enabled")
end

# {urn:ebay:apis:eBLBaseComponents}VeROItemStatusCodeType
class VeROItemStatusCodeType < ::String
  ClarificationRequired = new("ClarificationRequired")
  CustomCode = new("CustomCode")
  Received = new("Received")
  Removed = new("Removed")
  SubmissionFailed = new("SubmissionFailed")
  Submitted = new("Submitted")
end

# {urn:ebay:apis:eBLBaseComponents}VeROReportPacketStatusCodeType
class VeROReportPacketStatusCodeType < ::String
  CustomCode = new("CustomCode")
  InProcess = new("InProcess")
  Processed = new("Processed")
  Received = new("Received")
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyDurationOptionsCodeType
class WarrantyDurationOptionsCodeType < ::String
  CustomCode = new("CustomCode")
  Months_1 = new("Months_1")
  Months_3 = new("Months_3")
  Months_6 = new("Months_6")
  Years_1 = new("Years_1")
  Years_2 = new("Years_2")
  Years_3 = new("Years_3")
  Years_MoreThan3 = new("Years_MoreThan3")
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyOfferedCodeType
class WarrantyOfferedCodeType < ::String
  CustomCode = new("CustomCode")
  WarrantyOffered = new("WarrantyOffered")
end

# {urn:ebay:apis:eBLBaseComponents}WarrantyTypeOptionsCodeType
class WarrantyTypeOptionsCodeType < ::String
  CustomCode = new("CustomCode")
  DealerWarranty = new("DealerWarranty")
  ManufacturerWarranty = new("ManufacturerWarranty")
  ReplacementWarranty = new("ReplacementWarranty")
end

# {urn:ebay:apis:eBLBaseComponents}WirelessCarrierIDCodeType
class WirelessCarrierIDCodeType < ::String
  ATT = new("ATT")
  Alltel = new("Alltel")
  Amena = new("Amena")
  CincinnatiBell = new("CincinnatiBell")
  Cingular = new("Cingular")
  CustomCode = new("CustomCode")
  Dobson = new("Dobson")
  Leap = new("Leap")
  Movistar = new("Movistar")
  Nextel = new("Nextel")
  Sprint = new("Sprint")
  TMobile = new("TMobile")
  USCellular = new("USCellular")
  Verizon = new("Verizon")
  Vodafone = new("Vodafone")
end


end
